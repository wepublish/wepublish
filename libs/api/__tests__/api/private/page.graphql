fragment MutationPage on Page {
  id

  tags {
    id
    tag
  }

  draft {
    publishedAt
    updatedAt
    revision
  }

  pending {
    publishAt
    revision
  }

  published {
    publishedAt
    updatedAt
    revision
  }

  latest {
    publishedAt
    updatedAt
    slug
    title
    description
    image {
      ...ImageRef
    }
    properties {
      key
      value
      public
    }
    blocks {
      ...FullBlock
    }
  }
}

fragment PageRef on Page {
  id

  createdAt
  modifiedAt

  draft {
    revision
  }

  pending {
    revision
  }

  published {
    publishedAt
    updatedAt
    revision
  }

  latest {
    publishedAt
    updatedAt
    revision
    title
    description
    image {
      ...ImageRef
    }
  }
}

query PageList($filter: String, $cursor: String, $take: Int) {
  pages(take: $take, cursor: $cursor, filter: {title: $filter}) {
    nodes {
      ...PageRef
    }

    pageInfo {
      startCursor
      endCursor
      hasNextPage
      hasPreviousPage
    }

    totalCount
  }
}

mutation CreatePage($input: PageInput!) {
  createPage(input: $input) {
    ...MutationPage
  }
}

mutation UpdatePage($id: String!, $input: PageInput!) {
  updatePage(id: $id, input: $input) {
    ...MutationPage
  }
}

mutation PublishPage(
  $id: String!
  $publishAt: DateTime
  $publishedAt: DateTime
  $updatedAt: DateTime
) {
  publishPage(id: $id, publishAt: $publishAt, publishedAt: $publishedAt, updatedAt: $updatedAt) {
    ...MutationPage
  }
}

mutation UnpublishPage($id: String!) {
  unpublishPage(id: $id) {
    ...MutationPage
  }
}

mutation DeletePage($id: String!) {
  deletePage(id: $id) {
    ...MutationPage
  }
}

query Page($id: String!) {
  page(id: $id) {
    id

    tags {
      id
      tag
      type
    }

    pending {
      publishAt
    }

    published {
      publishedAt
      updatedAt
    }

    latest {
      publishedAt
      updatedAt
      slug
      title
      description
      image {
        ...ImageRef
      }
      properties {
        key
        value
        public
      }
      blocks {
        ...FullBlock
      }
    }
  }
}
