name: Publish docker image

on:
  workflow_call:
    inputs:
      editor_tags:
        required: false
        type: string
      api_tags:
        required: false
        type: string
      migration_tags:
        required: false
        type: string
      storybook_tags:
        required: false
        type: string
      media_tags:
        required: false
        type: string

jobs:
  calculate-base-image-tag:
    name: Calculate hash for base image
    runs-on: ubuntu-latest
    outputs:
      hashed_tag: ${{ steps.hash.outputs.hashed_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Calculate hash of package-lock.json
        id: hash
        run: |
          if [ -f package-lock.json ]; then
            HASH=$(cat package-lock.json Dockerfile | sha256sum | awk '{print $1}')
            echo "::set-output name=hashed_tag::ghcr.io/wepublish/base-image:${HASH}"
          else
            echo "package-lock.json not found, exiting."
            exit 1
          fi

  build-and-push-docker-api:
    name: Build and push api
    runs-on: ubuntu-latest
    needs: calculate-base-image-tag
    env:
      BUILD_IMAGE_TAG: ${{ needs.calculate-base-image-tag.outputs.hashed_tag }}
    if: inputs.api_tags != ''
    steps:
      - uses: actions/checkout@v4
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          target: api
          push: true
          tags: |
            ${{ inputs.api_tags }}
          build-args:
            BUILD_IMAGE=${{ env.BUILD_IMAGE_TAG }}
  build-and-push-docker-editor:
    name: Build and push editor
    runs-on: ubuntu-latest
    needs: calculate-base-image-tag
    env:
      BUILD_IMAGE_TAG: ${{ needs.calculate-base-image-tag.outputs.hashed_tag }}
    if: inputs.editor_tags != ''
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          target: editor
          push: true
          tags: |
            ${{ inputs.editor_tags }}
          build-args:
            BUILD_IMAGE=${{ env.BUILD_IMAGE_TAG }}
  build-and-push-docker-migration:
    name: Build and push migration
    runs-on: ubuntu-latest
    if: inputs.migration_tags != ''
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          target: migration
          push: true
          tags: |
            ${{ inputs.migration_tags }}
  build-and-push-docker-media:
    name: Build and push media
    runs-on: ubuntu-latest
    if: inputs.media_tags != ''
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          target: media
          push: true
          tags: |
            ${{ inputs.media_tags }}
  build-and-push-storybook:
    name: Build and push storybook
    runs-on: ubuntu-latest
    needs: calculate-base-image-tag
    env:
      BUILD_IMAGE_TAG: ${{ needs.calculate-base-image-tag.outputs.hashed_tag }}
    if: inputs.storybook_tags != ''
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          target: storybook
          push: true
          tags: |
            ${{ inputs.storybook_tags }}
          build-args:
            BUILD_IMAGE=${{ env.BUILD_IMAGE_TAG }}