name: Deployment

on: [pull_request]

jobs:
  deployment:
    if: ${{ github.event.pull_request.base.repo.url == github.event.pull_request.head.repo.url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCLOUD_AUTH_KEY }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: eu.gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${{ github.repository }}/main:${{ github.sha }}
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Create manifest
        env:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
        run: |
          node ./config/create-gke-manifest.js
          ls -al ./kubernetesConfigs
      - name: Prepare and authenticate kubectl
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: funiciello-dev-cluster
          location: europe-west6
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          credentials: ${{ secrets.GCLOUD_AUTH_KEY }}
      - name: Deploy to kubernetes
        run: kubectl apply -f ./kubernetesConfigs
      - name: Slack Notification
        if: success()
        env:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_WP_DEV_CHANNEL }}
        run: |
          cd ./config
          yarn install
          node ./notify.js
#  e2eTest:
#    needs: deployment
#    name: Runs e2e Test on Feature instance
#    runs-on: self-hosted
#    container:
#      image: testcafe/testcafe
#      options: --user root
#    env:
#      BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
#    steps:
#      - uses: actions/checkout@v2
#      - name: Sleep for 60s
#        uses: juliangruber/sleep-action@v1
#        with:
#          time: 60s
#      - name: Run E2E tests
#        if: always()
#        run: /opt/testcafe/docker/testcafe-docker.sh chromium:headless tests/e2e.ts --assertion-timeout 10000
