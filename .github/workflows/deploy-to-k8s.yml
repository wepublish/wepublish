name: Deployment

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string

jobs:
  deployment:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm

      - name: Create manifest
        env:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
          WEPUBLISH_IMAGE: ${{ inputs.image }}
        run: |
          node ./config/create-gke-manifest.js
          ls -al ./kubernetesConfigs

      - name: Authenticate kubectl
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}

      - name: Prepare kubectl
        uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          cluster_name: funiciello-dev-cluster
          location: europe-west6

      - name: Deploy to kubernetes
        run: kubectl apply -f ./kubernetesConfigs

  notify:
    needs: deployment
    if: ${{ needs.deployment.result == 'success' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm

      - name: Create Deployment Text
        id: deploymentComment
        env:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          cd ./config
          npm ci
          OUTPUT=$(node ./notify-github.js)
          OUTPUT="${OUTPUT//$'\n'/'%0A'}"
          OUTPUT="${OUTPUT//$'\r'/'%0D'}"
          echo "::set-OUTPUT name=result::$OUTPUT"

      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ${{ steps.deploymentComment.outputs.result }}

      - name: Notify Jira
        env:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_BODY: ${{ github.event.pull_request.body }}
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          cd ./config
          npm ci
          node ./notify-jira.js
