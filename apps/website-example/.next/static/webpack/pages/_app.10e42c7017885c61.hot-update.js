"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "../../libs/comments/website/src/lib/comment-list/comment-list-item.tsx":
/*!******************************************************************************!*\
  !*** ../../libs/comments/website/src/lib/comment-list/comment-list-item.tsx ***!
  \******************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CommentListItem\": function() { return /* binding */ CommentListItem; },\n/* harmony export */   \"CommentListItemActions\": function() { return /* binding */ CommentListItemActions; },\n/* harmony export */   \"CommentListItemChildren\": function() { return /* binding */ CommentListItemChildren; },\n/* harmony export */   \"CommentListItemContent\": function() { return /* binding */ CommentListItemContent; },\n/* harmony export */   \"CommentListItemFlair\": function() { return /* binding */ CommentListItemFlair; },\n/* harmony export */   \"CommentListItemHeader\": function() { return /* binding */ CommentListItemHeader; },\n/* harmony export */   \"CommentListItemHeaderContent\": function() { return /* binding */ CommentListItemHeaderContent; },\n/* harmony export */   \"CommentListItemName\": function() { return /* binding */ CommentListItemName; },\n/* harmony export */   \"CommentListItemVerifiedBadge\": function() { return /* binding */ CommentListItemVerifiedBadge; },\n/* harmony export */   \"CommentListItemWrapper\": function() { return /* binding */ CommentListItemWrapper; }\n/* harmony export */ });\n/* harmony import */ var _emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/react/jsx-dev-runtime */ \"../../node_modules/@emotion/react/jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/react */ \"../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material */ \"../../node_modules/@mui/material/index.js\");\n/* harmony import */ var _wepublish_authentication_website__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wepublish/authentication/website */ \"../../libs/authentication/website/src/index.ts\");\n/* harmony import */ var _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wepublish/website/api */ \"../../libs/website/api/src/index.ts\");\n/* harmony import */ var _wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wepublish/website/builder */ \"../../libs/website/builder/src/index.ts\");\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ramda */ \"../../node_modules/ramda/es/index.js\");\n/* harmony import */ var react_icons_md__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-icons/md */ \"../../node_modules/react-icons/md/index.esm.js\");\n/* harmony import */ var _write_comment_write_comment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../write-comment/write-comment */ \"../../libs/comments/website/src/lib/write-comment/write-comment.tsx\");\n/* harmony import */ var _comment_list_state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./comment-list.state */ \"../../libs/comments/website/src/lib/comment-list/comment-list.state.tsx\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nvar _s2 = $RefreshSig$(), _s11 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nconst avatarStyles = /*#__PURE__*/ (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.css)(\"width:46px;height:46px;border-radius:50%;\", \"avatarStyles\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"label:avatarStyles\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst CommentListItemWrapper = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"article\", {\n    target: \"e1l2e89y0\",\n    label: \"CommentListItemWrapper\",\n    target: \"e1l2e89y0\",\n    label: \"CommentListItemWrapper\"\n})(\"display:grid;gap:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(2);\n}, \";\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c = CommentListItemWrapper;\nconst CommentListItemHeader = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"header\", {\n    target: \"e1l2e89y1\",\n    label: \"CommentListItemHeader\",\n    target: \"e1l2e89y1\",\n    label: \"CommentListItemHeader\"\n})(\"display:grid;grid-template-columns:max-content 1fr;gap:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(2);\n}, \";align-items:center;\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c1 = CommentListItemHeader;\nconst CommentListItemHeaderContent = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y2\",\n    label: \"CommentListItemHeaderContent\",\n    target: \"e1l2e89y2\",\n    label: \"CommentListItemHeaderContent\"\n})(\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c2 = CommentListItemHeaderContent;\nconst CommentListItemName = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y3\",\n    label: \"CommentListItemName\",\n    target: \"e1l2e89y3\",\n    label: \"CommentListItemName\"\n})(\"display:grid;grid-auto-flow:column;grid-auto-columns:max-content;gap:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(1);\n}, \";align-items:center;font-weight:\", (param)=>{\n    let { theme  } = param;\n    return theme.typography.fontWeightBold;\n}, \";\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c3 = CommentListItemName;\nconst CommentListItemVerifiedBadge = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y4\",\n    label: \"CommentListItemVerifiedBadge\",\n    target: \"e1l2e89y4\",\n    label: \"CommentListItemVerifiedBadge\"\n})(\"display:grid;align-items:center;color:\", (param)=>{\n    let { theme  } = param;\n    return theme.palette.info.main;\n}, \";\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c4 = CommentListItemVerifiedBadge;\nconst CommentListItemFlair = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y5\",\n    label: \"CommentListItemFlair\",\n    target: \"e1l2e89y5\",\n    label: \"CommentListItemFlair\"\n})(\"font-size:0.75em;\", (param)=>{\n    let { isGuest , theme  } = param;\n    return isGuest && /*#__PURE__*/ (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.css)(\"color:\", theme.palette.primary.main, \";\", \"CommentListItemFlair\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n}, \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2l0cnVsaWEvRG9jdW1lbnRzL3dlcHVibGlzaC9saWJzL2NvbW1lbnRzL3dlYnNpdGUvc3JjL2xpYi9jb21tZW50LWxpc3QvY29tbWVudC1saXN0LWl0ZW0udHN4Iiwic291cmNlcyI6WyIvVXNlcnMvaXRydWxpYS9Eb2N1bWVudHMvd2VwdWJsaXNoL2xpYnMvY29tbWVudHMvd2Vic2l0ZS9zcmMvbGliL2NvbW1lbnQtbGlzdC9jb21tZW50LWxpc3QtaXRlbS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL3JlYWN0J1xuaW1wb3J0IHtzdHlsZWR9IGZyb20gJ0BtdWkvbWF0ZXJpYWwnXG5pbXBvcnQge3VzZVVzZXJ9IGZyb20gJ0B3ZXB1Ymxpc2gvYXV0aGVudGljYXRpb24vd2Vic2l0ZSdcbmltcG9ydCB7Q29tbWVudEF1dGhvclR5cGUsIENvbW1lbnRTdGF0ZX0gZnJvbSAnQHdlcHVibGlzaC93ZWJzaXRlL2FwaSdcbmltcG9ydCB7QnVpbGRlckNvbW1lbnRMaXN0SXRlbVByb3BzLCB1c2VXZWJzaXRlQnVpbGRlcn0gZnJvbSAnQHdlcHVibGlzaC93ZWJzaXRlL2J1aWxkZXInXG5pbXBvcnQge2NvbmR9IGZyb20gJ3JhbWRhJ1xuaW1wb3J0IHtNZEVkaXQsIE1kUGVyc29uLCBNZFJlcGx5LCBNZFZlcmlmaWVkfSBmcm9tICdyZWFjdC1pY29ucy9tZCdcbmltcG9ydCB7V3JpdGVDb21tZW50fSBmcm9tICcuLi93cml0ZS1jb21tZW50L3dyaXRlLWNvbW1lbnQnXG5pbXBvcnQge2dldFN0YXRlRm9yRWRpdG9yfSBmcm9tICcuL2NvbW1lbnQtbGlzdC5zdGF0ZSdcblxuY29uc3QgYXZhdGFyU3R5bGVzID0gY3NzYFxuICB3aWR0aDogNDZweDtcbiAgaGVpZ2h0OiA0NnB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG5gXG5cbmV4cG9ydCBjb25zdCBDb21tZW50TGlzdEl0ZW1XcmFwcGVyID0gc3R5bGVkKCdhcnRpY2xlJylgXG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdhcDogJHsoe3RoZW1lfSkgPT4gdGhlbWUuc3BhY2luZygyKX07XG5gXG5cbmV4cG9ydCBjb25zdCBDb21tZW50TGlzdEl0ZW1IZWFkZXIgPSBzdHlsZWQoJ2hlYWRlcicpYFxuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IG1heC1jb250ZW50IDFmcjtcbiAgZ2FwOiAkeyh7dGhlbWV9KSA9PiB0aGVtZS5zcGFjaW5nKDIpfTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbmBcblxuZXhwb3J0IGNvbnN0IENvbW1lbnRMaXN0SXRlbUhlYWRlckNvbnRlbnQgPSBzdHlsZWQoJ2RpdicpYGBcblxuZXhwb3J0IGNvbnN0IENvbW1lbnRMaXN0SXRlbU5hbWUgPSBzdHlsZWQoJ2RpdicpYFxuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tZmxvdzogY29sdW1uO1xuICBncmlkLWF1dG8tY29sdW1uczogbWF4LWNvbnRlbnQ7XG4gIGdhcDogJHsoe3RoZW1lfSkgPT4gdGhlbWUuc3BhY2luZygxKX07XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiAkeyh7dGhlbWV9KSA9PiB0aGVtZS50eXBvZ3JhcGh5LmZvbnRXZWlnaHRCb2xkfTtcbmBcblxuZXhwb3J0IGNvbnN0IENvbW1lbnRMaXN0SXRlbVZlcmlmaWVkQmFkZ2UgPSBzdHlsZWQoJ2RpdicpYFxuICBkaXNwbGF5OiBncmlkO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogJHsoe3RoZW1lfSkgPT4gdGhlbWUucGFsZXR0ZS5pbmZvLm1haW59O1xuYFxuXG5leHBvcnQgY29uc3QgQ29tbWVudExpc3RJdGVtRmxhaXIgPSBzdHlsZWQoJ2RpdicpPHtpc0d1ZXN0OiBib29sZWFufT5gXG4gIGZvbnQtc2l6ZTogMC43NWVtO1xuXG4gICR7KHtpc0d1ZXN0LCB0aGVtZX0pID0+XG4gICAgaXNHdWVzdCAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke3RoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWlufTtcbiAgICBgfVxuYFxuXG5leHBvcnQgY29uc3QgQ29tbWVudExpc3RJdGVtQ29udGVudCA9IHN0eWxlZCgnZGl2JylgYFxuXG5leHBvcnQgY29uc3QgQ29tbWVudExpc3RJdGVtQ2hpbGRyZW4gPSBzdHlsZWQoJ2FzaWRlJylgXG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdhcDogJHsoe3RoZW1lfSkgPT4gdGhlbWUuc3BhY2luZygzKX07XG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzAwMDtcbiAgcGFkZGluZzogJHsoe3RoZW1lfSkgPT4gdGhlbWUuc3BhY2luZygzKX07XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG5gXG5cbmV4cG9ydCBjb25zdCBDb21tZW50TGlzdEl0ZW1BY3Rpb25zID0gc3R5bGVkKCdkaXYnKWBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgZ2FwOiAkeyh7dGhlbWV9KSA9PiB0aGVtZS5zcGFjaW5nKDEpfTtcbmBcblxuZXhwb3J0IGNvbnN0IENvbW1lbnRMaXN0SXRlbSA9ICh7XG4gIGlkLFxuICBjbGFzc05hbWUsXG4gIHRleHQsXG4gIGF1dGhvclR5cGUsXG4gIHVzZXIsXG4gIGd1ZXN0VXNlckltYWdlLFxuICBndWVzdFVzZXJuYW1lLFxuICB0aXRsZSxcbiAgc291cmNlLFxuICBzdGF0ZSxcbiAgY2hpbGRyZW4sXG4gIGFub255bW91c0NhbkNvbW1lbnQsXG4gIGFub255bW91c0NhblJhdGUsXG4gIHVzZXJDYW5FZGl0LFxuICBtYXhDb21tZW50TGVuZ3RoLFxuICBjaGFsbGVuZ2UsXG4gIGFkZCxcbiAgb25BZGRDb21tZW50LFxuICBlZGl0LFxuICBvbkVkaXRDb21tZW50LFxuICBvcGVuRWRpdG9yc1N0YXRlOiBbb3BlbldyaXRlQ29tbWVudHMsIGRpc3BhdGNoXVxufTogQnVpbGRlckNvbW1lbnRMaXN0SXRlbVByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBDb21tZW50TGlzdEl0ZW06IEJ1aWxkZXJDb21tZW50TGlzdEl0ZW0sXG4gICAgZWxlbWVudHM6IHtQYXJhZ3JhcGgsIEltYWdlLCBCdXR0b259LFxuICAgIGJsb2Nrczoge1JpY2hUZXh0fVxuICB9ID0gdXNlV2Vic2l0ZUJ1aWxkZXIoKVxuXG4gIGNvbnN0IHtoYXNVc2VyOiBoYXNMb2dnZWRJblVzZXIsIHVzZXI6IGxvZ2dlZEluVXNlcn0gPSB1c2VVc2VyKClcblxuICBjb25zdCBpbWFnZSA9IHVzZXI/LmltYWdlID8/IGd1ZXN0VXNlckltYWdlXG4gIGNvbnN0IGlzVmVyaWZpZWQgPSBhdXRob3JUeXBlID09PSBDb21tZW50QXV0aG9yVHlwZS5WZXJpZmllZFVzZXJcbiAgY29uc3QgaXNHdWVzdCA9IGF1dGhvclR5cGUgPT09IENvbW1lbnRBdXRob3JUeXBlLkd1ZXN0VXNlclxuICBjb25zdCBmbGFpciA9IHVzZXI/LmZsYWlyID8/IHNvdXJjZVxuICBjb25zdCBuYW1lID0gdXNlciA/IGAke3VzZXIucHJlZmVycmVkTmFtZSB8fCB1c2VyLmZpcnN0TmFtZX0gJHt1c2VyLm5hbWV9YCA6IGd1ZXN0VXNlcm5hbWVcblxuICBjb25zdCBjYW5FZGl0ID1cbiAgICBoYXNMb2dnZWRJblVzZXIgJiZcbiAgICBsb2dnZWRJblVzZXI/LmlkID09PSB1c2VyPy5pZCAmJlxuICAgICh1c2VyQ2FuRWRpdCB8fCBzdGF0ZSA9PT0gQ29tbWVudFN0YXRlLlBlbmRpbmdVc2VyQ2hhbmdlcylcbiAgY29uc3QgY2FuUmVwbHkgPSBhbm9ueW1vdXNDYW5Db21tZW50IHx8IGhhc0xvZ2dlZEluVXNlclxuICBjb25zdCBoYXNBY3Rpb25zID0gY2FuRWRpdCB8fCBjYW5SZXBseVxuXG4gIGNvbnN0IHNob3dSZXBseSA9IGdldFN0YXRlRm9yRWRpdG9yKG9wZW5Xcml0ZUNvbW1lbnRzKSgnYWRkJywgaWQpXG4gIGNvbnN0IHNob3dFZGl0ID0gZ2V0U3RhdGVGb3JFZGl0b3Iob3BlbldyaXRlQ29tbWVudHMpKCdlZGl0JywgaWQpXG5cbiAgcmV0dXJuIChcbiAgICA8Q29tbWVudExpc3RJdGVtV3JhcHBlciBjbGFzc05hbWU9e2NsYXNzTmFtZX0+XG4gICAgICA8Q29tbWVudExpc3RJdGVtSGVhZGVyPlxuICAgICAgICB7aW1hZ2UgJiYgPEltYWdlIGltYWdlPXtpbWFnZX0gc3F1YXJlIGNzcz17YXZhdGFyU3R5bGVzfSAvPn1cbiAgICAgICAgeyFpbWFnZSAmJiA8TWRQZXJzb24gY3NzPXthdmF0YXJTdHlsZXN9IC8+fVxuXG4gICAgICAgIDxDb21tZW50TGlzdEl0ZW1IZWFkZXJDb250ZW50PlxuICAgICAgICAgIDxDb21tZW50TGlzdEl0ZW1OYW1lPlxuICAgICAgICAgICAge25hbWV9XG5cbiAgICAgICAgICAgIHtpc1ZlcmlmaWVkICYmIChcbiAgICAgICAgICAgICAgPENvbW1lbnRMaXN0SXRlbVZlcmlmaWVkQmFkZ2U+XG4gICAgICAgICAgICAgICAgPE1kVmVyaWZpZWQgdGl0bGU9XCJNZW1iZXJcIiAvPlxuICAgICAgICAgICAgICA8L0NvbW1lbnRMaXN0SXRlbVZlcmlmaWVkQmFkZ2U+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvQ29tbWVudExpc3RJdGVtTmFtZT5cblxuICAgICAgICAgIHtmbGFpciAmJiA8Q29tbWVudExpc3RJdGVtRmxhaXIgaXNHdWVzdD17aXNHdWVzdH0+e2ZsYWlyfTwvQ29tbWVudExpc3RJdGVtRmxhaXI+fVxuICAgICAgICA8L0NvbW1lbnRMaXN0SXRlbUhlYWRlckNvbnRlbnQ+XG4gICAgICA8L0NvbW1lbnRMaXN0SXRlbUhlYWRlcj5cblxuICAgICAgPENvbW1lbnRMaXN0SXRlbVN0YXRlV2FybmluZ3Mgc3RhdGU9e3N0YXRlfSAvPlxuXG4gICAgICB7IXNob3dFZGl0ICYmIChcbiAgICAgICAgPENvbW1lbnRMaXN0SXRlbUNvbnRlbnQ+XG4gICAgICAgICAge3RpdGxlICYmIChcbiAgICAgICAgICAgIDxQYXJhZ3JhcGggY29tcG9uZW50PVwiaDFcIiBndXR0ZXJCb3R0b209e2ZhbHNlfT5cbiAgICAgICAgICAgICAgPHN0cm9uZz57dGl0bGV9PC9zdHJvbmc+XG4gICAgICAgICAgICA8L1BhcmFncmFwaD5cbiAgICAgICAgICApfVxuICAgICAgICAgIDxSaWNoVGV4dCByaWNoVGV4dD17dGV4dCA/PyBbXX0gLz5cbiAgICAgICAgPC9Db21tZW50TGlzdEl0ZW1Db250ZW50PlxuICAgICAgKX1cblxuICAgICAge3Nob3dFZGl0ICYmIChcbiAgICAgICAgPFdyaXRlQ29tbWVudFxuICAgICAgICAgIHRpdGxlPXt0aXRsZX1cbiAgICAgICAgICB0ZXh0PXt0ZXh0fVxuICAgICAgICAgIG9uQ2FuY2VsPXsoKSA9PlxuICAgICAgICAgICAgZGlzcGF0Y2goe1xuICAgICAgICAgICAgICB0eXBlOiAnZWRpdCcsXG4gICAgICAgICAgICAgIGFjdGlvbjogJ2Nsb3NlJyxcbiAgICAgICAgICAgICAgY29tbWVudElkOiBpZFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9XG4gICAgICAgICAgb25TdWJtaXQ9e2RhdGEgPT4gb25FZGl0Q29tbWVudCh7Li4uZGF0YSwgaWR9KX1cbiAgICAgICAgICBtYXhDb21tZW50TGVuZ3RoPXttYXhDb21tZW50TGVuZ3RofVxuICAgICAgICAgIGVycm9yPXtlZGl0LmVycm9yfVxuICAgICAgICAgIGxvYWRpbmc9e2VkaXQubG9hZGluZ31cbiAgICAgICAgLz5cbiAgICAgICl9XG5cbiAgICAgIHtoYXNBY3Rpb25zICYmIChcbiAgICAgICAgPENvbW1lbnRMaXN0SXRlbUFjdGlvbnM+XG4gICAgICAgICAge2NhblJlcGx5ICYmIChcbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgc3RhcnRJY29uPXs8TWRSZXBseSAvPn1cbiAgICAgICAgICAgICAgdmFyaWFudD1cInRleHRcIlxuICAgICAgICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PlxuICAgICAgICAgICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6ICdhZGQnLFxuICAgICAgICAgICAgICAgICAgYWN0aW9uOiAnb3BlbicsXG4gICAgICAgICAgICAgICAgICBjb21tZW50SWQ6IGlkXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgfT5cbiAgICAgICAgICAgICAgQW50d29ydGVuXG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICApfVxuXG4gICAgICAgICAge2NhbkVkaXQgJiYgKFxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICBzdGFydEljb249ezxNZEVkaXQgLz59XG4gICAgICAgICAgICAgIHZhcmlhbnQ9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT5cbiAgICAgICAgICAgICAgICBkaXNwYXRjaCh7XG4gICAgICAgICAgICAgICAgICB0eXBlOiAnZWRpdCcsXG4gICAgICAgICAgICAgICAgICBhY3Rpb246ICdvcGVuJyxcbiAgICAgICAgICAgICAgICAgIGNvbW1lbnRJZDogaWRcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICB9PlxuICAgICAgICAgICAgICBFZGl0aWVyZW5cbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvQ29tbWVudExpc3RJdGVtQWN0aW9ucz5cbiAgICAgICl9XG5cbiAgICAgIHtzaG93UmVwbHkgJiYgKFxuICAgICAgICA8V3JpdGVDb21tZW50XG4gICAgICAgICAgb25DYW5jZWw9eygpID0+XG4gICAgICAgICAgICBkaXNwYXRjaCh7XG4gICAgICAgICAgICAgIHR5cGU6ICdhZGQnLFxuICAgICAgICAgICAgICBhY3Rpb246ICdjbG9zZScsXG4gICAgICAgICAgICAgIGNvbW1lbnRJZDogaWRcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfVxuICAgICAgICAgIG9uU3VibWl0PXtkYXRhID0+IG9uQWRkQ29tbWVudCh7Li4uZGF0YSwgcGFyZW50SUQ6IGlkfSl9XG4gICAgICAgICAgbWF4Q29tbWVudExlbmd0aD17bWF4Q29tbWVudExlbmd0aH1cbiAgICAgICAgICBjaGFsbGVuZ2U9e2NoYWxsZW5nZX1cbiAgICAgICAgICBlcnJvcj17YWRkLmVycm9yfVxuICAgICAgICAgIGxvYWRpbmc9e2FkZC5sb2FkaW5nfVxuICAgICAgICAvPlxuICAgICAgKX1cblxuICAgICAgeyEhY2hpbGRyZW4/Lmxlbmd0aCAmJiAoXG4gICAgICAgIDxDb21tZW50TGlzdEl0ZW1DaGlsZHJlbj5cbiAgICAgICAgICB7Y2hpbGRyZW4ubWFwKGNoaWxkID0+IChcbiAgICAgICAgICAgIDxCdWlsZGVyQ29tbWVudExpc3RJdGVtXG4gICAgICAgICAgICAgIGtleT17Y2hpbGQuaWR9XG4gICAgICAgICAgICAgIHsuLi5jaGlsZH1cbiAgICAgICAgICAgICAgb3BlbkVkaXRvcnNTdGF0ZT17W29wZW5Xcml0ZUNvbW1lbnRzLCBkaXNwYXRjaF19XG4gICAgICAgICAgICAgIGFkZD17YWRkfVxuICAgICAgICAgICAgICBvbkFkZENvbW1lbnQ9e29uQWRkQ29tbWVudH1cbiAgICAgICAgICAgICAgZWRpdD17ZWRpdH1cbiAgICAgICAgICAgICAgb25FZGl0Q29tbWVudD17b25FZGl0Q29tbWVudH1cbiAgICAgICAgICAgICAgY2hhbGxlbmdlPXtjaGFsbGVuZ2V9XG4gICAgICAgICAgICAgIGFub255bW91c0NhbkNvbW1lbnQ9e2Fub255bW91c0NhbkNvbW1lbnR9XG4gICAgICAgICAgICAgIGFub255bW91c0NhblJhdGU9e2Fub255bW91c0NhblJhdGV9XG4gICAgICAgICAgICAgIHVzZXJDYW5FZGl0PXt1c2VyQ2FuRWRpdH1cbiAgICAgICAgICAgICAgbWF4Q29tbWVudExlbmd0aD17bWF4Q29tbWVudExlbmd0aH1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L0NvbW1lbnRMaXN0SXRlbUNoaWxkcmVuPlxuICAgICAgKX1cbiAgICA8L0NvbW1lbnRMaXN0SXRlbVdyYXBwZXI+XG4gIClcbn1cblxuY29uc3QgQ29tbWVudExpc3RJdGVtU3RhdGVXYXJuaW5ncyA9IChwcm9wczogUGljazxCdWlsZGVyQ29tbWVudExpc3RJdGVtUHJvcHMsICdzdGF0ZSc+KSA9PiB7XG4gIGNvbnN0IHtcbiAgICBlbGVtZW50czoge0FsZXJ0fVxuICB9ID0gdXNlV2Vic2l0ZUJ1aWxkZXIoKVxuXG4gIHJldHVybiBjb25kKFtcbiAgICBbXG4gICAgICAoe3N0YXRlfSkgPT4gc3RhdGUgPT09IENvbW1lbnRTdGF0ZS5QZW5kaW5nQXBwcm92YWwsXG4gICAgICAoKSA9PiA8QWxlcnQgc2V2ZXJpdHk9XCJpbmZvXCI+S29tbWVudGFyIHdhcnRldCBhdWYgRnJlaXNjaGFsdHVuZy48L0FsZXJ0PlxuICAgIF0sXG4gICAgW1xuICAgICAgKHtzdGF0ZX0pID0+IHN0YXRlID09PSBDb21tZW50U3RhdGUuUGVuZGluZ1VzZXJDaGFuZ2VzLFxuICAgICAgKCkgPT4gPEFsZXJ0IHNldmVyaXR5PVwid2FybmluZ1wiPktvbW1lbnRhciBtdXNzIGVkaXRpZXJ0IHdlcmRlbiBiZXZvciBGcmVpc2NoYWx0dW5nLjwvQWxlcnQ+XG4gICAgXSxcbiAgICBbXG4gICAgICAoe3N0YXRlfSkgPT4gc3RhdGUgPT09IENvbW1lbnRTdGF0ZS5SZWplY3RlZCxcbiAgICAgICgpID0+IDxBbGVydCBzZXZlcml0eT1cImVycm9yXCI+S29tbWVudGFyIHd1cmRlIG5pY2h0IGZyZWlnZXNjaGFsdGVuLjwvQWxlcnQ+XG4gICAgXVxuICBdKShwcm9wcylcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2Q29DIn0= */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c5 = CommentListItemFlair;\nconst CommentListItemContent = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y6\",\n    label: \"CommentListItemContent\",\n    target: \"e1l2e89y6\",\n    label: \"CommentListItemContent\"\n})(\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c6 = CommentListItemContent;\nconst CommentListItemChildren = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"aside\", {\n    target: \"e1l2e89y7\",\n    label: \"CommentListItemChildren\",\n    target: \"e1l2e89y7\",\n    label: \"CommentListItemChildren\"\n})(\"display:grid;gap:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(3);\n}, \";border-left:2px solid #000;padding:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(3);\n}, \";padding-right:0;\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c7 = CommentListItemChildren;\nconst CommentListItemActions = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y8\",\n    label: \"CommentListItemActions\",\n    target: \"e1l2e89y8\",\n    label: \"CommentListItemActions\"\n})(\"display:flex;flex-flow:row wrap;gap:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(1);\n}, \";\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c8 = CommentListItemActions;\nconst CommentListItem = (param)=>{\n    _s();\n    let { id , className , text , authorType , user , guestUserImage , guestUsername , title , source , state , children , anonymousCanComment , anonymousCanRate , userCanEdit , maxCommentLength , challenge , add , onAddComment , edit , onEditComment , openEditorsState: [openWriteComments, dispatch]  } = param;\n    _s2();\n    const { CommentListItem: BuilderCommentListItem , elements: { Paragraph , Image , Button  } , blocks: { RichText  }  } = (0,_wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder)();\n    const { hasUser: hasLoggedInUser , user: loggedInUser  } = (0,_wepublish_authentication_website__WEBPACK_IMPORTED_MODULE_0__.useUser)();\n    var _user_image;\n    const image = (_user_image = user === null || user === void 0 ? void 0 : user.image) !== null && _user_image !== void 0 ? _user_image : guestUserImage;\n    const isVerified = authorType === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentAuthorType.VerifiedUser;\n    const isGuest = authorType === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentAuthorType.GuestUser;\n    var _user_flair;\n    const flair = (_user_flair = user === null || user === void 0 ? void 0 : user.flair) !== null && _user_flair !== void 0 ? _user_flair : source;\n    const name = user ? \"\".concat(user.preferredName || user.firstName, \" \").concat(user.name) : guestUsername;\n    const canEdit = hasLoggedInUser && (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id) === (user === null || user === void 0 ? void 0 : user.id) && (userCanEdit || state === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentState.PendingUserChanges);\n    const canReply = anonymousCanComment || hasLoggedInUser;\n    const hasActions = canEdit || canReply;\n    const showReply = (0,_comment_list_state__WEBPACK_IMPORTED_MODULE_5__.getStateForEditor)(openWriteComments)(\"add\", id);\n    const showEdit = (0,_comment_list_state__WEBPACK_IMPORTED_MODULE_5__.getStateForEditor)(openWriteComments)(\"edit\", id);\n    return /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemWrapper, {\n        className: className,\n        children: [\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemHeader, {\n                children: [\n                    image && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Image, {\n                        image: image,\n                        square: true,\n                        css: avatarStyles\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 122,\n                        columnNumber: 19\n                    }, undefined),\n                    !image && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(react_icons_md__WEBPACK_IMPORTED_MODULE_9__.MdPerson, {\n                        css: avatarStyles\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 123,\n                        columnNumber: 20\n                    }, undefined),\n                    /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemHeaderContent, {\n                        children: [\n                            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemName, {\n                                children: [\n                                    name,\n                                    isVerified && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemVerifiedBadge, {\n                                        children: /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(react_icons_md__WEBPACK_IMPORTED_MODULE_9__.MdVerified, {\n                                            title: \"Member\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                                            lineNumber: 131,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                                        lineNumber: 130,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                                lineNumber: 126,\n                                columnNumber: 11\n                            }, undefined),\n                            flair && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemFlair, {\n                                isGuest: isGuest,\n                                children: flair\n                            }, void 0, false, {\n                                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                                lineNumber: 136,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 125,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 121,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemStateWarnings, {\n                state: state\n            }, void 0, false, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 140,\n                columnNumber: 7\n            }, undefined),\n            !showEdit && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemContent, {\n                children: [\n                    title && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Paragraph, {\n                        component: \"h1\",\n                        gutterBottom: false,\n                        children: /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(\"strong\", {\n                            children: title\n                        }, void 0, false, {\n                            fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                            lineNumber: 146,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 145,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(RichText, {\n                        richText: text !== null && text !== void 0 ? text : []\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 149,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 143,\n                columnNumber: 9\n            }, undefined),\n            showEdit && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(_write_comment_write_comment__WEBPACK_IMPORTED_MODULE_4__.WriteComment, {\n                title: title,\n                text: text,\n                onCancel: ()=>dispatch({\n                        type: \"edit\",\n                        action: \"close\",\n                        commentId: id\n                    }),\n                onSubmit: (data)=>onEditComment({\n                        ...data,\n                        id\n                    }),\n                maxCommentLength: maxCommentLength,\n                error: edit.error,\n                loading: edit.loading\n            }, void 0, false, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 154,\n                columnNumber: 9\n            }, undefined),\n            hasActions && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemActions, {\n                children: [\n                    canReply && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Button, {\n                        startIcon: /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(react_icons_md__WEBPACK_IMPORTED_MODULE_9__.MdReply, {}, void 0, false, void 0, void 0),\n                        variant: \"text\",\n                        size: \"small\",\n                        onClick: ()=>dispatch({\n                                type: \"add\",\n                                action: \"open\",\n                                commentId: id\n                            }),\n                        children: \"Antworten\"\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 174,\n                        columnNumber: 13\n                    }, undefined),\n                    canEdit && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Button, {\n                        startIcon: /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(react_icons_md__WEBPACK_IMPORTED_MODULE_9__.MdEdit, {}, void 0, false, void 0, void 0),\n                        variant: \"text\",\n                        size: \"small\",\n                        onClick: ()=>dispatch({\n                                type: \"edit\",\n                                action: \"open\",\n                                commentId: id\n                            }),\n                        children: \"Editieren\"\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 190,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 172,\n                columnNumber: 9\n            }, undefined),\n            showReply && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(_write_comment_write_comment__WEBPACK_IMPORTED_MODULE_4__.WriteComment, {\n                onCancel: ()=>dispatch({\n                        type: \"add\",\n                        action: \"close\",\n                        commentId: id\n                    }),\n                onSubmit: (data)=>onAddComment({\n                        ...data,\n                        parentID: id\n                    }),\n                maxCommentLength: maxCommentLength,\n                challenge: challenge,\n                error: add.error,\n                loading: add.loading\n            }, void 0, false, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 208,\n                columnNumber: 9\n            }, undefined),\n            !!(children === null || children === void 0 ? void 0 : children.length) && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemChildren, {\n                children: children.map((child)=>/*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(BuilderCommentListItem, {\n                        ...child,\n                        openEditorsState: [\n                            openWriteComments,\n                            dispatch\n                        ],\n                        add: add,\n                        onAddComment: onAddComment,\n                        edit: edit,\n                        onEditComment: onEditComment,\n                        challenge: challenge,\n                        anonymousCanComment: anonymousCanComment,\n                        anonymousCanRate: anonymousCanRate,\n                        userCanEdit: userCanEdit,\n                        maxCommentLength: maxCommentLength,\n                        className: className\n                    }, child.id, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 227,\n                        columnNumber: 13\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 225,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n        lineNumber: 120,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CommentListItem, \"KPWem+m9UFB5zTzVWY3snXabCnY=\", false, function() {\n    return [\n        _wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder,\n        _wepublish_authentication_website__WEBPACK_IMPORTED_MODULE_0__.useUser\n    ];\n});\n_c11 = CommentListItem;\n_s2(CommentListItem, \"pki2/crAsTof2weZB0nKtcphzzs=\", false, function() {\n    return [\n        _wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder,\n        _wepublish_authentication_website__WEBPACK_IMPORTED_MODULE_0__.useUser\n    ];\n});\n_c9 = CommentListItem;\nconst CommentListItemStateWarnings = (props)=>{\n    _s1();\n    _s11();\n    const { elements: { Alert  }  } = (0,_wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder)();\n    return (0,ramda__WEBPACK_IMPORTED_MODULE_3__.cond)([\n        [\n            (param)=>{\n                let { state  } = param;\n                return state === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentState.PendingApproval;\n            },\n            ()=>/*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Alert, {\n                    severity: \"info\",\n                    children: \"Kommentar wartet auf Freischaltung.\"\n                }, void 0, false, {\n                    fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                    lineNumber: 257,\n                    columnNumber: 13\n                }, undefined)\n        ],\n        [\n            (param)=>{\n                let { state  } = param;\n                return state === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentState.PendingUserChanges;\n            },\n            ()=>/*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Alert, {\n                    severity: \"warning\",\n                    children: \"Kommentar muss editiert werden bevor Freischaltung.\"\n                }, void 0, false, {\n                    fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                    lineNumber: 261,\n                    columnNumber: 13\n                }, undefined)\n        ],\n        [\n            (param)=>{\n                let { state  } = param;\n                return state === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentState.Rejected;\n            },\n            ()=>/*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Alert, {\n                    severity: \"error\",\n                    children: \"Kommentar wurde nicht freigeschalten.\"\n                }, void 0, false, {\n                    fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                    lineNumber: 265,\n                    columnNumber: 13\n                }, undefined)\n        ]\n    ])(props);\n};\n_s1(CommentListItemStateWarnings, \"i3G5A51PvccMdxUOvJGEV3A0CB0=\", false, function() {\n    return [\n        _wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder\n    ];\n});\n_c12 = CommentListItemStateWarnings;\n_s11(CommentListItemStateWarnings, \"EshLfGCKvvLudLOl1CFb19aQkf0=\", false, function() {\n    return [\n        _wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder\n    ];\n});\n_c10 = CommentListItemStateWarnings;\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"CommentListItemWrapper\");\n$RefreshReg$(_c1, \"CommentListItemHeader\");\n$RefreshReg$(_c2, \"CommentListItemHeaderContent\");\n$RefreshReg$(_c3, \"CommentListItemName\");\n$RefreshReg$(_c4, \"CommentListItemVerifiedBadge\");\n$RefreshReg$(_c5, \"CommentListItemFlair\");\n$RefreshReg$(_c6, \"CommentListItemContent\");\n$RefreshReg$(_c7, \"CommentListItemChildren\");\n$RefreshReg$(_c8, \"CommentListItemActions\");\n$RefreshReg$(_c9, \"CommentListItem\");\n$RefreshReg$(_c10, \"CommentListItemStateWarnings\");\n(function() {\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== \"undefined\" && // AMP / No-JS mode does not inject these helpers:\n    \"$RefreshHelpers$\" in self) {\n        // @ts-ignore __webpack_module__ is global\n        var currentExports = module.exports;\n        // @ts-ignore __webpack_module__ is global\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function(data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            // @ts-ignore importMeta is replaced in the loader\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                } else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        } else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n})();\nvar _c11, _c12;\n$RefreshReg$(_c11, \"CommentListItem\");\n$RefreshReg$(_c12, \"CommentListItemStateWarnings\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../libs/comments/website/src/lib/comment-list/comment-list-item.tsx\n"));

/***/ })

});