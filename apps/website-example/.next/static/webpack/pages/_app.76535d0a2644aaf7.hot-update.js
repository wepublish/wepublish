"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "../../libs/comments/website/src/lib/comment-list/comment-list-item.tsx":
/*!******************************************************************************!*\
  !*** ../../libs/comments/website/src/lib/comment-list/comment-list-item.tsx ***!
  \******************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CommentListItem\": function() { return /* binding */ CommentListItem; },\n/* harmony export */   \"CommentListItemActions\": function() { return /* binding */ CommentListItemActions; },\n/* harmony export */   \"CommentListItemChildren\": function() { return /* binding */ CommentListItemChildren; },\n/* harmony export */   \"CommentListItemContent\": function() { return /* binding */ CommentListItemContent; },\n/* harmony export */   \"CommentListItemFlair\": function() { return /* binding */ CommentListItemFlair; },\n/* harmony export */   \"CommentListItemHeader\": function() { return /* binding */ CommentListItemHeader; },\n/* harmony export */   \"CommentListItemHeaderContent\": function() { return /* binding */ CommentListItemHeaderContent; },\n/* harmony export */   \"CommentListItemName\": function() { return /* binding */ CommentListItemName; },\n/* harmony export */   \"CommentListItemVerifiedBadge\": function() { return /* binding */ CommentListItemVerifiedBadge; },\n/* harmony export */   \"CommentListItemWrapper\": function() { return /* binding */ CommentListItemWrapper; }\n/* harmony export */ });\n/* harmony import */ var _emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/react/jsx-dev-runtime */ \"../../node_modules/@emotion/react/jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/react */ \"../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material */ \"../../node_modules/@mui/material/index.js\");\n/* harmony import */ var _wepublish_authentication_website__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wepublish/authentication/website */ \"../../libs/authentication/website/src/index.ts\");\n/* harmony import */ var _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wepublish/website/api */ \"../../libs/website/api/src/index.ts\");\n/* harmony import */ var _wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wepublish/website/builder */ \"../../libs/website/builder/src/index.ts\");\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ramda */ \"../../node_modules/ramda/es/index.js\");\n/* harmony import */ var react_icons_md__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-icons/md */ \"../../node_modules/react-icons/md/index.esm.js\");\n/* harmony import */ var _write_comment_write_comment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../write-comment/write-comment */ \"../../libs/comments/website/src/lib/write-comment/write-comment.tsx\");\n/* harmony import */ var _comment_list_state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./comment-list.state */ \"../../libs/comments/website/src/lib/comment-list/comment-list.state.tsx\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nvar _s2 = $RefreshSig$(), _s11 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nconst avatarStyles = /*#__PURE__*/ (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.css)(\"width:46px;height:46px;border-radius:50%;\", \"avatarStyles\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"label:avatarStyles\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst CommentListItemWrapper = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"article\", {\n    target: \"e1l2e89y0\",\n    label: \"CommentListItemWrapper\",\n    target: \"e1l2e89y0\",\n    label: \"CommentListItemWrapper\"\n})(\"display:grid;gap:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(2);\n}, \";\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c = CommentListItemWrapper;\nconst CommentListItemHeader = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"header\", {\n    target: \"e1l2e89y1\",\n    label: \"CommentListItemHeader\",\n    target: \"e1l2e89y1\",\n    label: \"CommentListItemHeader\"\n})(\"display:grid;grid-template-columns:max-content 1fr;gap:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(2);\n}, \";align-items:center;\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c1 = CommentListItemHeader;\nconst CommentListItemHeaderContent = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y2\",\n    label: \"CommentListItemHeaderContent\",\n    target: \"e1l2e89y2\",\n    label: \"CommentListItemHeaderContent\"\n})(\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c2 = CommentListItemHeaderContent;\nconst CommentListItemName = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y3\",\n    label: \"CommentListItemName\",\n    target: \"e1l2e89y3\",\n    label: \"CommentListItemName\"\n})(\"display:grid;grid-auto-flow:column;grid-auto-columns:max-content;gap:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(1);\n}, \";align-items:center;font-weight:\", (param)=>{\n    let { theme  } = param;\n    return theme.typography.fontWeightBold;\n}, \";\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c3 = CommentListItemName;\nconst CommentListItemVerifiedBadge = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y4\",\n    label: \"CommentListItemVerifiedBadge\",\n    target: \"e1l2e89y4\",\n    label: \"CommentListItemVerifiedBadge\"\n})(\"display:grid;align-items:center;color:\", (param)=>{\n    let { theme  } = param;\n    return theme.palette.info.main;\n}, \";\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c4 = CommentListItemVerifiedBadge;\nconst CommentListItemFlair = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y5\",\n    label: \"CommentListItemFlair\",\n    target: \"e1l2e89y5\",\n    label: \"CommentListItemFlair\"\n})(\"font-size:0.75em;\", (param)=>{\n    let { isGuest , theme  } = param;\n    return isGuest && /*#__PURE__*/ (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.css)(\"color:\", theme.palette.primary.main, \";\", \"CommentListItemFlair\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n}, \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c5 = CommentListItemFlair;\nconst CommentListItemContent = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y6\",\n    label: \"CommentListItemContent\",\n    target: \"e1l2e89y6\",\n    label: \"CommentListItemContent\"\n})(\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c6 = CommentListItemContent;\nconst CommentListItemChildren = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"aside\", {\n    target: \"e1l2e89y7\",\n    label: \"CommentListItemChildren\",\n    target: \"e1l2e89y7\",\n    label: \"CommentListItemChildren\"\n})(\"display:grid;gap:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(3);\n}, \";border-left:2px solid #000;padding:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(3);\n}, \";padding-right:0;\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c7 = CommentListItemChildren;\nconst CommentListItemActions = /*#__PURE__*/ (0,_mui_material__WEBPACK_IMPORTED_MODULE_7__.styled)(\"div\", {\n    target: \"e1l2e89y8\",\n    label: \"CommentListItemActions\",\n    target: \"e1l2e89y8\",\n    label: \"CommentListItemActions\"\n})(\"display:flex;flex-flow:row wrap;gap:\", (param)=>{\n    let { theme  } = param;\n    return theme.spacing(1);\n}, \";\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n_c8 = CommentListItemActions;\nconst CommentListItem = (param)=>{\n    _s();\n    let { id , className , text , authorType , user , guestUserImage , guestUsername , title , source , state , children , anonymousCanComment , anonymousCanRate , userCanEdit , maxCommentLength , challenge , add , onAddComment , edit , onEditComment , openEditorsState: [openWriteComments, dispatch]  } = param;\n    _s2();\n    const { CommentListItem: BuilderCommentListItem , elements: { Paragraph , Image , Button  } , blocks: { RichText  }  } = (0,_wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder)();\n    const { hasUser: hasLoggedInUser , user: loggedInUser  } = (0,_wepublish_authentication_website__WEBPACK_IMPORTED_MODULE_0__.useUser)();\n    var _user_image;\n    const image = (_user_image = user === null || user === void 0 ? void 0 : user.image) !== null && _user_image !== void 0 ? _user_image : guestUserImage;\n    const isVerified = authorType === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentAuthorType.VerifiedUser;\n    const isGuest = authorType === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentAuthorType.GuestUser;\n    var _user_flair;\n    const flair = (_user_flair = user === null || user === void 0 ? void 0 : user.flair) !== null && _user_flair !== void 0 ? _user_flair : source;\n    const name = user ? \"\".concat(user.preferredName || user.firstName, \" \").concat(user.name) : guestUsername;\n    const canEdit = hasLoggedInUser && (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id) === (user === null || user === void 0 ? void 0 : user.id) && (userCanEdit || state === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentState.PendingUserChanges);\n    const canReply = anonymousCanComment || hasLoggedInUser;\n    const hasActions = canEdit || canReply;\n    const showReply = (0,_comment_list_state__WEBPACK_IMPORTED_MODULE_5__.getStateForEditor)(openWriteComments)(\"add\", id);\n    const showEdit = (0,_comment_list_state__WEBPACK_IMPORTED_MODULE_5__.getStateForEditor)(openWriteComments)(\"edit\", id);\n    return /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemWrapper, {\n        className: className,\n        children: [\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemHeader, {\n                children: [\n                    image && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Image, {\n                        image: image,\n                        square: true,\n                        css: avatarStyles\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 122,\n                        columnNumber: 19\n                    }, undefined),\n                    !image && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(react_icons_md__WEBPACK_IMPORTED_MODULE_9__.MdPerson, {\n                        css: avatarStyles\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 123,\n                        columnNumber: 20\n                    }, undefined),\n                    /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemHeaderContent, {\n                        children: [\n                            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemName, {\n                                children: [\n                                    name,\n                                    isVerified && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemVerifiedBadge, {\n                                        children: /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(react_icons_md__WEBPACK_IMPORTED_MODULE_9__.MdVerified, {\n                                            title: \"Member\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                                            lineNumber: 131,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                                        lineNumber: 130,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                                lineNumber: 126,\n                                columnNumber: 11\n                            }, undefined),\n                            flair && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemFlair, {\n                                isGuest: isGuest,\n                                children: flair\n                            }, void 0, false, {\n                                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                                lineNumber: 136,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 125,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 121,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemStateWarnings, {\n                state: state\n            }, void 0, false, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 140,\n                columnNumber: 7\n            }, undefined),\n            !showEdit && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemContent, {\n                children: [\n                    title && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Paragraph, {\n                        component: \"h1\",\n                        gutterBottom: false,\n                        children: /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(\"strong\", {\n                            children: title\n                        }, void 0, false, {\n                            fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                            lineNumber: 146,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 145,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(RichText, {\n                        richText: text !== null && text !== void 0 ? text : []\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 149,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 143,\n                columnNumber: 9\n            }, undefined),\n            showEdit && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(_write_comment_write_comment__WEBPACK_IMPORTED_MODULE_4__.WriteComment, {\n                title: title,\n                text: text,\n                onCancel: ()=>dispatch({\n                        type: \"edit\",\n                        action: \"close\",\n                        commentId: id\n                    }),\n                onSubmit: (data)=>onEditComment({\n                        ...data,\n                        id\n                    }),\n                maxCommentLength: maxCommentLength,\n                error: edit.error,\n                loading: edit.loading\n            }, void 0, false, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 154,\n                columnNumber: 9\n            }, undefined),\n            hasActions && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemActions, {\n                children: [\n                    canReply && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Button, {\n                        startIcon: /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(react_icons_md__WEBPACK_IMPORTED_MODULE_9__.MdReply, {}, void 0, false, void 0, void 0),\n                        variant: \"text\",\n                        size: \"small\",\n                        onClick: ()=>dispatch({\n                                type: \"add\",\n                                action: \"open\",\n                                commentId: id\n                            }),\n                        children: \"Antworten\"\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 174,\n                        columnNumber: 13\n                    }, undefined),\n                    canEdit && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Button, {\n                        startIcon: /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(react_icons_md__WEBPACK_IMPORTED_MODULE_9__.MdEdit, {}, void 0, false, void 0, void 0),\n                        variant: \"text\",\n                        size: \"small\",\n                        onClick: ()=>dispatch({\n                                type: \"edit\",\n                                action: \"open\",\n                                commentId: id\n                            }),\n                        children: \"Editieren\"\n                    }, void 0, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 190,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 172,\n                columnNumber: 9\n            }, undefined),\n            showReply && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(_write_comment_write_comment__WEBPACK_IMPORTED_MODULE_4__.WriteComment, {\n                onCancel: ()=>dispatch({\n                        type: \"add\",\n                        action: \"close\",\n                        commentId: id\n                    }),\n                onSubmit: (data)=>onAddComment({\n                        ...data,\n                        parentID: id\n                    }),\n                maxCommentLength: maxCommentLength,\n                challenge: challenge\n            }, void 0, false, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 208,\n                columnNumber: 9\n            }, undefined),\n            !!(children === null || children === void 0 ? void 0 : children.length) && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(CommentListItemChildren, {\n                children: children.map((child)=>/*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(BuilderCommentListItem, {\n                        ...child,\n                        openEditorsState: [\n                            openWriteComments,\n                            dispatch\n                        ],\n                        add: add,\n                        onAddComment: onAddComment,\n                        edit: edit,\n                        onEditComment: onEditComment,\n                        challenge: challenge,\n                        anonymousCanComment: anonymousCanComment,\n                        anonymousCanRate: anonymousCanRate,\n                        userCanEdit: userCanEdit,\n                        maxCommentLength: maxCommentLength,\n                        className: className\n                    }, child.id, false, {\n                        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                        lineNumber: 225,\n                        columnNumber: 13\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                lineNumber: 223,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n        lineNumber: 120,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CommentListItem, \"KPWem+m9UFB5zTzVWY3snXabCnY=\", false, function() {\n    return [\n        _wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder,\n        _wepublish_authentication_website__WEBPACK_IMPORTED_MODULE_0__.useUser\n    ];\n});\n_c11 = CommentListItem;\n_s2(CommentListItem, \"pki2/crAsTof2weZB0nKtcphzzs=\", false, function() {\n    return [\n        _wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder,\n        _wepublish_authentication_website__WEBPACK_IMPORTED_MODULE_0__.useUser\n    ];\n});\n_c9 = CommentListItem;\nconst CommentListItemStateWarnings = (props)=>{\n    _s1();\n    _s11();\n    const { elements: { Alert  }  } = (0,_wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder)();\n    return (0,ramda__WEBPACK_IMPORTED_MODULE_3__.cond)([\n        [\n            (param)=>{\n                let { state  } = param;\n                return state === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentState.PendingApproval;\n            },\n            ()=>/*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Alert, {\n                    severity: \"info\",\n                    children: \"Kommentar wartet auf Freischaltung.\"\n                }, void 0, false, {\n                    fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                    lineNumber: 255,\n                    columnNumber: 13\n                }, undefined)\n        ],\n        [\n            (param)=>{\n                let { state  } = param;\n                return state === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentState.PendingUserChanges;\n            },\n            ()=>/*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Alert, {\n                    severity: \"warning\",\n                    children: \"Kommentar muss editiert werden bevor Freischaltung.\"\n                }, void 0, false, {\n                    fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                    lineNumber: 259,\n                    columnNumber: 13\n                }, undefined)\n        ],\n        [\n            (param)=>{\n                let { state  } = param;\n                return state === _wepublish_website_api__WEBPACK_IMPORTED_MODULE_1__.CommentState.Rejected;\n            },\n            ()=>/*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(Alert, {\n                    severity: \"error\",\n                    children: \"Kommentar wurde nicht freigeschalten.\"\n                }, void 0, false, {\n                    fileName: \"/Users/itrulia/Documents/wepublish/libs/comments/website/src/lib/comment-list/comment-list-item.tsx\",\n                    lineNumber: 263,\n                    columnNumber: 13\n                }, undefined)\n        ]\n    ])(props);\n};\n_s1(CommentListItemStateWarnings, \"i3G5A51PvccMdxUOvJGEV3A0CB0=\", false, function() {\n    return [\n        _wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder\n    ];\n});\n_c12 = CommentListItemStateWarnings;\n_s11(CommentListItemStateWarnings, \"EshLfGCKvvLudLOl1CFb19aQkf0=\", false, function() {\n    return [\n        _wepublish_website_builder__WEBPACK_IMPORTED_MODULE_2__.useWebsiteBuilder\n    ];\n});\n_c10 = CommentListItemStateWarnings;\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"CommentListItemWrapper\");\n$RefreshReg$(_c1, \"CommentListItemHeader\");\n$RefreshReg$(_c2, \"CommentListItemHeaderContent\");\n$RefreshReg$(_c3, \"CommentListItemName\");\n$RefreshReg$(_c4, \"CommentListItemVerifiedBadge\");\n$RefreshReg$(_c5, \"CommentListItemFlair\");\n$RefreshReg$(_c6, \"CommentListItemContent\");\n$RefreshReg$(_c7, \"CommentListItemChildren\");\n$RefreshReg$(_c8, \"CommentListItemActions\");\n$RefreshReg$(_c9, \"CommentListItem\");\n$RefreshReg$(_c10, \"CommentListItemStateWarnings\");\n(function() {\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== \"undefined\" && // AMP / No-JS mode does not inject these helpers:\n    \"$RefreshHelpers$\" in self) {\n        // @ts-ignore __webpack_module__ is global\n        var currentExports = module.exports;\n        // @ts-ignore __webpack_module__ is global\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function(data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            // @ts-ignore importMeta is replaced in the loader\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                } else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        } else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n})();\nvar _c11, _c12;\n$RefreshReg$(_c11, \"CommentListItem\");\n$RefreshReg$(_c12, \"CommentListItemStateWarnings\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../libs/comments/website/src/lib/comment-list/comment-list-item.tsx\n"));

/***/ })

});