version: '3.7'

networks:
  app-tier:
    driver: bridge

services:
  website:
    build:
      context: .
    ports:
      - '127.0.0.1:4200:8000'
    command: ['npx', '@wepublish/website-example']
    environment:
      NODE_ENV: production
      API_URL: http://api:8000
    depends_on:
      - api
    networks:
      - app-tier
  api:
    build:
      context: .
    ports:
      - '127.0.0.1:4000:8000'
    command: ['node', 'dist/apps/api-example/main.js']
    environment:
      NODE_ENV: production
      HOST_URL: http://localhost:4000
      MEDIA_SERVER_URL: http://localhost:4100
      MEDIA_SERVER_INTERNAL_URL: http://media:4100
      MEDIA_SERVER_TOKEN: secret
      DATABASE_URL: postgresql://postgres@database:5432/wepublish?schema=public
      OAUTH_GOOGLE_CLIENT_ID: 617896178757-i6ldn0nni9qtle8o6eu76lv93d78nvfi.apps.googleusercontent.com
      OAUTH_GOOGLE_CLIENT_KEY: t267ZLqkV9dacrkPQp_pF-G2
      OAUTH_GOOGLE_REDIRECT_URL: http://localhost:4000/auth/google
      WEBSITE_URL: http://localhost:4200
      JWT_SECRET_KEY: ThisIsSuperSecret
    depends_on:
      - database
    networks:
      - app-tier
  editor:
    build:
      context: .
    ports:
      - '127.0.0.1:3006:8000'
    command: ['node', 'dist/apps/editor/main.js']
    environment:
      NODE_ENV: production
      ADDRESS: 0.0.0.0
      API_URL: http://localhost:4000
    depends_on:
      - api

  database:
    image: bitnami/postgresql:14
    platform: linux/amd64
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - 'database_data:/bitnami/postgresql'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_DATABASE=wepublish
    networks:
      - app-tier

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@admin.com'
      PGADMIN_DEFAULT_PASSWORD: 'root'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '127.0.0.1:8000:80'
    depends_on:
      - database
    networks:
      - app-tier

  storage:
    image: bitnami/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
      - MINIO_DEFAULT_BUCKETS=${S3_BUCKETS}
    volumes:
      - storage_data:/data

volumes:
  database_data:
    driver: local
  storage_data:
    driver: local
