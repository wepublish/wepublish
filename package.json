{
  "name": "wepublish",
  "private": true,
  "engines": {
    "node": "^12.0.0",
    "yarn": "^1.16.0"
  },
  "scripts": {
    "setup": "run-s --print-label setup:**",
    "migrate": "prisma migrate deploy && prisma db seed",
    "dev": "run-s start:docker watch",
    "clean": "run-p --print-label clean:**",
    "test": "run-p --print-label test:**",
    "build": "run-s --print-label build:api build:api-media-karma build:oauth2 build:editor build:api-example build:oauth2-example",
    "build:production": "run-s --print-label build:api build:api-media-karma build:oauth2 build:editor:production",
    "build:demo": "run-s --print-label build:api build:api-media-karma build:oauth2 build:editor:production build:api-example build:website-example build:oauth2-example",
    "prerelease": "run-s clean build:production",
    "changelog": "node -r dotenv/config ./node_modules/.bin/lerna-changelog",
    "publish": "lerna publish from-package --ignore-scripts",
    "publish:next": "lerna publish from-package --ignore-scripts --dist-tag next",
    "watch": "yarn migrate && run-p --print-label watch:*",
    "lint": "run-p --print-label lint:*",
    "setup:root": "shx cp .env.example .env",
    "start:docker": "docker-compose up --detach mongo mongo-express database pgadmin media",
    "setup:api": "yarn workspace @wepublish/api setup",
    "clean:api": "yarn workspace @wepublish/api clean",
    "build:api": "yarn workspace @wepublish/api build",
    "watch:api": "yarn workspace @wepublish/api watch",
    "test:api": "yarn workspace @wepublish/api test",
    "clean:api-media-karma": "yarn workspace @wepublish/api-media-karma clean",
    "build:api-media-karma": "yarn workspace @wepublish/api-media-karma build",
    "watch:api-media-karma": "yarn workspace @wepublish/api-media-karma watch",
    "test:api-media-karma": "yarn workspace @wepublish/api-media-karma test",
    "setup:editor": "yarn workspace @wepublish/editor setup",
    "start:editor": "yarn workspace @wepublish/editor start",
    "clean:editor": "yarn workspace @wepublish/editor clean",
    "build:editor": "yarn workspace @wepublish/editor build",
    "build:editor:production": "yarn workspace @wepublish/editor build:production",
    "watch:editor": "yarn workspace @wepublish/editor watch",
    "lint:editor": "yarn workspace @wepublish/editor lint",
    "test:editor": "yarn workspace @wepublish/editor test",
    "generate:editor:api": "yarn workspace @wepublish/editor generate:api",
    "clean:oauth2": "yarn workspace @wepublish/oauth2 clean",
    "build:oauth2": "yarn workspace @wepublish/oauth2 build",
    "watch:oauth2": "yarn workspace @wepublish/oauth2 watch",
    "setup:api-example": "yarn workspace @wepublish/api-example setup",
    "clean:api-example": "yarn workspace @wepublish/api-example clean",
    "build:api-example": "yarn workspace @wepublish/api-example build",
    "watch:api-example": "yarn workspace @wepublish/api-example watch",
    "start:api-example": "yarn workspace @wepublish/api-example start",
    "clean:media": "docker-compose exec media rm -rf ./.media",
    "setup:oauth2-example": "yarn workspace @wepublish/oauth2-example setup",
    "clean:oauth2-example": "yarn workspace @wepublish/oauth2-example clean",
    "build:oauth2-example": "yarn workspace @wepublish/oauth2-example build",
    "watch:oauth2-example": "yarn workspace @wepublish/oauth2-example watch",
    "start:oauth2-example": "yarn workspace @wepublish/oauth2-example start",
    "clean:website-example": "yarn workspace @wepublish/website-example clean",
    "build:website-example": "yarn workspace @wepublish/website-example build",
    "prettier": "prettier --write \"{packages,services}/**/*.{js,ts,tsx,json}\"",
    "prettier-check": "prettier --check \"{packages,services}/**/*.{js,ts,tsx,json}\"",
    "e2e:chromium": "node -r dotenv/config node_modules/.bin/testcafe chrome ./tests/e2e.ts -s takeOnFails=true --compiler-options typescript.customCompilerModulePath=../typescript --assertion-timeout 10000",
    "e2e:firefox": "node -r dotenv/config node_modules/.bin/testcafe firefox ./tests/e2e.ts -s takeOnFails=true --compiler-options typescript.customCompilerModulePath=../typescript --assertion-timeout 10000",
    "prepare": "prisma generate"
  },
  "workspaces": [
    "packages/*",
    "examples/*"
  ],
  "devDependencies": {
    "@babel/eslint-plugin": "^7.11.5",
    "@typescript-eslint/eslint-plugin": "^4.2.0",
    "@typescript-eslint/parser": "^4.2.0",
    "dotenv": "^8.2.0",
    "eslint": "^7.9.0",
    "eslint-config-prettier": "^6.12.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-plugin-i18next": "^5.0.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-node": "^11.1.0 ",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.21.2",
    "eslint-plugin-standard": "^4.0.1",
    "husky": "^3.0.0",
    "lerna": "^3.22.1",
    "lerna-changelog": "^1.0.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.0.1",
    "pretty-quick": "^1.11.1",
    "prisma": "^3.14.0",
    "testcafe": "1.10.0",
    "ts-node": "^10.8.1"
  },
  "prisma": {
    "schema": "packages/api/prisma/schema.prisma",
    "seed": "npx ts-node examples/api/prisma/seed.ts"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged --pattern \"{examples,packages,services}/**/*.{js,ts,tsx,json}\""
    }
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "react",
      "standard"
    ],
    "extends": [
      "standard",
      "plugin:@typescript-eslint/recommended",
      "plugin:react/recommended",
      "prettier",
      "prettier/@typescript-eslint",
      "prettier/react",
      "prettier/standard"
    ],
    "rules": {
      "no-use-before-define": [
        0
      ],
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/no-use-before-define": [
        1
      ]
    },
    "env": {
      "es6": true,
      "node": true
    },
    "ignorePatterns": [
      "node_modules",
      "dist",
      "lib",
      "coverage",
      "assets"
    ]
  }
}
