// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Author Edit Panel should allow a new author to be created  1`] = `
<AuthorEditPanel>
  <defaultProps(defaultProps(ModalHeader))
    classPrefix="rs-drawer-header"
    closeButton={true}
  >
    <defaultProps(ModalHeader)
      classPrefix="rs-drawer-header"
      closeButton={true}
    >
      <ModalHeader
        classPrefix="rs-drawer-header"
        closeButton={true}
      >
        <div
          className="rs-drawer-header"
        >
          <button
            aria-label="Close"
            className="rs-drawer-header-close"
            type="button"
          >
            <span
              aria-hidden="true"
            >
              Ã—
            </span>
          </button>
          <defaultProps(defaultProps(ModalTitle))
            classPrefix="rs-drawer-title"
          >
            <defaultProps(ModalTitle)
              classPrefix="rs-drawer-title"
            >
              <ModalTitle
                classPrefix="rs-drawer-title"
              >
                <h4
                  className="rs-drawer-title"
                >
                  authors.panels.createAuthor
                </h4>
              </ModalTitle>
            </defaultProps(ModalTitle)>
          </defaultProps(defaultProps(ModalTitle))>
        </div>
      </ModalHeader>
    </defaultProps(ModalHeader)>
  </defaultProps(defaultProps(ModalHeader))>
  <Body
    classPrefix="rs-drawer-body"
  >
    <defaultProps(ModalBody)
      classPrefix="rs-drawer-body"
    >
      <ModalBody
        classPrefix="rs-drawer-body"
      >
        <div
          className="rs-drawer-body"
          style={Object {}}
        >
          <defaultProps(PanelGroup)
            accordion={true}
            classPrefix="rs-panel-group"
          >
            <PanelGroup
              accordion={true}
              classPrefix="rs-panel-group"
            >
              <div
                className="rs-panel-group rs-panel-group-accordion"
                role="tablist"
              >
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  defaultExpanded={true}
                  header="authors.panels.name"
                  headerRole="tab"
                  key="0/.0"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    defaultExpanded={true}
                    header="authors.panels.name"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-in rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            aria-expanded={true}
                            aria-selected={true}
                            className={null}
                            role="tab"
                          >
                            authors.panels.name
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        in={true}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          in={true}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={false}
                            className="rs-panel-collapse collapse in"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <Form
                                checkDelay={500}
                                checkTrigger="change"
                                classPrefix="rs-form"
                                errorFromContext={true}
                                fluid={true}
                                formDefaultValue={Object {}}
                                layout="vertical"
                                model={
                                  Schema {
                                    "schema": Object {},
                                  }
                                }
                              >
                                <form
                                  className="rs-form rs-form-vertical rs-form-fluid"
                                  onSubmit={[Function]}
                                >
                                  <withStyleProps(defaultProps(InputGroup))
                                    classPrefix="rs-input-group"
                                    inside={true}
                                  >
                                    <defaultProps(InputGroup)
                                      className=""
                                      classPrefix="rs-input-group"
                                      inside={true}
                                    >
                                      <InputGroup
                                        className=""
                                        classPrefix="rs-input-group"
                                        inside={true}
                                      >
                                        <div
                                          className="rs-input-group rs-input-group-inside"
                                        >
                                          <defaultProps(InputGroupAddon)
                                            classPrefix="rs-input-group-addon"
                                          >
                                            <InputGroupAddon
                                              classPrefix="rs-input-group-addon"
                                            >
                                              <span
                                                className="rs-input-group-addon"
                                              >
                                                <defaultProps(Icon)
                                                  classPrefix="rs-icon"
                                                  componentClass="i"
                                                  icon="avatar"
                                                >
                                                  <Icon
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="avatar"
                                                  >
                                                    <i
                                                      className="rs-icon rs-icon-avatar"
                                                    />
                                                  </Icon>
                                                </defaultProps(Icon)>
                                              </span>
                                            </InputGroupAddon>
                                          </defaultProps(InputGroupAddon)>
                                          <defaultProps(FormControlWrapper)
                                            classPrefix="rs-form-control"
                                            disabled={true}
                                            name="authors.panels.name"
                                            onChange={[Function]}
                                            value="Clark Kent"
                                          >
                                            <FormControlWrapper
                                              classPrefix="rs-form-control"
                                              disabled={true}
                                              name="authors.panels.name"
                                              onChange={[Function]}
                                              value="Clark Kent"
                                            >
                                              <FormControl
                                                accepter={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "contextType": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": Object {
                                                        "$$typeof": Symbol(react.context),
                                                        "_calculateChangedBits": null,
                                                        "_context": [Circular],
                                                      },
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": null,
                                                      "_currentValue2": null,
                                                      "_threadCount": 0,
                                                    },
                                                    "defaultProps": Object {
                                                      "classPrefix": "rs-input",
                                                      "componentClass": "input",
                                                      "type": "text",
                                                    },
                                                    "displayName": "withStyleProps(defaultProps(Input))",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "size": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                classPrefix="rs-form-control"
                                                disabled={true}
                                                errorPlacement="bottomStart"
                                                formValue={Object {}}
                                                name="authors.panels.name"
                                                onChange={[Function]}
                                                plaintextDefaultValue="--"
                                                value="Clark Kent"
                                              >
                                                <div
                                                  className="rs-form-control-wrapper"
                                                >
                                                  <withStyleProps(defaultProps(Input))
                                                    classPrefix="rs-input"
                                                    componentClass="input"
                                                    disabled={true}
                                                    name="authors.panels.name"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    type="text"
                                                    value="Clark Kent"
                                                  >
                                                    <defaultProps(Input)
                                                      className=""
                                                      classPrefix="rs-input"
                                                      componentClass="input"
                                                      disabled={true}
                                                      name="authors.panels.name"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="Clark Kent"
                                                    >
                                                      <Input
                                                        className=""
                                                        classPrefix="rs-input"
                                                        componentClass="input"
                                                        disabled={true}
                                                        name="authors.panels.name"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        type="text"
                                                        value="Clark Kent"
                                                      >
                                                        <input
                                                          className="rs-input"
                                                          disabled={true}
                                                          id={null}
                                                          name="authors.panels.name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="text"
                                                          value="Clark Kent"
                                                        />
                                                      </Input>
                                                    </defaultProps(Input)>
                                                  </withStyleProps(defaultProps(Input))>
                                                  <defaultProps(ErrorMessage)
                                                    className="rs-form-control-message-wrapper"
                                                    classPrefix="rs-error-message"
                                                    placement="bottomStart"
                                                    show={false}
                                                  >
                                                    <ErrorMessage
                                                      className="rs-form-control-message-wrapper"
                                                      classPrefix="rs-error-message"
                                                      placement="bottomStart"
                                                      show={false}
                                                    />
                                                  </defaultProps(ErrorMessage)>
                                                </div>
                                              </FormControl>
                                            </FormControlWrapper>
                                          </defaultProps(FormControlWrapper)>
                                        </div>
                                      </InputGroup>
                                    </defaultProps(InputGroup)>
                                  </withStyleProps(defaultProps(InputGroup))>
                                </form>
                              </Form>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.image"
                  headerRole="tab"
                  key="1/.1"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.image"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.image
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <ChooseEditImage
                                disabled={false}
                                header=""
                                left={0}
                                openChooseModalOpen={[Function]}
                                openEditModalOpen={[Function]}
                                removeImage={[Function]}
                                top={0}
                              >
                                <defaultProps(Panel)
                                  bodyFill={true}
                                  classPrefix="rs-panel"
                                  header=""
                                  style={
                                    Object {
                                      "height": 240,
                                      "marginBottom": 10,
                                    }
                                  }
                                >
                                  <Panel
                                    bodyFill={true}
                                    classPrefix="rs-panel"
                                    header=""
                                    style={
                                      Object {
                                        "height": 240,
                                        "marginBottom": 10,
                                      }
                                    }
                                  >
                                    <div
                                      className="rs-panel rs-panel-default"
                                      style={
                                        Object {
                                          "height": 240,
                                          "marginBottom": 10,
                                        }
                                      }
                                    >
                                      <div
                                        className="rs-panel-body rs-panel-body-fill"
                                      >
                                        <PlaceholderInput
                                          onAddClick={[Function]}
                                        >
                                          <div
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "backgroundColor": "#f7f9fa",
                                                "display": "flex",
                                                "flexDirection": "column",
                                                "height": "100%",
                                                "justifyContent": "center",
                                                "width": "100%",
                                              }
                                            }
                                          >
                                            <defaultProps(IconButton)
                                              classPrefix="rs-btn-icon"
                                              icon={
                                                <defaultProps(Icon)
                                                  classPrefix="rs-icon"
                                                  componentClass="i"
                                                  icon="plus-circle"
                                                  size="5x"
                                                />
                                              }
                                              onClick={[Function]}
                                              placement="left"
                                              size="lg"
                                            >
                                              <IconButton
                                                classPrefix="rs-btn-icon"
                                                icon={
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="plus-circle"
                                                    size="5x"
                                                  />
                                                }
                                                onClick={[Function]}
                                                placement="left"
                                                size="lg"
                                              >
                                                <withStyleProps(defaultProps(Button))
                                                  appearance="default"
                                                  className="rs-btn-icon rs-btn-icon-placement-left"
                                                  classPrefix="rs-btn"
                                                  componentClass="button"
                                                  onClick={[Function]}
                                                  ripple={true}
                                                  size="lg"
                                                >
                                                  <defaultProps(Button)
                                                    appearance="default"
                                                    className="rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                    classPrefix="rs-btn"
                                                    componentClass="button"
                                                    onClick={[Function]}
                                                    ripple={true}
                                                  >
                                                    <Button
                                                      appearance="default"
                                                      className="rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                      classPrefix="rs-btn"
                                                      componentClass="button"
                                                      onClick={[Function]}
                                                      ripple={true}
                                                    >
                                                      <button
                                                        className="rs-btn rs-btn-default rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <defaultProps(Icon)
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="plus-circle"
                                                          size="5x"
                                                        >
                                                          <Icon
                                                            classPrefix="rs-icon"
                                                            componentClass="i"
                                                            icon="plus-circle"
                                                            size="5x"
                                                          >
                                                            <i
                                                              className="rs-icon rs-icon-plus-circle rs-icon-size-5x"
                                                            />
                                                          </Icon>
                                                        </defaultProps(Icon)>
                                                        <defaultProps(Ripple)
                                                          classPrefix="rs-ripple"
                                                        >
                                                          <Ripple
                                                            classPrefix="rs-ripple"
                                                          >
                                                            <span
                                                              className="rs-ripple-pond"
                                                            >
                                                              <Transition
                                                                enteringClassName="rs-ripple-rippling"
                                                                in={false}
                                                                onEntered={[Function]}
                                                                timeout={1000}
                                                              >
                                                                <span
                                                                  className="rs-ripple"
                                                                  style={Object {}}
                                                                />
                                                              </Transition>
                                                            </span>
                                                          </Ripple>
                                                        </defaultProps(Ripple)>
                                                      </button>
                                                    </Button>
                                                  </defaultProps(Button)>
                                                </withStyleProps(defaultProps(Button))>
                                              </IconButton>
                                            </defaultProps(IconButton)>
                                          </div>
                                        </PlaceholderInput>
                                      </div>
                                    </div>
                                  </Panel>
                                </defaultProps(Panel)>
                              </ChooseEditImage>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.links"
                  headerRole="tab"
                  key="2/.2"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.links"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.links
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <ListInput
                                defaultValue={
                                  Object {
                                    "title": "",
                                    "url": "",
                                  }
                                }
                                onChange={[Function]}
                                value={Array []}
                              >
                                <div>
                                  <Component
                                    defaultValue={
                                      Object {
                                        "title": "",
                                        "url": "",
                                      }
                                    }
                                    onChange={[Function]}
                                    onSortEnd={[Function]}
                                    useDragHandle={true}
                                    value={Array []}
                                  >
                                    <div>
                                      <defaultProps(IconButton)
                                        classPrefix="rs-btn-icon"
                                        icon={
                                          <defaultProps(Icon)
                                            classPrefix="rs-icon"
                                            componentClass="i"
                                            icon="plus-circle"
                                          />
                                        }
                                        onClick={[Function]}
                                        placement="left"
                                      >
                                        <IconButton
                                          classPrefix="rs-btn-icon"
                                          icon={
                                            <defaultProps(Icon)
                                              classPrefix="rs-icon"
                                              componentClass="i"
                                              icon="plus-circle"
                                            />
                                          }
                                          onClick={[Function]}
                                          placement="left"
                                        >
                                          <withStyleProps(defaultProps(Button))
                                            appearance="default"
                                            className="rs-btn-icon rs-btn-icon-placement-left"
                                            classPrefix="rs-btn"
                                            componentClass="button"
                                            onClick={[Function]}
                                            ripple={true}
                                          >
                                            <defaultProps(Button)
                                              appearance="default"
                                              className="rs-btn-icon rs-btn-icon-placement-left"
                                              classPrefix="rs-btn"
                                              componentClass="button"
                                              onClick={[Function]}
                                              ripple={true}
                                            >
                                              <Button
                                                appearance="default"
                                                className="rs-btn-icon rs-btn-icon-placement-left"
                                                classPrefix="rs-btn"
                                                componentClass="button"
                                                onClick={[Function]}
                                                ripple={true}
                                              >
                                                <button
                                                  className="rs-btn rs-btn-default rs-btn-icon rs-btn-icon-placement-left"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="plus-circle"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      icon="plus-circle"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-plus-circle"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                  <defaultProps(Ripple)
                                                    classPrefix="rs-ripple"
                                                  >
                                                    <Ripple
                                                      classPrefix="rs-ripple"
                                                    >
                                                      <span
                                                        className="rs-ripple-pond"
                                                      >
                                                        <Transition
                                                          enteringClassName="rs-ripple-rippling"
                                                          in={false}
                                                          onEntered={[Function]}
                                                          timeout={1000}
                                                        >
                                                          <span
                                                            className="rs-ripple"
                                                            style={Object {}}
                                                          />
                                                        </Transition>
                                                      </span>
                                                    </Ripple>
                                                  </defaultProps(Ripple)>
                                                </button>
                                              </Button>
                                            </defaultProps(Button)>
                                          </withStyleProps(defaultProps(Button))>
                                        </IconButton>
                                      </defaultProps(IconButton)>
                                    </div>
                                  </Component>
                                </div>
                              </ListInput>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.bioInformation"
                  headerRole="tab"
                  key="3/.3"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.bioInformation"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.bioInformation
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <Memo(RichTextBlock)
                                onChange={[Function]}
                                value={
                                  Array [
                                    Object {
                                      "children": Array [
                                        Object {
                                          "text": "",
                                        },
                                      ],
                                      "type": "paragraph",
                                    },
                                  ]
                                }
                              >
                                <Slate
                                  editor={
                                    Object {
                                      "addMark": [Function],
                                      "apply": [Function],
                                      "children": Array [
                                        Object {
                                          "children": Array [
                                            Object {
                                              "text": "",
                                            },
                                          ],
                                          "type": "paragraph",
                                        },
                                      ],
                                      "deleteBackward": [Function],
                                      "deleteForward": [Function],
                                      "deleteFragment": [Function],
                                      "getFragment": [Function],
                                      "history": Object {
                                        "redos": Array [],
                                        "undos": Array [],
                                      },
                                      "insertBreak": [Function],
                                      "insertData": [Function],
                                      "insertFragment": [Function],
                                      "insertNode": [Function],
                                      "insertText": [Function],
                                      "isInline": [Function],
                                      "isVoid": [Function],
                                      "marks": null,
                                      "normalizeNode": [Function],
                                      "onChange": [Function],
                                      "operations": Array [],
                                      "redo": [Function],
                                      "removeMark": [Function],
                                      "selection": null,
                                      "setFragmentData": [Function],
                                      "undo": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value={
                                    Array [
                                      Object {
                                        "children": Array [
                                          Object {
                                            "text": "",
                                          },
                                        ],
                                        "type": "paragraph",
                                      },
                                    ]
                                  }
                                >
                                  <Toolbar
                                    fadeOut={true}
                                    onMouseDown={[Function]}
                                  >
                                    <div
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "display": "flex",
                                          "justifyContent": "center",
                                          "marginBottom": 30,
                                          "pointerEvents": "none",
                                          "position": "sticky",
                                          "zIndex": 1,
                                        }
                                      }
                                    >
                                      <div
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                            "borderRadius": 6,
                                            "padding": 5,
                                            "pointerEvents": "auto",
                                            "transitionDuration": "100ms",
                                            "transitionProperty": "opacity",
                                          }
                                        }
                                      >
                                        <div
                                          style={
                                            Object {
                                              "display": "flex",
                                              "opacity": 0.5,
                                              "transitionDuration": "100ms",
                                              "transitionProperty": "opacity",
                                            }
                                          }
                                        >
                                          <FormatButton
                                            format="heading-one"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H1Icon>
                                                  <svg
                                                    className="bi bi-type-h1"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M8.637 13V3.669H7.379V7.62H2.758V3.67H1.5V13h1.258V8.728h4.62V13h1.259zm5.329 0V3.669h-1.244L10.5 5.316v1.265l2.16-1.565h.062V13h1.244z"
                                                    />
                                                  </svg>
                                                </H1Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <FormatButton
                                            format="heading-two"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H2Icon>
                                                  <svg
                                                    className="bi bi-type-h2"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M7.638 13V3.669H6.38V7.62H1.759V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.022-6.733v-.048c0-.889.63-1.668 1.716-1.668.957 0 1.675.608 1.675 1.572 0 .855-.554 1.504-1.067 2.085l-3.513 3.999V13H15.5v-1.094h-4.245v-.075l2.481-2.844c.875-.998 1.586-1.784 1.586-2.953 0-1.463-1.155-2.556-2.919-2.556-1.941 0-2.966 1.326-2.966 2.74v.049h1.223z"
                                                    />
                                                  </svg>
                                                </H2Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <FormatButton
                                            format="heading-three"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H3Icon>
                                                  <svg
                                                    className="bi bi-type-h3"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M7.637 13V3.669H6.379V7.62H1.758V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.625-4.272h1.018c1.142 0 1.935.67 1.949 1.674.013 1.005-.78 1.737-2.01 1.73-1.08-.007-1.853-.588-1.935-1.32H9.108c.069 1.327 1.224 2.386 3.083 2.386 1.935 0 3.343-1.155 3.309-2.789-.027-1.51-1.251-2.16-2.037-2.249v-.068c.704-.123 1.764-.91 1.723-2.229-.035-1.353-1.176-2.4-2.954-2.385-1.873.006-2.857 1.162-2.898 2.358h1.196c.062-.69.711-1.299 1.696-1.299.998 0 1.695.622 1.695 1.525.007.922-.718 1.592-1.695 1.592h-.964v1.074z"
                                                    />
                                                  </svg>
                                                </H3Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <FormatIconButton
                                            format="unordered-list"
                                            icon="list-ul"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="list-ul"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="list-ul"
                                                    icon="list-ul"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="list-ul"
                                                      icon="list-ul"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-list-ul"
                                                        element="list-ul"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="ordered-list"
                                            icon="list-ol"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="list-ol"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="list-ol"
                                                    icon="list-ol"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="list-ol"
                                                      icon="list-ol"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-list-ol"
                                                        element="list-ol"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <EditorSubMenuButton
                                            editorHasFocus={false}
                                            icon="table"
                                          >
                                            <ForwardRef
                                              icon="table"
                                            >
                                              <withLocale(Whisper)
                                                placement="top"
                                                speaker={
                                                  <defaultProps(Popover)
                                                    classPrefix="rs-popover"
                                                  >
                                                    <TableMenu />
                                                  </defaultProps(Popover)>
                                                }
                                                trigger="none"
                                              >
                                                <Whisper
                                                  locale={
                                                    Object {
                                                      "formatDate": [Function],
                                                    }
                                                  }
                                                  placement="top"
                                                  speaker={
                                                    <defaultProps(Popover)
                                                      classPrefix="rs-popover"
                                                    >
                                                      <TableMenu />
                                                    </defaultProps(Popover)>
                                                  }
                                                  trigger="none"
                                                >
                                                  <OverlayTrigger
                                                    delayHide={200}
                                                    locale={
                                                      Object {
                                                        "formatDate": [Function],
                                                      }
                                                    }
                                                    placement="top"
                                                    rootClose={true}
                                                    speaker={
                                                      <defaultProps(Popover)
                                                        classPrefix="rs-popover"
                                                      >
                                                        <TableMenu />
                                                      </defaultProps(Popover)>
                                                    }
                                                    trigger="none"
                                                  >
                                                    <ForwardRef
                                                      active={false}
                                                      key="triggerComponent"
                                                      onMouseDown={[Function]}
                                                    >
                                                      <button
                                                        className="icon-button"
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "border": "#00000000 1px solid",
                                                          }
                                                        }
                                                      >
                                                        <defaultProps(Icon)
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="table"
                                                          style={
                                                            Object {
                                                              "minWidth": "15px",
                                                            }
                                                          }
                                                        >
                                                          <Icon
                                                            classPrefix="rs-icon"
                                                            componentClass="i"
                                                            icon="table"
                                                            style={
                                                              Object {
                                                                "minWidth": "15px",
                                                              }
                                                            }
                                                          >
                                                            <i
                                                              className="rs-icon rs-icon-table"
                                                              style={
                                                                Object {
                                                                  "minWidth": "15px",
                                                                }
                                                              }
                                                            />
                                                          </Icon>
                                                        </defaultProps(Icon)>
                                                      </button>
                                                    </ForwardRef>
                                                    <Portal
                                                      key="portal"
                                                    >
                                                      <Portal
                                                        containerInfo={<body />}
                                                      >
                                                        <Overlay
                                                          placement="top"
                                                          rootClose={true}
                                                          show={false}
                                                          target={[Function]}
                                                        >
                                                          <BaseOverlay
                                                            placement="top"
                                                            rootClose={true}
                                                            show={false}
                                                            target={[Function]}
                                                            transition={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Fade",
                                                                "render": [Function],
                                                              }
                                                            }
                                                          />
                                                        </Overlay>
                                                      </Portal>
                                                    </Portal>
                                                  </OverlayTrigger>
                                                </Whisper>
                                              </withLocale(Whisper)>
                                            </ForwardRef>
                                          </EditorSubMenuButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <FormatIconButton
                                            format="bold"
                                            icon="bold"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="bold"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="bold"
                                                    icon="bold"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="bold"
                                                      icon="bold"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-bold"
                                                        element="bold"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="italic"
                                            icon="italic"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="italic"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="italic"
                                                    icon="italic"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="italic"
                                                      icon="italic"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-italic"
                                                        element="italic"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="underline"
                                            icon="underline"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="underline"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="underline"
                                                    icon="underline"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="underline"
                                                      icon="underline"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-underline"
                                                        element="underline"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="strikethrough"
                                            icon="strikethrough"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="strikethrough"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="strikethrough"
                                                    icon="strikethrough"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="strikethrough"
                                                      icon="strikethrough"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-strikethrough"
                                                        element="strikethrough"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="superscript"
                                            icon="superscript"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="superscript"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="superscript"
                                                    icon="superscript"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="superscript"
                                                      icon="superscript"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-superscript"
                                                        element="superscript"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="subscript"
                                            icon="subscript"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="subscript"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="subscript"
                                                    icon="subscript"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="subscript"
                                                      icon="subscript"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-subscript"
                                                        element="subscript"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <LinkFormatButton>
                                            <ToolbarIconButton
                                              active={false}
                                              icon="link"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="link"
                                                    icon="link"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="link"
                                                      icon="link"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-link"
                                                        element="link"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                            <defaultProps(Modal)
                                              animation={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Bounce",
                                                  "render": [Function],
                                                }
                                              }
                                              animationTimeout={300}
                                              autoFocus={true}
                                              backdrop={true}
                                              classPrefix="rs-modal"
                                              dialogComponentClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "defaultProps": Object {
                                                    "classPrefix": "rs-modal",
                                                  },
                                                  "displayName": "withStyleProps(defaultProps(ModalDialog))",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "size": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              enforceFocus={true}
                                              keyboard={true}
                                              onHide={[Function]}
                                              overflow={true}
                                              show={false}
                                              size="sm"
                                            >
                                              <Modal
                                                animation={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Bounce",
                                                    "render": [Function],
                                                  }
                                                }
                                                animationTimeout={300}
                                                autoFocus={true}
                                                backdrop={true}
                                                classPrefix="rs-modal"
                                                dialogComponentClass={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "defaultProps": Object {
                                                      "classPrefix": "rs-modal",
                                                    },
                                                    "displayName": "withStyleProps(defaultProps(ModalDialog))",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "size": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                enforceFocus={true}
                                                keyboard={true}
                                                onHide={[Function]}
                                                overflow={true}
                                                show={false}
                                                size="sm"
                                              >
                                                <BaseModal
                                                  autoFocus={true}
                                                  backdrop={true}
                                                  backdropClassName="rs-modal-backdrop"
                                                  backdropTransitionTimeout={150}
                                                  className="rs-modal-wrapper"
                                                  containerClassName="rs-modal-open rs-modal-has-backdrop"
                                                  dialogTransitionTimeout={300}
                                                  enforceFocus={true}
                                                  keyboard={true}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExited={[Function]}
                                                  onHide={[Function]}
                                                  overflow={true}
                                                  show={false}
                                                  transition={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Bounce",
                                                      "render": [Function],
                                                    }
                                                  }
                                                />
                                              </Modal>
                                            </defaultProps(Modal)>
                                          </LinkFormatButton>
                                          <RemoveLinkFormatButton>
                                            <ToolbarIconButton
                                              active={false}
                                              disabled={true}
                                              icon="unlink"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                disabled={true}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  disabled={true}
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="unlink"
                                                    icon="unlink"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="unlink"
                                                      icon="unlink"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-unlink"
                                                        element="unlink"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </RemoveLinkFormatButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <ForwardRef
                                            icon="smile-o"
                                          >
                                            <withLocale(Whisper)
                                              placement="top"
                                              speaker={
                                                <defaultProps(Popover)
                                                  classPrefix="rs-popover"
                                                >
                                                  <EmojiPicker
                                                    setEmoji={[Function]}
                                                  />
                                                </defaultProps(Popover)>
                                              }
                                              trigger="none"
                                            >
                                              <Whisper
                                                locale={
                                                  Object {
                                                    "formatDate": [Function],
                                                  }
                                                }
                                                placement="top"
                                                speaker={
                                                  <defaultProps(Popover)
                                                    classPrefix="rs-popover"
                                                  >
                                                    <EmojiPicker
                                                      setEmoji={[Function]}
                                                    />
                                                  </defaultProps(Popover)>
                                                }
                                                trigger="none"
                                              >
                                                <OverlayTrigger
                                                  delayHide={200}
                                                  locale={
                                                    Object {
                                                      "formatDate": [Function],
                                                    }
                                                  }
                                                  placement="top"
                                                  rootClose={true}
                                                  speaker={
                                                    <defaultProps(Popover)
                                                      classPrefix="rs-popover"
                                                    >
                                                      <EmojiPicker
                                                        setEmoji={[Function]}
                                                      />
                                                    </defaultProps(Popover)>
                                                  }
                                                  trigger="none"
                                                >
                                                  <ForwardRef
                                                    active={false}
                                                    key="triggerComponent"
                                                    onMouseDown={[Function]}
                                                  >
                                                    <button
                                                      className="icon-button"
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "border": "#00000000 1px solid",
                                                        }
                                                      }
                                                    >
                                                      <defaultProps(Icon)
                                                        classPrefix="rs-icon"
                                                        componentClass="i"
                                                        icon="smile-o"
                                                        style={
                                                          Object {
                                                            "minWidth": "15px",
                                                          }
                                                        }
                                                      >
                                                        <Icon
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="smile-o"
                                                          style={
                                                            Object {
                                                              "minWidth": "15px",
                                                            }
                                                          }
                                                        >
                                                          <i
                                                            className="rs-icon rs-icon-smile-o"
                                                            style={
                                                              Object {
                                                                "minWidth": "15px",
                                                              }
                                                            }
                                                          />
                                                        </Icon>
                                                      </defaultProps(Icon)>
                                                    </button>
                                                  </ForwardRef>
                                                  <Portal
                                                    key="portal"
                                                  >
                                                    <Portal
                                                      containerInfo={<body />}
                                                    >
                                                      <Overlay
                                                        placement="top"
                                                        rootClose={true}
                                                        target={[Function]}
                                                      >
                                                        <BaseOverlay
                                                          placement="top"
                                                          rootClose={true}
                                                          target={[Function]}
                                                          transition={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Fade",
                                                              "render": [Function],
                                                            }
                                                          }
                                                        />
                                                      </Overlay>
                                                    </Portal>
                                                  </Portal>
                                                </OverlayTrigger>
                                              </Whisper>
                                            </withLocale(Whisper)>
                                          </ForwardRef>
                                        </div>
                                      </div>
                                    </div>
                                  </Toolbar>
                                  <div
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "color": "#cad5e4",
                                      }
                                    }
                                  >
                                    blocks.richText.startWriting
                                  </div>
                                  <Editable
                                    onBlur={[Function]}
                                    renderElement={[Function]}
                                    renderLeaf={[Function]}
                                  >
                                    <div
                                      contentEditable={true}
                                      data-gramm={false}
                                      data-slate-editor={true}
                                      data-slate-node="value"
                                      onBeforeInput={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onCompositionEnd={[Function]}
                                      onCompositionStart={[Function]}
                                      onCopy={[Function]}
                                      onCut={[Function]}
                                      onDragOver={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onPaste={[Function]}
                                      role="textbox"
                                      style={
                                        Object {
                                          "outline": "none",
                                          "whiteSpace": "pre-wrap",
                                          "wordWrap": "break-word",
                                        }
                                      }
                                      suppressContentEditableWarning={true}
                                    >
                                      <Children
                                        decorate={[Function]}
                                        decorations={Array []}
                                        node={
                                          Object {
                                            "addMark": [Function],
                                            "apply": [Function],
                                            "children": Array [
                                              Object {
                                                "children": Array [
                                                  Object {
                                                    "text": "",
                                                  },
                                                ],
                                                "type": "paragraph",
                                              },
                                            ],
                                            "deleteBackward": [Function],
                                            "deleteForward": [Function],
                                            "deleteFragment": [Function],
                                            "getFragment": [Function],
                                            "history": Object {
                                              "redos": Array [],
                                              "undos": Array [],
                                            },
                                            "insertBreak": [Function],
                                            "insertData": [Function],
                                            "insertFragment": [Function],
                                            "insertNode": [Function],
                                            "insertText": [Function],
                                            "isInline": [Function],
                                            "isVoid": [Function],
                                            "marks": null,
                                            "normalizeNode": [Function],
                                            "onChange": [Function],
                                            "operations": Array [],
                                            "redo": [Function],
                                            "removeMark": [Function],
                                            "selection": null,
                                            "setFragmentData": [Function],
                                            "undo": [Function],
                                          }
                                        }
                                        renderElement={[Function]}
                                        renderLeaf={[Function]}
                                        selection={null}
                                      >
                                        <Element
                                          decorate={[Function]}
                                          decorations={Array []}
                                          element={
                                            Object {
                                              "children": Array [
                                                Object {
                                                  "text": "",
                                                },
                                              ],
                                              "type": "paragraph",
                                            }
                                          }
                                          key="8"
                                          renderElement={[Function]}
                                          renderLeaf={[Function]}
                                          selection={null}
                                        >
                                          <p
                                            data-slate-node="element"
                                          >
                                            <Children
                                              decorate={[Function]}
                                              decorations={Array []}
                                              node={
                                                Object {
                                                  "children": Array [
                                                    Object {
                                                      "text": "",
                                                    },
                                                  ],
                                                  "type": "paragraph",
                                                }
                                              }
                                              renderElement={[Function]}
                                              renderLeaf={[Function]}
                                              selection={null}
                                            >
                                              <Text
                                                decorations={Array []}
                                                isLast={true}
                                                key="9"
                                                parent={
                                                  Object {
                                                    "children": Array [
                                                      Object {
                                                        "text": "",
                                                      },
                                                    ],
                                                    "type": "paragraph",
                                                  }
                                                }
                                                renderLeaf={[Function]}
                                                text={
                                                  Object {
                                                    "text": "",
                                                  }
                                                }
                                              >
                                                <span
                                                  data-slate-node="text"
                                                >
                                                  <Leaf
                                                    isLast={true}
                                                    key="9-0"
                                                    leaf={
                                                      Object {
                                                        "text": "",
                                                      }
                                                    }
                                                    parent={
                                                      Object {
                                                        "children": Array [
                                                          Object {
                                                            "text": "",
                                                          },
                                                        ],
                                                        "type": "paragraph",
                                                      }
                                                    }
                                                    renderLeaf={[Function]}
                                                    text={
                                                      Object {
                                                        "text": "",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      data-slate-leaf={true}
                                                    >
                                                      <String
                                                        isLast={true}
                                                        leaf={
                                                          Object {
                                                            "text": "",
                                                          }
                                                        }
                                                        parent={
                                                          Object {
                                                            "children": Array [
                                                              Object {
                                                                "text": "",
                                                              },
                                                            ],
                                                            "type": "paragraph",
                                                          }
                                                        }
                                                        text={
                                                          Object {
                                                            "text": "",
                                                          }
                                                        }
                                                      >
                                                        <ZeroWidthString
                                                          isLineBreak={true}
                                                        >
                                                          <span
                                                            data-slate-length={0}
                                                            data-slate-zero-width="n"
                                                          >
                                                            ï»¿
                                                            <br />
                                                          </span>
                                                        </ZeroWidthString>
                                                      </String>
                                                    </span>
                                                  </Leaf>
                                                </span>
                                              </Text>
                                            </Children>
                                          </p>
                                        </Element>
                                      </Children>
                                    </div>
                                  </Editable>
                                </Slate>
                              </Memo(RichTextBlock)>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
              </div>
            </PanelGroup>
          </defaultProps(PanelGroup)>
        </div>
      </ModalBody>
    </defaultProps(ModalBody)>
  </Body>
  <defaultProps(defaultProps(ModalFooter))
    classPrefix="rs-drawer-footer"
  >
    <defaultProps(ModalFooter)
      classPrefix="rs-drawer-footer"
    >
      <ModalFooter
        classPrefix="rs-drawer-footer"
      >
        <div
          className="rs-drawer-footer"
        >
          <withStyleProps(defaultProps(Button))
            appearance="primary"
            classPrefix="rs-btn"
            componentClass="button"
            disabled={true}
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="primary"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              disabled={true}
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="primary"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                disabled={true}
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-primary rs-btn-disabled"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.create
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
          <withStyleProps(defaultProps(Button))
            appearance="subtle"
            classPrefix="rs-btn"
            componentClass="button"
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="subtle"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="subtle"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.close
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
        </div>
      </ModalFooter>
    </defaultProps(ModalFooter)>
  </defaultProps(defaultProps(ModalFooter))>
  <defaultProps(Drawer)
    classPrefix="rs-drawer"
    onHide={[Function]}
    placement="right"
    show={false}
    size="sm"
  >
    <Drawer
      classPrefix="rs-drawer"
      onHide={[Function]}
      placement="right"
      show={false}
      size="sm"
    >
      <defaultProps(Modal)
        animation={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Slide",
            "render": [Function],
          }
        }
        animationProps={
          Object {
            "placement": "right",
          }
        }
        animationTimeout={300}
        autoFocus={true}
        backdrop={true}
        className="rs-drawer-right"
        classPrefix="rs-drawer"
        dialogComponentClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "classPrefix": "rs-modal",
            },
            "displayName": "withStyleProps(defaultProps(ModalDialog))",
            "propTypes": Object {
              "innerRef": [Function],
              "size": [Function],
            },
            "render": [Function],
          }
        }
        drawer={true}
        enforceFocus={true}
        keyboard={true}
        onHide={[Function]}
        overflow={true}
        show={false}
        size="sm"
      >
        <Modal
          animation={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Slide",
              "render": [Function],
            }
          }
          animationProps={
            Object {
              "placement": "right",
            }
          }
          animationTimeout={300}
          autoFocus={true}
          backdrop={true}
          className="rs-drawer-right"
          classPrefix="rs-drawer"
          dialogComponentClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "classPrefix": "rs-modal",
              },
              "displayName": "withStyleProps(defaultProps(ModalDialog))",
              "propTypes": Object {
                "innerRef": [Function],
                "size": [Function],
              },
              "render": [Function],
            }
          }
          drawer={true}
          enforceFocus={true}
          keyboard={true}
          onHide={[Function]}
          overflow={true}
          show={false}
          size="sm"
        >
          <BaseModal
            animationProps={
              Object {
                "placement": "right",
              }
            }
            autoFocus={true}
            backdrop={true}
            backdropClassName="rs-drawer-backdrop"
            backdropTransitionTimeout={150}
            className="rs-drawer-wrapper"
            containerClassName="rs-drawer-open rs-drawer-has-backdrop"
            dialogTransitionTimeout={300}
            drawer={true}
            enforceFocus={true}
            keyboard={true}
            onEntered={[Function]}
            onEntering={[Function]}
            onExited={[Function]}
            onHide={[Function]}
            overflow={true}
            show={false}
            transition={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Slide",
                "render": [Function],
              }
            }
          />
        </Modal>
      </defaultProps(Modal)>
    </Drawer>
  </defaultProps(Drawer)>
  <defaultProps(Drawer)
    classPrefix="rs-drawer"
    placement="right"
    show={false}
    size="sm"
  >
    <Drawer
      classPrefix="rs-drawer"
      placement="right"
      show={false}
      size="sm"
    >
      <defaultProps(Modal)
        animation={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Slide",
            "render": [Function],
          }
        }
        animationProps={
          Object {
            "placement": "right",
          }
        }
        animationTimeout={300}
        autoFocus={true}
        backdrop={true}
        className="rs-drawer-right"
        classPrefix="rs-drawer"
        dialogComponentClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "classPrefix": "rs-modal",
            },
            "displayName": "withStyleProps(defaultProps(ModalDialog))",
            "propTypes": Object {
              "innerRef": [Function],
              "size": [Function],
            },
            "render": [Function],
          }
        }
        drawer={true}
        enforceFocus={true}
        keyboard={true}
        overflow={true}
        show={false}
        size="sm"
      >
        <Modal
          animation={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Slide",
              "render": [Function],
            }
          }
          animationProps={
            Object {
              "placement": "right",
            }
          }
          animationTimeout={300}
          autoFocus={true}
          backdrop={true}
          className="rs-drawer-right"
          classPrefix="rs-drawer"
          dialogComponentClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "classPrefix": "rs-modal",
              },
              "displayName": "withStyleProps(defaultProps(ModalDialog))",
              "propTypes": Object {
                "innerRef": [Function],
                "size": [Function],
              },
              "render": [Function],
            }
          }
          drawer={true}
          enforceFocus={true}
          keyboard={true}
          overflow={true}
          show={false}
          size="sm"
        >
          <BaseModal
            animationProps={
              Object {
                "placement": "right",
              }
            }
            autoFocus={true}
            backdrop={true}
            backdropClassName="rs-drawer-backdrop"
            backdropTransitionTimeout={150}
            className="rs-drawer-wrapper"
            containerClassName="rs-drawer-open rs-drawer-has-backdrop"
            dialogTransitionTimeout={300}
            drawer={true}
            enforceFocus={true}
            keyboard={true}
            onEntered={[Function]}
            onEntering={[Function]}
            onExited={[Function]}
            overflow={true}
            show={false}
            transition={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Slide",
                "render": [Function],
              }
            }
          />
        </Modal>
      </defaultProps(Modal)>
    </Drawer>
  </defaultProps(Drawer)>
</AuthorEditPanel>
`;

exports[`Author Edit Panel should expand links fields when Add Block button is clicked 1`] = `
<AuthorEditPanel>
  <defaultProps(defaultProps(ModalHeader))
    classPrefix="rs-drawer-header"
    closeButton={true}
  >
    <defaultProps(ModalHeader)
      classPrefix="rs-drawer-header"
      closeButton={true}
    >
      <ModalHeader
        classPrefix="rs-drawer-header"
        closeButton={true}
      >
        <div
          className="rs-drawer-header"
        >
          <button
            aria-label="Close"
            className="rs-drawer-header-close"
            type="button"
          >
            <span
              aria-hidden="true"
            >
              Ã—
            </span>
          </button>
          <defaultProps(defaultProps(ModalTitle))
            classPrefix="rs-drawer-title"
          >
            <defaultProps(ModalTitle)
              classPrefix="rs-drawer-title"
            >
              <ModalTitle
                classPrefix="rs-drawer-title"
              >
                <h4
                  className="rs-drawer-title"
                >
                  authors.panels.createAuthor
                </h4>
              </ModalTitle>
            </defaultProps(ModalTitle)>
          </defaultProps(defaultProps(ModalTitle))>
        </div>
      </ModalHeader>
    </defaultProps(ModalHeader)>
  </defaultProps(defaultProps(ModalHeader))>
  <Body
    classPrefix="rs-drawer-body"
  >
    <defaultProps(ModalBody)
      classPrefix="rs-drawer-body"
    >
      <ModalBody
        classPrefix="rs-drawer-body"
      >
        <div
          className="rs-drawer-body"
          style={Object {}}
        >
          <defaultProps(PanelGroup)
            accordion={true}
            classPrefix="rs-panel-group"
          >
            <PanelGroup
              accordion={true}
              classPrefix="rs-panel-group"
            >
              <div
                className="rs-panel-group rs-panel-group-accordion"
                role="tablist"
              >
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  defaultExpanded={true}
                  header="authors.panels.name"
                  headerRole="tab"
                  key="0/.0"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    defaultExpanded={true}
                    header="authors.panels.name"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-in rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            aria-expanded={true}
                            aria-selected={true}
                            className={null}
                            role="tab"
                          >
                            authors.panels.name
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        in={true}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          in={true}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={false}
                            className="rs-panel-collapse collapse in"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <Form
                                checkDelay={500}
                                checkTrigger="change"
                                classPrefix="rs-form"
                                errorFromContext={true}
                                fluid={true}
                                formDefaultValue={Object {}}
                                layout="vertical"
                                model={
                                  Schema {
                                    "schema": Object {},
                                  }
                                }
                              >
                                <form
                                  className="rs-form rs-form-vertical rs-form-fluid"
                                  onSubmit={[Function]}
                                >
                                  <withStyleProps(defaultProps(InputGroup))
                                    classPrefix="rs-input-group"
                                    inside={true}
                                  >
                                    <defaultProps(InputGroup)
                                      className=""
                                      classPrefix="rs-input-group"
                                      inside={true}
                                    >
                                      <InputGroup
                                        className=""
                                        classPrefix="rs-input-group"
                                        inside={true}
                                      >
                                        <div
                                          className="rs-input-group rs-input-group-inside"
                                        >
                                          <defaultProps(InputGroupAddon)
                                            classPrefix="rs-input-group-addon"
                                          >
                                            <InputGroupAddon
                                              classPrefix="rs-input-group-addon"
                                            >
                                              <span
                                                className="rs-input-group-addon"
                                              >
                                                <defaultProps(Icon)
                                                  classPrefix="rs-icon"
                                                  componentClass="i"
                                                  icon="avatar"
                                                >
                                                  <Icon
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="avatar"
                                                  >
                                                    <i
                                                      className="rs-icon rs-icon-avatar"
                                                    />
                                                  </Icon>
                                                </defaultProps(Icon)>
                                              </span>
                                            </InputGroupAddon>
                                          </defaultProps(InputGroupAddon)>
                                          <defaultProps(FormControlWrapper)
                                            classPrefix="rs-form-control"
                                            disabled={false}
                                            name="authors.panels.name"
                                            onChange={[Function]}
                                            value=""
                                          >
                                            <FormControlWrapper
                                              classPrefix="rs-form-control"
                                              disabled={false}
                                              name="authors.panels.name"
                                              onChange={[Function]}
                                              value=""
                                            >
                                              <FormControl
                                                accepter={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "contextType": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": Object {
                                                        "$$typeof": Symbol(react.context),
                                                        "_calculateChangedBits": null,
                                                        "_context": [Circular],
                                                      },
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": null,
                                                      "_currentValue2": null,
                                                      "_threadCount": 0,
                                                    },
                                                    "defaultProps": Object {
                                                      "classPrefix": "rs-input",
                                                      "componentClass": "input",
                                                      "type": "text",
                                                    },
                                                    "displayName": "withStyleProps(defaultProps(Input))",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "size": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                classPrefix="rs-form-control"
                                                disabled={false}
                                                errorPlacement="bottomStart"
                                                formValue={Object {}}
                                                name="authors.panels.name"
                                                onChange={[Function]}
                                                plaintextDefaultValue="--"
                                                value=""
                                              >
                                                <div
                                                  className="rs-form-control-wrapper"
                                                >
                                                  <withStyleProps(defaultProps(Input))
                                                    classPrefix="rs-input"
                                                    componentClass="input"
                                                    disabled={false}
                                                    name="authors.panels.name"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <defaultProps(Input)
                                                      className=""
                                                      classPrefix="rs-input"
                                                      componentClass="input"
                                                      disabled={false}
                                                      name="authors.panels.name"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      type="text"
                                                      value=""
                                                    >
                                                      <Input
                                                        className=""
                                                        classPrefix="rs-input"
                                                        componentClass="input"
                                                        disabled={false}
                                                        name="authors.panels.name"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                      >
                                                        <input
                                                          className="rs-input"
                                                          disabled={false}
                                                          id={null}
                                                          name="authors.panels.name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="text"
                                                          value=""
                                                        />
                                                      </Input>
                                                    </defaultProps(Input)>
                                                  </withStyleProps(defaultProps(Input))>
                                                  <defaultProps(ErrorMessage)
                                                    className="rs-form-control-message-wrapper"
                                                    classPrefix="rs-error-message"
                                                    placement="bottomStart"
                                                    show={false}
                                                  >
                                                    <ErrorMessage
                                                      className="rs-form-control-message-wrapper"
                                                      classPrefix="rs-error-message"
                                                      placement="bottomStart"
                                                      show={false}
                                                    />
                                                  </defaultProps(ErrorMessage)>
                                                </div>
                                              </FormControl>
                                            </FormControlWrapper>
                                          </defaultProps(FormControlWrapper)>
                                        </div>
                                      </InputGroup>
                                    </defaultProps(InputGroup)>
                                  </withStyleProps(defaultProps(InputGroup))>
                                </form>
                              </Form>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.image"
                  headerRole="tab"
                  key="1/.1"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.image"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.image
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <ChooseEditImage
                                disabled={false}
                                header=""
                                left={0}
                                openChooseModalOpen={[Function]}
                                openEditModalOpen={[Function]}
                                removeImage={[Function]}
                                top={0}
                              >
                                <defaultProps(Panel)
                                  bodyFill={true}
                                  classPrefix="rs-panel"
                                  header=""
                                  style={
                                    Object {
                                      "height": 240,
                                      "marginBottom": 10,
                                    }
                                  }
                                >
                                  <Panel
                                    bodyFill={true}
                                    classPrefix="rs-panel"
                                    header=""
                                    style={
                                      Object {
                                        "height": 240,
                                        "marginBottom": 10,
                                      }
                                    }
                                  >
                                    <div
                                      className="rs-panel rs-panel-default"
                                      style={
                                        Object {
                                          "height": 240,
                                          "marginBottom": 10,
                                        }
                                      }
                                    >
                                      <div
                                        className="rs-panel-body rs-panel-body-fill"
                                      >
                                        <PlaceholderInput
                                          onAddClick={[Function]}
                                        >
                                          <div
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "backgroundColor": "#f7f9fa",
                                                "display": "flex",
                                                "flexDirection": "column",
                                                "height": "100%",
                                                "justifyContent": "center",
                                                "width": "100%",
                                              }
                                            }
                                          >
                                            <defaultProps(IconButton)
                                              classPrefix="rs-btn-icon"
                                              icon={
                                                <defaultProps(Icon)
                                                  classPrefix="rs-icon"
                                                  componentClass="i"
                                                  icon="plus-circle"
                                                  size="5x"
                                                />
                                              }
                                              onClick={[Function]}
                                              placement="left"
                                              size="lg"
                                            >
                                              <IconButton
                                                classPrefix="rs-btn-icon"
                                                icon={
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="plus-circle"
                                                    size="5x"
                                                  />
                                                }
                                                onClick={[Function]}
                                                placement="left"
                                                size="lg"
                                              >
                                                <withStyleProps(defaultProps(Button))
                                                  appearance="default"
                                                  className="rs-btn-icon rs-btn-icon-placement-left"
                                                  classPrefix="rs-btn"
                                                  componentClass="button"
                                                  onClick={[Function]}
                                                  ripple={true}
                                                  size="lg"
                                                >
                                                  <defaultProps(Button)
                                                    appearance="default"
                                                    className="rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                    classPrefix="rs-btn"
                                                    componentClass="button"
                                                    onClick={[Function]}
                                                    ripple={true}
                                                  >
                                                    <Button
                                                      appearance="default"
                                                      className="rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                      classPrefix="rs-btn"
                                                      componentClass="button"
                                                      onClick={[Function]}
                                                      ripple={true}
                                                    >
                                                      <button
                                                        className="rs-btn rs-btn-default rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <defaultProps(Icon)
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="plus-circle"
                                                          size="5x"
                                                        >
                                                          <Icon
                                                            classPrefix="rs-icon"
                                                            componentClass="i"
                                                            icon="plus-circle"
                                                            size="5x"
                                                          >
                                                            <i
                                                              className="rs-icon rs-icon-plus-circle rs-icon-size-5x"
                                                            />
                                                          </Icon>
                                                        </defaultProps(Icon)>
                                                        <defaultProps(Ripple)
                                                          classPrefix="rs-ripple"
                                                        >
                                                          <Ripple
                                                            classPrefix="rs-ripple"
                                                          >
                                                            <span
                                                              className="rs-ripple-pond"
                                                            >
                                                              <Transition
                                                                enteringClassName="rs-ripple-rippling"
                                                                in={false}
                                                                onEntered={[Function]}
                                                                timeout={1000}
                                                              >
                                                                <span
                                                                  className="rs-ripple"
                                                                  style={Object {}}
                                                                />
                                                              </Transition>
                                                            </span>
                                                          </Ripple>
                                                        </defaultProps(Ripple)>
                                                      </button>
                                                    </Button>
                                                  </defaultProps(Button)>
                                                </withStyleProps(defaultProps(Button))>
                                              </IconButton>
                                            </defaultProps(IconButton)>
                                          </div>
                                        </PlaceholderInput>
                                      </div>
                                    </div>
                                  </Panel>
                                </defaultProps(Panel)>
                              </ChooseEditImage>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.links"
                  headerRole="tab"
                  key="2/.2"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.links"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.links
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <ListInput
                                defaultValue={
                                  Object {
                                    "title": "",
                                    "url": "",
                                  }
                                }
                                onChange={[Function]}
                                value={
                                  Array [
                                    Object {
                                      "id": "fakeNanoid1",
                                      "value": Object {
                                        "title": "",
                                        "url": "",
                                      },
                                    },
                                  ]
                                }
                              >
                                <div>
                                  <Component
                                    defaultValue={
                                      Object {
                                        "title": "",
                                        "url": "",
                                      }
                                    }
                                    onChange={[Function]}
                                    onSortEnd={[Function]}
                                    useDragHandle={true}
                                    value={
                                      Array [
                                        Object {
                                          "id": "fakeNanoid1",
                                          "value": Object {
                                            "title": "",
                                            "url": "",
                                          },
                                        },
                                      ]
                                    }
                                  >
                                    <div>
                                      <Component
                                        index={0}
                                        itemIndex={0}
                                        key="fakeNanoid1"
                                        onChange={[Function]}
                                        onRemove={[Function]}
                                        value={
                                          Object {
                                            "id": "fakeNanoid1",
                                            "value": Object {
                                              "title": "",
                                              "url": "",
                                            },
                                          }
                                        }
                                      >
                                        <div
                                          style={
                                            Object {
                                              "display": "flex",
                                              "flexDirection": "row",
                                              "marginBottom": "10px",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "marginRight": "10px",
                                              }
                                            }
                                          >
                                            <Component>
                                              <defaultProps(IconButton)
                                                classPrefix="rs-btn-icon"
                                                icon={
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="th2"
                                                  />
                                                }
                                                placement="left"
                                              >
                                                <IconButton
                                                  classPrefix="rs-btn-icon"
                                                  icon={
                                                    <defaultProps(Icon)
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      icon="th2"
                                                    />
                                                  }
                                                  placement="left"
                                                >
                                                  <withStyleProps(defaultProps(Button))
                                                    appearance="default"
                                                    className="rs-btn-icon rs-btn-icon-placement-left"
                                                    classPrefix="rs-btn"
                                                    componentClass="button"
                                                    ripple={true}
                                                  >
                                                    <defaultProps(Button)
                                                      appearance="default"
                                                      className="rs-btn-icon rs-btn-icon-placement-left"
                                                      classPrefix="rs-btn"
                                                      componentClass="button"
                                                      ripple={true}
                                                    >
                                                      <Button
                                                        appearance="default"
                                                        className="rs-btn-icon rs-btn-icon-placement-left"
                                                        classPrefix="rs-btn"
                                                        componentClass="button"
                                                        ripple={true}
                                                      >
                                                        <button
                                                          className="rs-btn rs-btn-default rs-btn-icon rs-btn-icon-placement-left"
                                                          type="button"
                                                        >
                                                          <defaultProps(Icon)
                                                            classPrefix="rs-icon"
                                                            componentClass="i"
                                                            icon="th2"
                                                          >
                                                            <Icon
                                                              classPrefix="rs-icon"
                                                              componentClass="i"
                                                              icon="th2"
                                                            >
                                                              <i
                                                                className="rs-icon rs-icon-th2"
                                                              />
                                                            </Icon>
                                                          </defaultProps(Icon)>
                                                          <defaultProps(Ripple)
                                                            classPrefix="rs-ripple"
                                                          >
                                                            <Ripple
                                                              classPrefix="rs-ripple"
                                                            >
                                                              <span
                                                                className="rs-ripple-pond"
                                                              >
                                                                <Transition
                                                                  enteringClassName="rs-ripple-rippling"
                                                                  in={false}
                                                                  onEntered={[Function]}
                                                                  timeout={1000}
                                                                >
                                                                  <span
                                                                    className="rs-ripple"
                                                                    style={Object {}}
                                                                  />
                                                                </Transition>
                                                              </span>
                                                            </Ripple>
                                                          </defaultProps(Ripple)>
                                                        </button>
                                                      </Button>
                                                    </defaultProps(Button)>
                                                  </withStyleProps(defaultProps(Button))>
                                                </IconButton>
                                              </defaultProps(IconButton)>
                                            </Component>
                                          </div>
                                          <defaultProps(Panel)
                                            bodyFill={true}
                                            classPrefix="rs-panel"
                                            style={
                                              Object {
                                                "width": "100%",
                                              }
                                            }
                                          >
                                            <Panel
                                              bodyFill={true}
                                              classPrefix="rs-panel"
                                              style={
                                                Object {
                                                  "width": "100%",
                                                }
                                              }
                                            >
                                              <div
                                                className="rs-panel rs-panel-default"
                                                style={
                                                  Object {
                                                    "width": "100%",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="rs-panel-body rs-panel-body-fill"
                                                >
                                                  <div
                                                    style={
                                                      Object {
                                                        "minHeight": "100%",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      style={
                                                        Object {
                                                          "display": "flex",
                                                          "flexDirection": "row",
                                                        }
                                                      }
                                                    >
                                                      <withStyleProps(defaultProps(Input))
                                                        classPrefix="rs-input"
                                                        componentClass="input"
                                                        onChange={[Function]}
                                                        placeholder="authors.panels.title"
                                                        style={
                                                          Object {
                                                            "marginRight": "10px",
                                                            "width": "30%",
                                                          }
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <defaultProps(Input)
                                                          className=""
                                                          classPrefix="rs-input"
                                                          componentClass="input"
                                                          onChange={[Function]}
                                                          placeholder="authors.panels.title"
                                                          style={
                                                            Object {
                                                              "marginRight": "10px",
                                                              "width": "30%",
                                                            }
                                                          }
                                                          type="text"
                                                          value=""
                                                        >
                                                          <Input
                                                            className=""
                                                            classPrefix="rs-input"
                                                            componentClass="input"
                                                            onChange={[Function]}
                                                            placeholder="authors.panels.title"
                                                            style={
                                                              Object {
                                                                "marginRight": "10px",
                                                                "width": "30%",
                                                              }
                                                            }
                                                            type="text"
                                                            value=""
                                                          >
                                                            <input
                                                              className="rs-input"
                                                              id={null}
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              placeholder="authors.panels.title"
                                                              style={
                                                                Object {
                                                                  "marginRight": "10px",
                                                                  "width": "30%",
                                                                }
                                                              }
                                                              type="text"
                                                              value="abcd"
                                                            />
                                                          </Input>
                                                        </defaultProps(Input)>
                                                      </withStyleProps(defaultProps(Input))>
                                                      <withStyleProps(defaultProps(InputGroup))
                                                        classPrefix="rs-input-group"
                                                        inside={true}
                                                      >
                                                        <defaultProps(InputGroup)
                                                          className=""
                                                          classPrefix="rs-input-group"
                                                          inside={true}
                                                        >
                                                          <InputGroup
                                                            className=""
                                                            classPrefix="rs-input-group"
                                                            inside={true}
                                                          >
                                                            <div
                                                              className="rs-input-group rs-input-group-inside"
                                                            >
                                                              <defaultProps(InputGroupAddon)
                                                                classPrefix="rs-input-group-addon"
                                                              >
                                                                <InputGroupAddon
                                                                  classPrefix="rs-input-group-addon"
                                                                >
                                                                  <span
                                                                    className="rs-input-group-addon"
                                                                  >
                                                                    <defaultProps(Icon)
                                                                      classPrefix="rs-icon"
                                                                      componentClass="i"
                                                                      icon="link"
                                                                    >
                                                                      <Icon
                                                                        classPrefix="rs-icon"
                                                                        componentClass="i"
                                                                        icon="link"
                                                                      >
                                                                        <i
                                                                          className="rs-icon rs-icon-link"
                                                                        />
                                                                      </Icon>
                                                                    </defaultProps(Icon)>
                                                                  </span>
                                                                </InputGroupAddon>
                                                              </defaultProps(InputGroupAddon)>
                                                              <withStyleProps(defaultProps(Input))
                                                                classPrefix="rs-input"
                                                                componentClass="input"
                                                                onChange={[Function]}
                                                                placeholder="authors.panels.link"
                                                                style={
                                                                  Object {
                                                                    "width": "70%",
                                                                  }
                                                                }
                                                                type="text"
                                                                value=""
                                                              >
                                                                <defaultProps(Input)
                                                                  className=""
                                                                  classPrefix="rs-input"
                                                                  componentClass="input"
                                                                  onChange={[Function]}
                                                                  placeholder="authors.panels.link"
                                                                  style={
                                                                    Object {
                                                                      "width": "70%",
                                                                    }
                                                                  }
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <Input
                                                                    className=""
                                                                    classPrefix="rs-input"
                                                                    componentClass="input"
                                                                    onChange={[Function]}
                                                                    placeholder="authors.panels.link"
                                                                    style={
                                                                      Object {
                                                                        "width": "70%",
                                                                      }
                                                                    }
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      className="rs-input"
                                                                      id={null}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      placeholder="authors.panels.link"
                                                                      style={
                                                                        Object {
                                                                          "width": "70%",
                                                                        }
                                                                      }
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                </defaultProps(Input)>
                                                              </withStyleProps(defaultProps(Input))>
                                                            </div>
                                                          </InputGroup>
                                                        </defaultProps(InputGroup)>
                                                      </withStyleProps(defaultProps(InputGroup))>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </Panel>
                                          </defaultProps(Panel)>
                                          <div
                                            style={
                                              Object {
                                                "marginLeft": "10px",
                                              }
                                            }
                                          >
                                            <defaultProps(IconButton)
                                              classPrefix="rs-btn-icon"
                                              icon={
                                                <defaultProps(Icon)
                                                  classPrefix="rs-icon"
                                                  componentClass="i"
                                                  icon="trash"
                                                />
                                              }
                                              onClick={[Function]}
                                              placement="left"
                                            >
                                              <IconButton
                                                classPrefix="rs-btn-icon"
                                                icon={
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="trash"
                                                  />
                                                }
                                                onClick={[Function]}
                                                placement="left"
                                              >
                                                <withStyleProps(defaultProps(Button))
                                                  appearance="default"
                                                  className="rs-btn-icon rs-btn-icon-placement-left"
                                                  classPrefix="rs-btn"
                                                  componentClass="button"
                                                  onClick={[Function]}
                                                  ripple={true}
                                                >
                                                  <defaultProps(Button)
                                                    appearance="default"
                                                    className="rs-btn-icon rs-btn-icon-placement-left"
                                                    classPrefix="rs-btn"
                                                    componentClass="button"
                                                    onClick={[Function]}
                                                    ripple={true}
                                                  >
                                                    <Button
                                                      appearance="default"
                                                      className="rs-btn-icon rs-btn-icon-placement-left"
                                                      classPrefix="rs-btn"
                                                      componentClass="button"
                                                      onClick={[Function]}
                                                      ripple={true}
                                                    >
                                                      <button
                                                        className="rs-btn rs-btn-default rs-btn-icon rs-btn-icon-placement-left"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <defaultProps(Icon)
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="trash"
                                                        >
                                                          <Icon
                                                            classPrefix="rs-icon"
                                                            componentClass="i"
                                                            icon="trash"
                                                          >
                                                            <i
                                                              className="rs-icon rs-icon-trash"
                                                            />
                                                          </Icon>
                                                        </defaultProps(Icon)>
                                                        <defaultProps(Ripple)
                                                          classPrefix="rs-ripple"
                                                        >
                                                          <Ripple
                                                            classPrefix="rs-ripple"
                                                          >
                                                            <span
                                                              className="rs-ripple-pond"
                                                            >
                                                              <Transition
                                                                enteringClassName="rs-ripple-rippling"
                                                                in={false}
                                                                onEntered={[Function]}
                                                                timeout={1000}
                                                              >
                                                                <span
                                                                  className="rs-ripple"
                                                                  style={Object {}}
                                                                />
                                                              </Transition>
                                                            </span>
                                                          </Ripple>
                                                        </defaultProps(Ripple)>
                                                      </button>
                                                    </Button>
                                                  </defaultProps(Button)>
                                                </withStyleProps(defaultProps(Button))>
                                              </IconButton>
                                            </defaultProps(IconButton)>
                                          </div>
                                        </div>
                                      </Component>
                                      <defaultProps(IconButton)
                                        classPrefix="rs-btn-icon"
                                        icon={
                                          <defaultProps(Icon)
                                            classPrefix="rs-icon"
                                            componentClass="i"
                                            icon="plus-circle"
                                          />
                                        }
                                        onClick={[Function]}
                                        placement="left"
                                      >
                                        <IconButton
                                          classPrefix="rs-btn-icon"
                                          icon={
                                            <defaultProps(Icon)
                                              classPrefix="rs-icon"
                                              componentClass="i"
                                              icon="plus-circle"
                                            />
                                          }
                                          onClick={[Function]}
                                          placement="left"
                                        >
                                          <withStyleProps(defaultProps(Button))
                                            appearance="default"
                                            className="rs-btn-icon rs-btn-icon-placement-left"
                                            classPrefix="rs-btn"
                                            componentClass="button"
                                            onClick={[Function]}
                                            ripple={true}
                                          >
                                            <defaultProps(Button)
                                              appearance="default"
                                              className="rs-btn-icon rs-btn-icon-placement-left"
                                              classPrefix="rs-btn"
                                              componentClass="button"
                                              onClick={[Function]}
                                              ripple={true}
                                            >
                                              <Button
                                                appearance="default"
                                                className="rs-btn-icon rs-btn-icon-placement-left"
                                                classPrefix="rs-btn"
                                                componentClass="button"
                                                onClick={[Function]}
                                                ripple={true}
                                              >
                                                <button
                                                  className="rs-btn rs-btn-default rs-btn-icon rs-btn-icon-placement-left"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="plus-circle"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      icon="plus-circle"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-plus-circle"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                  <defaultProps(Ripple)
                                                    classPrefix="rs-ripple"
                                                  >
                                                    <Ripple
                                                      classPrefix="rs-ripple"
                                                    >
                                                      <span
                                                        className="rs-ripple-pond"
                                                      >
                                                        <Transition
                                                          enteringClassName="rs-ripple-rippling"
                                                          in={false}
                                                          onEntered={[Function]}
                                                          timeout={1000}
                                                        >
                                                          <span
                                                            className="rs-ripple"
                                                            style={Object {}}
                                                          />
                                                        </Transition>
                                                      </span>
                                                    </Ripple>
                                                  </defaultProps(Ripple)>
                                                </button>
                                              </Button>
                                            </defaultProps(Button)>
                                          </withStyleProps(defaultProps(Button))>
                                        </IconButton>
                                      </defaultProps(IconButton)>
                                    </div>
                                  </Component>
                                </div>
                              </ListInput>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.bioInformation"
                  headerRole="tab"
                  key="3/.3"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.bioInformation"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.bioInformation
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <Memo(RichTextBlock)
                                onChange={[Function]}
                                value={
                                  Array [
                                    Object {
                                      "children": Array [
                                        Object {
                                          "text": "",
                                        },
                                      ],
                                      "type": "paragraph",
                                    },
                                  ]
                                }
                              >
                                <Slate
                                  editor={
                                    Object {
                                      "addMark": [Function],
                                      "apply": [Function],
                                      "children": Array [
                                        Object {
                                          "children": Array [
                                            Object {
                                              "text": "",
                                            },
                                          ],
                                          "type": "paragraph",
                                        },
                                      ],
                                      "deleteBackward": [Function],
                                      "deleteForward": [Function],
                                      "deleteFragment": [Function],
                                      "getFragment": [Function],
                                      "history": Object {
                                        "redos": Array [],
                                        "undos": Array [],
                                      },
                                      "insertBreak": [Function],
                                      "insertData": [Function],
                                      "insertFragment": [Function],
                                      "insertNode": [Function],
                                      "insertText": [Function],
                                      "isInline": [Function],
                                      "isVoid": [Function],
                                      "marks": null,
                                      "normalizeNode": [Function],
                                      "onChange": [Function],
                                      "operations": Array [],
                                      "redo": [Function],
                                      "removeMark": [Function],
                                      "selection": null,
                                      "setFragmentData": [Function],
                                      "undo": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value={
                                    Array [
                                      Object {
                                        "children": Array [
                                          Object {
                                            "text": "",
                                          },
                                        ],
                                        "type": "paragraph",
                                      },
                                    ]
                                  }
                                >
                                  <Toolbar
                                    fadeOut={true}
                                    onMouseDown={[Function]}
                                  >
                                    <div
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "display": "flex",
                                          "justifyContent": "center",
                                          "marginBottom": 30,
                                          "pointerEvents": "none",
                                          "position": "sticky",
                                          "zIndex": 1,
                                        }
                                      }
                                    >
                                      <div
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                            "borderRadius": 6,
                                            "padding": 5,
                                            "pointerEvents": "auto",
                                            "transitionDuration": "100ms",
                                            "transitionProperty": "opacity",
                                          }
                                        }
                                      >
                                        <div
                                          style={
                                            Object {
                                              "display": "flex",
                                              "opacity": 0.5,
                                              "transitionDuration": "100ms",
                                              "transitionProperty": "opacity",
                                            }
                                          }
                                        >
                                          <FormatButton
                                            format="heading-one"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H1Icon>
                                                  <svg
                                                    className="bi bi-type-h1"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M8.637 13V3.669H7.379V7.62H2.758V3.67H1.5V13h1.258V8.728h4.62V13h1.259zm5.329 0V3.669h-1.244L10.5 5.316v1.265l2.16-1.565h.062V13h1.244z"
                                                    />
                                                  </svg>
                                                </H1Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <FormatButton
                                            format="heading-two"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H2Icon>
                                                  <svg
                                                    className="bi bi-type-h2"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M7.638 13V3.669H6.38V7.62H1.759V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.022-6.733v-.048c0-.889.63-1.668 1.716-1.668.957 0 1.675.608 1.675 1.572 0 .855-.554 1.504-1.067 2.085l-3.513 3.999V13H15.5v-1.094h-4.245v-.075l2.481-2.844c.875-.998 1.586-1.784 1.586-2.953 0-1.463-1.155-2.556-2.919-2.556-1.941 0-2.966 1.326-2.966 2.74v.049h1.223z"
                                                    />
                                                  </svg>
                                                </H2Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <FormatButton
                                            format="heading-three"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H3Icon>
                                                  <svg
                                                    className="bi bi-type-h3"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M7.637 13V3.669H6.379V7.62H1.758V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.625-4.272h1.018c1.142 0 1.935.67 1.949 1.674.013 1.005-.78 1.737-2.01 1.73-1.08-.007-1.853-.588-1.935-1.32H9.108c.069 1.327 1.224 2.386 3.083 2.386 1.935 0 3.343-1.155 3.309-2.789-.027-1.51-1.251-2.16-2.037-2.249v-.068c.704-.123 1.764-.91 1.723-2.229-.035-1.353-1.176-2.4-2.954-2.385-1.873.006-2.857 1.162-2.898 2.358h1.196c.062-.69.711-1.299 1.696-1.299.998 0 1.695.622 1.695 1.525.007.922-.718 1.592-1.695 1.592h-.964v1.074z"
                                                    />
                                                  </svg>
                                                </H3Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <FormatIconButton
                                            format="unordered-list"
                                            icon="list-ul"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="list-ul"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="list-ul"
                                                    icon="list-ul"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="list-ul"
                                                      icon="list-ul"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-list-ul"
                                                        element="list-ul"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="ordered-list"
                                            icon="list-ol"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="list-ol"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="list-ol"
                                                    icon="list-ol"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="list-ol"
                                                      icon="list-ol"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-list-ol"
                                                        element="list-ol"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <EditorSubMenuButton
                                            editorHasFocus={false}
                                            icon="table"
                                          >
                                            <ForwardRef
                                              icon="table"
                                            >
                                              <withLocale(Whisper)
                                                placement="top"
                                                speaker={
                                                  <defaultProps(Popover)
                                                    classPrefix="rs-popover"
                                                  >
                                                    <TableMenu />
                                                  </defaultProps(Popover)>
                                                }
                                                trigger="none"
                                              >
                                                <Whisper
                                                  locale={
                                                    Object {
                                                      "formatDate": [Function],
                                                    }
                                                  }
                                                  placement="top"
                                                  speaker={
                                                    <defaultProps(Popover)
                                                      classPrefix="rs-popover"
                                                    >
                                                      <TableMenu />
                                                    </defaultProps(Popover)>
                                                  }
                                                  trigger="none"
                                                >
                                                  <OverlayTrigger
                                                    delayHide={200}
                                                    locale={
                                                      Object {
                                                        "formatDate": [Function],
                                                      }
                                                    }
                                                    placement="top"
                                                    rootClose={true}
                                                    speaker={
                                                      <defaultProps(Popover)
                                                        classPrefix="rs-popover"
                                                      >
                                                        <TableMenu />
                                                      </defaultProps(Popover)>
                                                    }
                                                    trigger="none"
                                                  >
                                                    <ForwardRef
                                                      active={false}
                                                      key="triggerComponent"
                                                      onMouseDown={[Function]}
                                                    >
                                                      <button
                                                        className="icon-button"
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "border": "#00000000 1px solid",
                                                          }
                                                        }
                                                      >
                                                        <defaultProps(Icon)
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="table"
                                                          style={
                                                            Object {
                                                              "minWidth": "15px",
                                                            }
                                                          }
                                                        >
                                                          <Icon
                                                            classPrefix="rs-icon"
                                                            componentClass="i"
                                                            icon="table"
                                                            style={
                                                              Object {
                                                                "minWidth": "15px",
                                                              }
                                                            }
                                                          >
                                                            <i
                                                              className="rs-icon rs-icon-table"
                                                              style={
                                                                Object {
                                                                  "minWidth": "15px",
                                                                }
                                                              }
                                                            />
                                                          </Icon>
                                                        </defaultProps(Icon)>
                                                      </button>
                                                    </ForwardRef>
                                                    <Portal
                                                      key="portal"
                                                    >
                                                      <Portal
                                                        containerInfo={<body />}
                                                      >
                                                        <Overlay
                                                          placement="top"
                                                          rootClose={true}
                                                          show={false}
                                                          target={[Function]}
                                                        >
                                                          <BaseOverlay
                                                            placement="top"
                                                            rootClose={true}
                                                            show={false}
                                                            target={[Function]}
                                                            transition={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Fade",
                                                                "render": [Function],
                                                              }
                                                            }
                                                          />
                                                        </Overlay>
                                                      </Portal>
                                                    </Portal>
                                                  </OverlayTrigger>
                                                </Whisper>
                                              </withLocale(Whisper)>
                                            </ForwardRef>
                                          </EditorSubMenuButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <FormatIconButton
                                            format="bold"
                                            icon="bold"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="bold"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="bold"
                                                    icon="bold"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="bold"
                                                      icon="bold"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-bold"
                                                        element="bold"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="italic"
                                            icon="italic"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="italic"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="italic"
                                                    icon="italic"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="italic"
                                                      icon="italic"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-italic"
                                                        element="italic"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="underline"
                                            icon="underline"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="underline"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="underline"
                                                    icon="underline"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="underline"
                                                      icon="underline"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-underline"
                                                        element="underline"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="strikethrough"
                                            icon="strikethrough"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="strikethrough"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="strikethrough"
                                                    icon="strikethrough"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="strikethrough"
                                                      icon="strikethrough"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-strikethrough"
                                                        element="strikethrough"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="superscript"
                                            icon="superscript"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="superscript"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="superscript"
                                                    icon="superscript"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="superscript"
                                                      icon="superscript"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-superscript"
                                                        element="superscript"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="subscript"
                                            icon="subscript"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="subscript"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="subscript"
                                                    icon="subscript"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="subscript"
                                                      icon="subscript"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-subscript"
                                                        element="subscript"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <LinkFormatButton>
                                            <ToolbarIconButton
                                              active={false}
                                              icon="link"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="link"
                                                    icon="link"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="link"
                                                      icon="link"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-link"
                                                        element="link"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                            <defaultProps(Modal)
                                              animation={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Bounce",
                                                  "render": [Function],
                                                }
                                              }
                                              animationTimeout={300}
                                              autoFocus={true}
                                              backdrop={true}
                                              classPrefix="rs-modal"
                                              dialogComponentClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "defaultProps": Object {
                                                    "classPrefix": "rs-modal",
                                                  },
                                                  "displayName": "withStyleProps(defaultProps(ModalDialog))",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "size": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              enforceFocus={true}
                                              keyboard={true}
                                              onHide={[Function]}
                                              overflow={true}
                                              show={false}
                                              size="sm"
                                            >
                                              <Modal
                                                animation={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Bounce",
                                                    "render": [Function],
                                                  }
                                                }
                                                animationTimeout={300}
                                                autoFocus={true}
                                                backdrop={true}
                                                classPrefix="rs-modal"
                                                dialogComponentClass={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "defaultProps": Object {
                                                      "classPrefix": "rs-modal",
                                                    },
                                                    "displayName": "withStyleProps(defaultProps(ModalDialog))",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "size": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                enforceFocus={true}
                                                keyboard={true}
                                                onHide={[Function]}
                                                overflow={true}
                                                show={false}
                                                size="sm"
                                              >
                                                <BaseModal
                                                  autoFocus={true}
                                                  backdrop={true}
                                                  backdropClassName="rs-modal-backdrop"
                                                  backdropTransitionTimeout={150}
                                                  className="rs-modal-wrapper"
                                                  containerClassName="rs-modal-open rs-modal-has-backdrop"
                                                  dialogTransitionTimeout={300}
                                                  enforceFocus={true}
                                                  keyboard={true}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExited={[Function]}
                                                  onHide={[Function]}
                                                  overflow={true}
                                                  show={false}
                                                  transition={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Bounce",
                                                      "render": [Function],
                                                    }
                                                  }
                                                />
                                              </Modal>
                                            </defaultProps(Modal)>
                                          </LinkFormatButton>
                                          <RemoveLinkFormatButton>
                                            <ToolbarIconButton
                                              active={false}
                                              disabled={true}
                                              icon="unlink"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                disabled={true}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  disabled={true}
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="unlink"
                                                    icon="unlink"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="unlink"
                                                      icon="unlink"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-unlink"
                                                        element="unlink"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </RemoveLinkFormatButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <ForwardRef
                                            icon="smile-o"
                                          >
                                            <withLocale(Whisper)
                                              placement="top"
                                              speaker={
                                                <defaultProps(Popover)
                                                  classPrefix="rs-popover"
                                                >
                                                  <EmojiPicker
                                                    setEmoji={[Function]}
                                                  />
                                                </defaultProps(Popover)>
                                              }
                                              trigger="none"
                                            >
                                              <Whisper
                                                locale={
                                                  Object {
                                                    "formatDate": [Function],
                                                  }
                                                }
                                                placement="top"
                                                speaker={
                                                  <defaultProps(Popover)
                                                    classPrefix="rs-popover"
                                                  >
                                                    <EmojiPicker
                                                      setEmoji={[Function]}
                                                    />
                                                  </defaultProps(Popover)>
                                                }
                                                trigger="none"
                                              >
                                                <OverlayTrigger
                                                  delayHide={200}
                                                  locale={
                                                    Object {
                                                      "formatDate": [Function],
                                                    }
                                                  }
                                                  placement="top"
                                                  rootClose={true}
                                                  speaker={
                                                    <defaultProps(Popover)
                                                      classPrefix="rs-popover"
                                                    >
                                                      <EmojiPicker
                                                        setEmoji={[Function]}
                                                      />
                                                    </defaultProps(Popover)>
                                                  }
                                                  trigger="none"
                                                >
                                                  <ForwardRef
                                                    active={false}
                                                    key="triggerComponent"
                                                    onMouseDown={[Function]}
                                                  >
                                                    <button
                                                      className="icon-button"
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "border": "#00000000 1px solid",
                                                        }
                                                      }
                                                    >
                                                      <defaultProps(Icon)
                                                        classPrefix="rs-icon"
                                                        componentClass="i"
                                                        icon="smile-o"
                                                        style={
                                                          Object {
                                                            "minWidth": "15px",
                                                          }
                                                        }
                                                      >
                                                        <Icon
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="smile-o"
                                                          style={
                                                            Object {
                                                              "minWidth": "15px",
                                                            }
                                                          }
                                                        >
                                                          <i
                                                            className="rs-icon rs-icon-smile-o"
                                                            style={
                                                              Object {
                                                                "minWidth": "15px",
                                                              }
                                                            }
                                                          />
                                                        </Icon>
                                                      </defaultProps(Icon)>
                                                    </button>
                                                  </ForwardRef>
                                                  <Portal
                                                    key="portal"
                                                  >
                                                    <Portal
                                                      containerInfo={<body />}
                                                    >
                                                      <Overlay
                                                        placement="top"
                                                        rootClose={true}
                                                        target={[Function]}
                                                      >
                                                        <BaseOverlay
                                                          placement="top"
                                                          rootClose={true}
                                                          target={[Function]}
                                                          transition={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Fade",
                                                              "render": [Function],
                                                            }
                                                          }
                                                        />
                                                      </Overlay>
                                                    </Portal>
                                                  </Portal>
                                                </OverlayTrigger>
                                              </Whisper>
                                            </withLocale(Whisper)>
                                          </ForwardRef>
                                        </div>
                                      </div>
                                    </div>
                                  </Toolbar>
                                  <div
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "color": "#cad5e4",
                                      }
                                    }
                                  >
                                    blocks.richText.startWriting
                                  </div>
                                  <Editable
                                    onBlur={[Function]}
                                    renderElement={[Function]}
                                    renderLeaf={[Function]}
                                  >
                                    <div
                                      contentEditable={true}
                                      data-gramm={false}
                                      data-slate-editor={true}
                                      data-slate-node="value"
                                      onBeforeInput={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onCompositionEnd={[Function]}
                                      onCompositionStart={[Function]}
                                      onCopy={[Function]}
                                      onCut={[Function]}
                                      onDragOver={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onPaste={[Function]}
                                      role="textbox"
                                      style={
                                        Object {
                                          "outline": "none",
                                          "whiteSpace": "pre-wrap",
                                          "wordWrap": "break-word",
                                        }
                                      }
                                      suppressContentEditableWarning={true}
                                    >
                                      <Children
                                        decorate={[Function]}
                                        decorations={Array []}
                                        node={
                                          Object {
                                            "addMark": [Function],
                                            "apply": [Function],
                                            "children": Array [
                                              Object {
                                                "children": Array [
                                                  Object {
                                                    "text": "",
                                                  },
                                                ],
                                                "type": "paragraph",
                                              },
                                            ],
                                            "deleteBackward": [Function],
                                            "deleteForward": [Function],
                                            "deleteFragment": [Function],
                                            "getFragment": [Function],
                                            "history": Object {
                                              "redos": Array [],
                                              "undos": Array [],
                                            },
                                            "insertBreak": [Function],
                                            "insertData": [Function],
                                            "insertFragment": [Function],
                                            "insertNode": [Function],
                                            "insertText": [Function],
                                            "isInline": [Function],
                                            "isVoid": [Function],
                                            "marks": null,
                                            "normalizeNode": [Function],
                                            "onChange": [Function],
                                            "operations": Array [],
                                            "redo": [Function],
                                            "removeMark": [Function],
                                            "selection": null,
                                            "setFragmentData": [Function],
                                            "undo": [Function],
                                          }
                                        }
                                        renderElement={[Function]}
                                        renderLeaf={[Function]}
                                        selection={null}
                                      >
                                        <Element
                                          decorate={[Function]}
                                          decorations={Array []}
                                          element={
                                            Object {
                                              "children": Array [
                                                Object {
                                                  "text": "",
                                                },
                                              ],
                                              "type": "paragraph",
                                            }
                                          }
                                          key="6"
                                          renderElement={[Function]}
                                          renderLeaf={[Function]}
                                          selection={null}
                                        >
                                          <p
                                            data-slate-node="element"
                                          >
                                            <Children
                                              decorate={[Function]}
                                              decorations={Array []}
                                              node={
                                                Object {
                                                  "children": Array [
                                                    Object {
                                                      "text": "",
                                                    },
                                                  ],
                                                  "type": "paragraph",
                                                }
                                              }
                                              renderElement={[Function]}
                                              renderLeaf={[Function]}
                                              selection={null}
                                            >
                                              <Text
                                                decorations={Array []}
                                                isLast={true}
                                                key="7"
                                                parent={
                                                  Object {
                                                    "children": Array [
                                                      Object {
                                                        "text": "",
                                                      },
                                                    ],
                                                    "type": "paragraph",
                                                  }
                                                }
                                                renderLeaf={[Function]}
                                                text={
                                                  Object {
                                                    "text": "",
                                                  }
                                                }
                                              >
                                                <span
                                                  data-slate-node="text"
                                                >
                                                  <Leaf
                                                    isLast={true}
                                                    key="7-0"
                                                    leaf={
                                                      Object {
                                                        "text": "",
                                                      }
                                                    }
                                                    parent={
                                                      Object {
                                                        "children": Array [
                                                          Object {
                                                            "text": "",
                                                          },
                                                        ],
                                                        "type": "paragraph",
                                                      }
                                                    }
                                                    renderLeaf={[Function]}
                                                    text={
                                                      Object {
                                                        "text": "",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      data-slate-leaf={true}
                                                    >
                                                      <String
                                                        isLast={true}
                                                        leaf={
                                                          Object {
                                                            "text": "",
                                                          }
                                                        }
                                                        parent={
                                                          Object {
                                                            "children": Array [
                                                              Object {
                                                                "text": "",
                                                              },
                                                            ],
                                                            "type": "paragraph",
                                                          }
                                                        }
                                                        text={
                                                          Object {
                                                            "text": "",
                                                          }
                                                        }
                                                      >
                                                        <ZeroWidthString
                                                          isLineBreak={true}
                                                        >
                                                          <span
                                                            data-slate-length={0}
                                                            data-slate-zero-width="n"
                                                          >
                                                            ï»¿
                                                            <br />
                                                          </span>
                                                        </ZeroWidthString>
                                                      </String>
                                                    </span>
                                                  </Leaf>
                                                </span>
                                              </Text>
                                            </Children>
                                          </p>
                                        </Element>
                                      </Children>
                                    </div>
                                  </Editable>
                                </Slate>
                              </Memo(RichTextBlock)>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
              </div>
            </PanelGroup>
          </defaultProps(PanelGroup)>
        </div>
      </ModalBody>
    </defaultProps(ModalBody)>
  </Body>
  <defaultProps(defaultProps(ModalFooter))
    classPrefix="rs-drawer-footer"
  >
    <defaultProps(ModalFooter)
      classPrefix="rs-drawer-footer"
    >
      <ModalFooter
        classPrefix="rs-drawer-footer"
      >
        <div
          className="rs-drawer-footer"
        >
          <withStyleProps(defaultProps(Button))
            appearance="primary"
            classPrefix="rs-btn"
            componentClass="button"
            disabled={false}
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="primary"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              disabled={false}
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="primary"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                disabled={false}
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.create
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
          <withStyleProps(defaultProps(Button))
            appearance="subtle"
            classPrefix="rs-btn"
            componentClass="button"
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="subtle"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="subtle"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.close
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
        </div>
      </ModalFooter>
    </defaultProps(ModalFooter)>
  </defaultProps(defaultProps(ModalFooter))>
  <defaultProps(Drawer)
    classPrefix="rs-drawer"
    onHide={[Function]}
    placement="right"
    show={false}
    size="sm"
  >
    <Drawer
      classPrefix="rs-drawer"
      onHide={[Function]}
      placement="right"
      show={false}
      size="sm"
    >
      <defaultProps(Modal)
        animation={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Slide",
            "render": [Function],
          }
        }
        animationProps={
          Object {
            "placement": "right",
          }
        }
        animationTimeout={300}
        autoFocus={true}
        backdrop={true}
        className="rs-drawer-right"
        classPrefix="rs-drawer"
        dialogComponentClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "classPrefix": "rs-modal",
            },
            "displayName": "withStyleProps(defaultProps(ModalDialog))",
            "propTypes": Object {
              "innerRef": [Function],
              "size": [Function],
            },
            "render": [Function],
          }
        }
        drawer={true}
        enforceFocus={true}
        keyboard={true}
        onHide={[Function]}
        overflow={true}
        show={false}
        size="sm"
      >
        <Modal
          animation={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Slide",
              "render": [Function],
            }
          }
          animationProps={
            Object {
              "placement": "right",
            }
          }
          animationTimeout={300}
          autoFocus={true}
          backdrop={true}
          className="rs-drawer-right"
          classPrefix="rs-drawer"
          dialogComponentClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "classPrefix": "rs-modal",
              },
              "displayName": "withStyleProps(defaultProps(ModalDialog))",
              "propTypes": Object {
                "innerRef": [Function],
                "size": [Function],
              },
              "render": [Function],
            }
          }
          drawer={true}
          enforceFocus={true}
          keyboard={true}
          onHide={[Function]}
          overflow={true}
          show={false}
          size="sm"
        >
          <BaseModal
            animationProps={
              Object {
                "placement": "right",
              }
            }
            autoFocus={true}
            backdrop={true}
            backdropClassName="rs-drawer-backdrop"
            backdropTransitionTimeout={150}
            className="rs-drawer-wrapper"
            containerClassName="rs-drawer-open rs-drawer-has-backdrop"
            dialogTransitionTimeout={300}
            drawer={true}
            enforceFocus={true}
            keyboard={true}
            onEntered={[Function]}
            onEntering={[Function]}
            onExited={[Function]}
            onHide={[Function]}
            overflow={true}
            show={false}
            transition={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Slide",
                "render": [Function],
              }
            }
          />
        </Modal>
      </defaultProps(Modal)>
    </Drawer>
  </defaultProps(Drawer)>
  <defaultProps(Drawer)
    classPrefix="rs-drawer"
    placement="right"
    show={false}
    size="sm"
  >
    <Drawer
      classPrefix="rs-drawer"
      placement="right"
      show={false}
      size="sm"
    >
      <defaultProps(Modal)
        animation={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Slide",
            "render": [Function],
          }
        }
        animationProps={
          Object {
            "placement": "right",
          }
        }
        animationTimeout={300}
        autoFocus={true}
        backdrop={true}
        className="rs-drawer-right"
        classPrefix="rs-drawer"
        dialogComponentClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "classPrefix": "rs-modal",
            },
            "displayName": "withStyleProps(defaultProps(ModalDialog))",
            "propTypes": Object {
              "innerRef": [Function],
              "size": [Function],
            },
            "render": [Function],
          }
        }
        drawer={true}
        enforceFocus={true}
        keyboard={true}
        overflow={true}
        show={false}
        size="sm"
      >
        <Modal
          animation={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Slide",
              "render": [Function],
            }
          }
          animationProps={
            Object {
              "placement": "right",
            }
          }
          animationTimeout={300}
          autoFocus={true}
          backdrop={true}
          className="rs-drawer-right"
          classPrefix="rs-drawer"
          dialogComponentClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "classPrefix": "rs-modal",
              },
              "displayName": "withStyleProps(defaultProps(ModalDialog))",
              "propTypes": Object {
                "innerRef": [Function],
                "size": [Function],
              },
              "render": [Function],
            }
          }
          drawer={true}
          enforceFocus={true}
          keyboard={true}
          overflow={true}
          show={false}
          size="sm"
        >
          <BaseModal
            animationProps={
              Object {
                "placement": "right",
              }
            }
            autoFocus={true}
            backdrop={true}
            backdropClassName="rs-drawer-backdrop"
            backdropTransitionTimeout={150}
            className="rs-drawer-wrapper"
            containerClassName="rs-drawer-open rs-drawer-has-backdrop"
            dialogTransitionTimeout={300}
            drawer={true}
            enforceFocus={true}
            keyboard={true}
            onEntered={[Function]}
            onEntering={[Function]}
            onExited={[Function]}
            overflow={true}
            show={false}
            transition={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Slide",
                "render": [Function],
              }
            }
          />
        </Modal>
      </defaultProps(Modal)>
    </Drawer>
  </defaultProps(Drawer)>
</AuthorEditPanel>
`;

exports[`Author Edit Panel should render 1`] = `
<AuthorEditPanel>
  <defaultProps(defaultProps(ModalHeader))
    classPrefix="rs-drawer-header"
    closeButton={true}
  >
    <defaultProps(ModalHeader)
      classPrefix="rs-drawer-header"
      closeButton={true}
    >
      <ModalHeader
        classPrefix="rs-drawer-header"
        closeButton={true}
      >
        <div
          className="rs-drawer-header"
        >
          <button
            aria-label="Close"
            className="rs-drawer-header-close"
            type="button"
          >
            <span
              aria-hidden="true"
            >
              Ã—
            </span>
          </button>
          <defaultProps(defaultProps(ModalTitle))
            classPrefix="rs-drawer-title"
          >
            <defaultProps(ModalTitle)
              classPrefix="rs-drawer-title"
            >
              <ModalTitle
                classPrefix="rs-drawer-title"
              >
                <h4
                  className="rs-drawer-title"
                >
                  authors.panels.createAuthor
                </h4>
              </ModalTitle>
            </defaultProps(ModalTitle)>
          </defaultProps(defaultProps(ModalTitle))>
        </div>
      </ModalHeader>
    </defaultProps(ModalHeader)>
  </defaultProps(defaultProps(ModalHeader))>
  <Body
    classPrefix="rs-drawer-body"
  >
    <defaultProps(ModalBody)
      classPrefix="rs-drawer-body"
    >
      <ModalBody
        classPrefix="rs-drawer-body"
      >
        <div
          className="rs-drawer-body"
          style={Object {}}
        >
          <defaultProps(PanelGroup)
            accordion={true}
            classPrefix="rs-panel-group"
          >
            <PanelGroup
              accordion={true}
              classPrefix="rs-panel-group"
            >
              <div
                className="rs-panel-group rs-panel-group-accordion"
                role="tablist"
              >
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  defaultExpanded={true}
                  header="authors.panels.name"
                  headerRole="tab"
                  key="0/.0"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    defaultExpanded={true}
                    header="authors.panels.name"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-in rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            aria-expanded={true}
                            aria-selected={true}
                            className={null}
                            role="tab"
                          >
                            authors.panels.name
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        in={true}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          in={true}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={false}
                            className="rs-panel-collapse collapse in"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <Form
                                checkDelay={500}
                                checkTrigger="change"
                                classPrefix="rs-form"
                                errorFromContext={true}
                                fluid={true}
                                formDefaultValue={Object {}}
                                layout="vertical"
                                model={
                                  Schema {
                                    "schema": Object {},
                                  }
                                }
                              >
                                <form
                                  className="rs-form rs-form-vertical rs-form-fluid"
                                  onSubmit={[Function]}
                                >
                                  <withStyleProps(defaultProps(InputGroup))
                                    classPrefix="rs-input-group"
                                    inside={true}
                                  >
                                    <defaultProps(InputGroup)
                                      className=""
                                      classPrefix="rs-input-group"
                                      inside={true}
                                    >
                                      <InputGroup
                                        className=""
                                        classPrefix="rs-input-group"
                                        inside={true}
                                      >
                                        <div
                                          className="rs-input-group rs-input-group-inside"
                                        >
                                          <defaultProps(InputGroupAddon)
                                            classPrefix="rs-input-group-addon"
                                          >
                                            <InputGroupAddon
                                              classPrefix="rs-input-group-addon"
                                            >
                                              <span
                                                className="rs-input-group-addon"
                                              >
                                                <defaultProps(Icon)
                                                  classPrefix="rs-icon"
                                                  componentClass="i"
                                                  icon="avatar"
                                                >
                                                  <Icon
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="avatar"
                                                  >
                                                    <i
                                                      className="rs-icon rs-icon-avatar"
                                                    />
                                                  </Icon>
                                                </defaultProps(Icon)>
                                              </span>
                                            </InputGroupAddon>
                                          </defaultProps(InputGroupAddon)>
                                          <defaultProps(FormControlWrapper)
                                            classPrefix="rs-form-control"
                                            disabled={false}
                                            name="authors.panels.name"
                                            onChange={[Function]}
                                            value=""
                                          >
                                            <FormControlWrapper
                                              classPrefix="rs-form-control"
                                              disabled={false}
                                              name="authors.panels.name"
                                              onChange={[Function]}
                                              value=""
                                            >
                                              <FormControl
                                                accepter={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "contextType": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": Object {
                                                        "$$typeof": Symbol(react.context),
                                                        "_calculateChangedBits": null,
                                                        "_context": [Circular],
                                                      },
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": null,
                                                      "_currentValue2": null,
                                                      "_threadCount": 0,
                                                    },
                                                    "defaultProps": Object {
                                                      "classPrefix": "rs-input",
                                                      "componentClass": "input",
                                                      "type": "text",
                                                    },
                                                    "displayName": "withStyleProps(defaultProps(Input))",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "size": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                classPrefix="rs-form-control"
                                                disabled={false}
                                                errorPlacement="bottomStart"
                                                formValue={Object {}}
                                                name="authors.panels.name"
                                                onChange={[Function]}
                                                plaintextDefaultValue="--"
                                                value=""
                                              >
                                                <div
                                                  className="rs-form-control-wrapper"
                                                >
                                                  <withStyleProps(defaultProps(Input))
                                                    classPrefix="rs-input"
                                                    componentClass="input"
                                                    disabled={false}
                                                    name="authors.panels.name"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <defaultProps(Input)
                                                      className=""
                                                      classPrefix="rs-input"
                                                      componentClass="input"
                                                      disabled={false}
                                                      name="authors.panels.name"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      type="text"
                                                      value=""
                                                    >
                                                      <Input
                                                        className=""
                                                        classPrefix="rs-input"
                                                        componentClass="input"
                                                        disabled={false}
                                                        name="authors.panels.name"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                      >
                                                        <input
                                                          className="rs-input"
                                                          disabled={false}
                                                          id={null}
                                                          name="authors.panels.name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="text"
                                                          value=""
                                                        />
                                                      </Input>
                                                    </defaultProps(Input)>
                                                  </withStyleProps(defaultProps(Input))>
                                                  <defaultProps(ErrorMessage)
                                                    className="rs-form-control-message-wrapper"
                                                    classPrefix="rs-error-message"
                                                    placement="bottomStart"
                                                    show={false}
                                                  >
                                                    <ErrorMessage
                                                      className="rs-form-control-message-wrapper"
                                                      classPrefix="rs-error-message"
                                                      placement="bottomStart"
                                                      show={false}
                                                    />
                                                  </defaultProps(ErrorMessage)>
                                                </div>
                                              </FormControl>
                                            </FormControlWrapper>
                                          </defaultProps(FormControlWrapper)>
                                        </div>
                                      </InputGroup>
                                    </defaultProps(InputGroup)>
                                  </withStyleProps(defaultProps(InputGroup))>
                                </form>
                              </Form>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.image"
                  headerRole="tab"
                  key="1/.1"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.image"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.image
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <ChooseEditImage
                                disabled={false}
                                header=""
                                left={0}
                                openChooseModalOpen={[Function]}
                                openEditModalOpen={[Function]}
                                removeImage={[Function]}
                                top={0}
                              >
                                <defaultProps(Panel)
                                  bodyFill={true}
                                  classPrefix="rs-panel"
                                  header=""
                                  style={
                                    Object {
                                      "height": 240,
                                      "marginBottom": 10,
                                    }
                                  }
                                >
                                  <Panel
                                    bodyFill={true}
                                    classPrefix="rs-panel"
                                    header=""
                                    style={
                                      Object {
                                        "height": 240,
                                        "marginBottom": 10,
                                      }
                                    }
                                  >
                                    <div
                                      className="rs-panel rs-panel-default"
                                      style={
                                        Object {
                                          "height": 240,
                                          "marginBottom": 10,
                                        }
                                      }
                                    >
                                      <div
                                        className="rs-panel-body rs-panel-body-fill"
                                      >
                                        <PlaceholderInput
                                          onAddClick={[Function]}
                                        >
                                          <div
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "backgroundColor": "#f7f9fa",
                                                "display": "flex",
                                                "flexDirection": "column",
                                                "height": "100%",
                                                "justifyContent": "center",
                                                "width": "100%",
                                              }
                                            }
                                          >
                                            <defaultProps(IconButton)
                                              classPrefix="rs-btn-icon"
                                              icon={
                                                <defaultProps(Icon)
                                                  classPrefix="rs-icon"
                                                  componentClass="i"
                                                  icon="plus-circle"
                                                  size="5x"
                                                />
                                              }
                                              onClick={[Function]}
                                              placement="left"
                                              size="lg"
                                            >
                                              <IconButton
                                                classPrefix="rs-btn-icon"
                                                icon={
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="plus-circle"
                                                    size="5x"
                                                  />
                                                }
                                                onClick={[Function]}
                                                placement="left"
                                                size="lg"
                                              >
                                                <withStyleProps(defaultProps(Button))
                                                  appearance="default"
                                                  className="rs-btn-icon rs-btn-icon-placement-left"
                                                  classPrefix="rs-btn"
                                                  componentClass="button"
                                                  onClick={[Function]}
                                                  ripple={true}
                                                  size="lg"
                                                >
                                                  <defaultProps(Button)
                                                    appearance="default"
                                                    className="rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                    classPrefix="rs-btn"
                                                    componentClass="button"
                                                    onClick={[Function]}
                                                    ripple={true}
                                                  >
                                                    <Button
                                                      appearance="default"
                                                      className="rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                      classPrefix="rs-btn"
                                                      componentClass="button"
                                                      onClick={[Function]}
                                                      ripple={true}
                                                    >
                                                      <button
                                                        className="rs-btn rs-btn-default rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <defaultProps(Icon)
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="plus-circle"
                                                          size="5x"
                                                        >
                                                          <Icon
                                                            classPrefix="rs-icon"
                                                            componentClass="i"
                                                            icon="plus-circle"
                                                            size="5x"
                                                          >
                                                            <i
                                                              className="rs-icon rs-icon-plus-circle rs-icon-size-5x"
                                                            />
                                                          </Icon>
                                                        </defaultProps(Icon)>
                                                        <defaultProps(Ripple)
                                                          classPrefix="rs-ripple"
                                                        >
                                                          <Ripple
                                                            classPrefix="rs-ripple"
                                                          >
                                                            <span
                                                              className="rs-ripple-pond"
                                                            >
                                                              <Transition
                                                                enteringClassName="rs-ripple-rippling"
                                                                in={false}
                                                                onEntered={[Function]}
                                                                timeout={1000}
                                                              >
                                                                <span
                                                                  className="rs-ripple"
                                                                  style={Object {}}
                                                                />
                                                              </Transition>
                                                            </span>
                                                          </Ripple>
                                                        </defaultProps(Ripple)>
                                                      </button>
                                                    </Button>
                                                  </defaultProps(Button)>
                                                </withStyleProps(defaultProps(Button))>
                                              </IconButton>
                                            </defaultProps(IconButton)>
                                          </div>
                                        </PlaceholderInput>
                                      </div>
                                    </div>
                                  </Panel>
                                </defaultProps(Panel)>
                              </ChooseEditImage>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.links"
                  headerRole="tab"
                  key="2/.2"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.links"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.links
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <ListInput
                                defaultValue={
                                  Object {
                                    "title": "",
                                    "url": "",
                                  }
                                }
                                onChange={[Function]}
                                value={Array []}
                              >
                                <div>
                                  <Component
                                    defaultValue={
                                      Object {
                                        "title": "",
                                        "url": "",
                                      }
                                    }
                                    onChange={[Function]}
                                    onSortEnd={[Function]}
                                    useDragHandle={true}
                                    value={Array []}
                                  >
                                    <div>
                                      <defaultProps(IconButton)
                                        classPrefix="rs-btn-icon"
                                        icon={
                                          <defaultProps(Icon)
                                            classPrefix="rs-icon"
                                            componentClass="i"
                                            icon="plus-circle"
                                          />
                                        }
                                        onClick={[Function]}
                                        placement="left"
                                      >
                                        <IconButton
                                          classPrefix="rs-btn-icon"
                                          icon={
                                            <defaultProps(Icon)
                                              classPrefix="rs-icon"
                                              componentClass="i"
                                              icon="plus-circle"
                                            />
                                          }
                                          onClick={[Function]}
                                          placement="left"
                                        >
                                          <withStyleProps(defaultProps(Button))
                                            appearance="default"
                                            className="rs-btn-icon rs-btn-icon-placement-left"
                                            classPrefix="rs-btn"
                                            componentClass="button"
                                            onClick={[Function]}
                                            ripple={true}
                                          >
                                            <defaultProps(Button)
                                              appearance="default"
                                              className="rs-btn-icon rs-btn-icon-placement-left"
                                              classPrefix="rs-btn"
                                              componentClass="button"
                                              onClick={[Function]}
                                              ripple={true}
                                            >
                                              <Button
                                                appearance="default"
                                                className="rs-btn-icon rs-btn-icon-placement-left"
                                                classPrefix="rs-btn"
                                                componentClass="button"
                                                onClick={[Function]}
                                                ripple={true}
                                              >
                                                <button
                                                  className="rs-btn rs-btn-default rs-btn-icon rs-btn-icon-placement-left"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="plus-circle"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      icon="plus-circle"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-plus-circle"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                  <defaultProps(Ripple)
                                                    classPrefix="rs-ripple"
                                                  >
                                                    <Ripple
                                                      classPrefix="rs-ripple"
                                                    >
                                                      <span
                                                        className="rs-ripple-pond"
                                                      >
                                                        <Transition
                                                          enteringClassName="rs-ripple-rippling"
                                                          in={false}
                                                          onEntered={[Function]}
                                                          timeout={1000}
                                                        >
                                                          <span
                                                            className="rs-ripple"
                                                            style={Object {}}
                                                          />
                                                        </Transition>
                                                      </span>
                                                    </Ripple>
                                                  </defaultProps(Ripple)>
                                                </button>
                                              </Button>
                                            </defaultProps(Button)>
                                          </withStyleProps(defaultProps(Button))>
                                        </IconButton>
                                      </defaultProps(IconButton)>
                                    </div>
                                  </Component>
                                </div>
                              </ListInput>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.bioInformation"
                  headerRole="tab"
                  key="3/.3"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.bioInformation"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.bioInformation
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <Memo(RichTextBlock)
                                onChange={[Function]}
                                value={
                                  Array [
                                    Object {
                                      "children": Array [
                                        Object {
                                          "text": "",
                                        },
                                      ],
                                      "type": "paragraph",
                                    },
                                  ]
                                }
                              >
                                <Slate
                                  editor={
                                    Object {
                                      "addMark": [Function],
                                      "apply": [Function],
                                      "children": Array [
                                        Object {
                                          "children": Array [
                                            Object {
                                              "text": "",
                                            },
                                          ],
                                          "type": "paragraph",
                                        },
                                      ],
                                      "deleteBackward": [Function],
                                      "deleteForward": [Function],
                                      "deleteFragment": [Function],
                                      "getFragment": [Function],
                                      "history": Object {
                                        "redos": Array [],
                                        "undos": Array [],
                                      },
                                      "insertBreak": [Function],
                                      "insertData": [Function],
                                      "insertFragment": [Function],
                                      "insertNode": [Function],
                                      "insertText": [Function],
                                      "isInline": [Function],
                                      "isVoid": [Function],
                                      "marks": null,
                                      "normalizeNode": [Function],
                                      "onChange": [Function],
                                      "operations": Array [],
                                      "redo": [Function],
                                      "removeMark": [Function],
                                      "selection": null,
                                      "setFragmentData": [Function],
                                      "undo": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value={
                                    Array [
                                      Object {
                                        "children": Array [
                                          Object {
                                            "text": "",
                                          },
                                        ],
                                        "type": "paragraph",
                                      },
                                    ]
                                  }
                                >
                                  <Toolbar
                                    fadeOut={true}
                                    onMouseDown={[Function]}
                                  >
                                    <div
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "display": "flex",
                                          "justifyContent": "center",
                                          "marginBottom": 30,
                                          "pointerEvents": "none",
                                          "position": "sticky",
                                          "zIndex": 1,
                                        }
                                      }
                                    >
                                      <div
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                            "borderRadius": 6,
                                            "padding": 5,
                                            "pointerEvents": "auto",
                                            "transitionDuration": "100ms",
                                            "transitionProperty": "opacity",
                                          }
                                        }
                                      >
                                        <div
                                          style={
                                            Object {
                                              "display": "flex",
                                              "opacity": 0.5,
                                              "transitionDuration": "100ms",
                                              "transitionProperty": "opacity",
                                            }
                                          }
                                        >
                                          <FormatButton
                                            format="heading-one"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H1Icon>
                                                  <svg
                                                    className="bi bi-type-h1"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M8.637 13V3.669H7.379V7.62H2.758V3.67H1.5V13h1.258V8.728h4.62V13h1.259zm5.329 0V3.669h-1.244L10.5 5.316v1.265l2.16-1.565h.062V13h1.244z"
                                                    />
                                                  </svg>
                                                </H1Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <FormatButton
                                            format="heading-two"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H2Icon>
                                                  <svg
                                                    className="bi bi-type-h2"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M7.638 13V3.669H6.38V7.62H1.759V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.022-6.733v-.048c0-.889.63-1.668 1.716-1.668.957 0 1.675.608 1.675 1.572 0 .855-.554 1.504-1.067 2.085l-3.513 3.999V13H15.5v-1.094h-4.245v-.075l2.481-2.844c.875-.998 1.586-1.784 1.586-2.953 0-1.463-1.155-2.556-2.919-2.556-1.941 0-2.966 1.326-2.966 2.74v.049h1.223z"
                                                    />
                                                  </svg>
                                                </H2Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <FormatButton
                                            format="heading-three"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H3Icon>
                                                  <svg
                                                    className="bi bi-type-h3"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M7.637 13V3.669H6.379V7.62H1.758V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.625-4.272h1.018c1.142 0 1.935.67 1.949 1.674.013 1.005-.78 1.737-2.01 1.73-1.08-.007-1.853-.588-1.935-1.32H9.108c.069 1.327 1.224 2.386 3.083 2.386 1.935 0 3.343-1.155 3.309-2.789-.027-1.51-1.251-2.16-2.037-2.249v-.068c.704-.123 1.764-.91 1.723-2.229-.035-1.353-1.176-2.4-2.954-2.385-1.873.006-2.857 1.162-2.898 2.358h1.196c.062-.69.711-1.299 1.696-1.299.998 0 1.695.622 1.695 1.525.007.922-.718 1.592-1.695 1.592h-.964v1.074z"
                                                    />
                                                  </svg>
                                                </H3Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <FormatIconButton
                                            format="unordered-list"
                                            icon="list-ul"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="list-ul"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="list-ul"
                                                    icon="list-ul"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="list-ul"
                                                      icon="list-ul"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-list-ul"
                                                        element="list-ul"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="ordered-list"
                                            icon="list-ol"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="list-ol"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="list-ol"
                                                    icon="list-ol"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="list-ol"
                                                      icon="list-ol"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-list-ol"
                                                        element="list-ol"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <EditorSubMenuButton
                                            editorHasFocus={false}
                                            icon="table"
                                          >
                                            <ForwardRef
                                              icon="table"
                                            >
                                              <withLocale(Whisper)
                                                placement="top"
                                                speaker={
                                                  <defaultProps(Popover)
                                                    classPrefix="rs-popover"
                                                  >
                                                    <TableMenu />
                                                  </defaultProps(Popover)>
                                                }
                                                trigger="none"
                                              >
                                                <Whisper
                                                  locale={
                                                    Object {
                                                      "formatDate": [Function],
                                                    }
                                                  }
                                                  placement="top"
                                                  speaker={
                                                    <defaultProps(Popover)
                                                      classPrefix="rs-popover"
                                                    >
                                                      <TableMenu />
                                                    </defaultProps(Popover)>
                                                  }
                                                  trigger="none"
                                                >
                                                  <OverlayTrigger
                                                    delayHide={200}
                                                    locale={
                                                      Object {
                                                        "formatDate": [Function],
                                                      }
                                                    }
                                                    placement="top"
                                                    rootClose={true}
                                                    speaker={
                                                      <defaultProps(Popover)
                                                        classPrefix="rs-popover"
                                                      >
                                                        <TableMenu />
                                                      </defaultProps(Popover)>
                                                    }
                                                    trigger="none"
                                                  >
                                                    <ForwardRef
                                                      active={false}
                                                      key="triggerComponent"
                                                      onMouseDown={[Function]}
                                                    >
                                                      <button
                                                        className="icon-button"
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "border": "#00000000 1px solid",
                                                          }
                                                        }
                                                      >
                                                        <defaultProps(Icon)
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="table"
                                                          style={
                                                            Object {
                                                              "minWidth": "15px",
                                                            }
                                                          }
                                                        >
                                                          <Icon
                                                            classPrefix="rs-icon"
                                                            componentClass="i"
                                                            icon="table"
                                                            style={
                                                              Object {
                                                                "minWidth": "15px",
                                                              }
                                                            }
                                                          >
                                                            <i
                                                              className="rs-icon rs-icon-table"
                                                              style={
                                                                Object {
                                                                  "minWidth": "15px",
                                                                }
                                                              }
                                                            />
                                                          </Icon>
                                                        </defaultProps(Icon)>
                                                      </button>
                                                    </ForwardRef>
                                                    <Portal
                                                      key="portal"
                                                    >
                                                      <Portal
                                                        containerInfo={<body />}
                                                      >
                                                        <Overlay
                                                          placement="top"
                                                          rootClose={true}
                                                          show={false}
                                                          target={[Function]}
                                                        >
                                                          <BaseOverlay
                                                            placement="top"
                                                            rootClose={true}
                                                            show={false}
                                                            target={[Function]}
                                                            transition={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Fade",
                                                                "render": [Function],
                                                              }
                                                            }
                                                          />
                                                        </Overlay>
                                                      </Portal>
                                                    </Portal>
                                                  </OverlayTrigger>
                                                </Whisper>
                                              </withLocale(Whisper)>
                                            </ForwardRef>
                                          </EditorSubMenuButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <FormatIconButton
                                            format="bold"
                                            icon="bold"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="bold"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="bold"
                                                    icon="bold"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="bold"
                                                      icon="bold"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-bold"
                                                        element="bold"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="italic"
                                            icon="italic"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="italic"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="italic"
                                                    icon="italic"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="italic"
                                                      icon="italic"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-italic"
                                                        element="italic"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="underline"
                                            icon="underline"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="underline"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="underline"
                                                    icon="underline"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="underline"
                                                      icon="underline"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-underline"
                                                        element="underline"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="strikethrough"
                                            icon="strikethrough"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="strikethrough"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="strikethrough"
                                                    icon="strikethrough"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="strikethrough"
                                                      icon="strikethrough"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-strikethrough"
                                                        element="strikethrough"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="superscript"
                                            icon="superscript"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="superscript"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="superscript"
                                                    icon="superscript"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="superscript"
                                                      icon="superscript"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-superscript"
                                                        element="superscript"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="subscript"
                                            icon="subscript"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="subscript"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="subscript"
                                                    icon="subscript"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="subscript"
                                                      icon="subscript"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-subscript"
                                                        element="subscript"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <LinkFormatButton>
                                            <ToolbarIconButton
                                              active={false}
                                              icon="link"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="link"
                                                    icon="link"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="link"
                                                      icon="link"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-link"
                                                        element="link"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                            <defaultProps(Modal)
                                              animation={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Bounce",
                                                  "render": [Function],
                                                }
                                              }
                                              animationTimeout={300}
                                              autoFocus={true}
                                              backdrop={true}
                                              classPrefix="rs-modal"
                                              dialogComponentClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "defaultProps": Object {
                                                    "classPrefix": "rs-modal",
                                                  },
                                                  "displayName": "withStyleProps(defaultProps(ModalDialog))",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "size": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              enforceFocus={true}
                                              keyboard={true}
                                              onHide={[Function]}
                                              overflow={true}
                                              show={false}
                                              size="sm"
                                            >
                                              <Modal
                                                animation={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Bounce",
                                                    "render": [Function],
                                                  }
                                                }
                                                animationTimeout={300}
                                                autoFocus={true}
                                                backdrop={true}
                                                classPrefix="rs-modal"
                                                dialogComponentClass={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "defaultProps": Object {
                                                      "classPrefix": "rs-modal",
                                                    },
                                                    "displayName": "withStyleProps(defaultProps(ModalDialog))",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "size": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                enforceFocus={true}
                                                keyboard={true}
                                                onHide={[Function]}
                                                overflow={true}
                                                show={false}
                                                size="sm"
                                              >
                                                <BaseModal
                                                  autoFocus={true}
                                                  backdrop={true}
                                                  backdropClassName="rs-modal-backdrop"
                                                  backdropTransitionTimeout={150}
                                                  className="rs-modal-wrapper"
                                                  containerClassName="rs-modal-open rs-modal-has-backdrop"
                                                  dialogTransitionTimeout={300}
                                                  enforceFocus={true}
                                                  keyboard={true}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExited={[Function]}
                                                  onHide={[Function]}
                                                  overflow={true}
                                                  show={false}
                                                  transition={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Bounce",
                                                      "render": [Function],
                                                    }
                                                  }
                                                />
                                              </Modal>
                                            </defaultProps(Modal)>
                                          </LinkFormatButton>
                                          <RemoveLinkFormatButton>
                                            <ToolbarIconButton
                                              active={false}
                                              disabled={true}
                                              icon="unlink"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                disabled={true}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  disabled={true}
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="unlink"
                                                    icon="unlink"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="unlink"
                                                      icon="unlink"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-unlink"
                                                        element="unlink"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </RemoveLinkFormatButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <ForwardRef
                                            icon="smile-o"
                                          >
                                            <withLocale(Whisper)
                                              placement="top"
                                              speaker={
                                                <defaultProps(Popover)
                                                  classPrefix="rs-popover"
                                                >
                                                  <EmojiPicker
                                                    setEmoji={[Function]}
                                                  />
                                                </defaultProps(Popover)>
                                              }
                                              trigger="none"
                                            >
                                              <Whisper
                                                locale={
                                                  Object {
                                                    "formatDate": [Function],
                                                  }
                                                }
                                              />
                                            </Overlay>
                                          </Portal>
                                        </Portal>
                                      </OverlayTrigger>
                                    </Whisper>
                                  </withLocale(Whisper)>
                                </ForwardRef>
                              </EditorSubMenuButton>
                            </div>
                          </div>
                        </div>
                      </Toolbar>
                      <Editable
                        onBlur={[Function]}
                        renderElement={[Function]}
                        renderLeaf={[Function]}
                      >
                        <div
                          contentEditable={true}
                          data-gramm={false}
                          data-slate-editor={true}
                          data-slate-node="value"
                          onBeforeInput={[Function]}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onCopy={[Function]}
                          onCut={[Function]}
                          onDragOver={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onPaste={[Function]}
                          role="textbox"
                          style={
                            Object {
                              "outline": "none",
                              "whiteSpace": "pre-wrap",
                              "wordWrap": "break-word",
                            }
                          }
                          suppressContentEditableWarning={true}
                        >
                          <Children
                            decorate={[Function]}
                            decorations={Array []}
                            node={
                              Object {
                                "addMark": [Function],
                                "apply": [Function],
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "text": "",
                                      },
                                    ],
                                    "type": "paragraph",
                                  },
                                ],
                                "deleteBackward": [Function],
                                "deleteForward": [Function],
                                "deleteFragment": [Function],
                                "getFragment": [Function],
                                "history": Object {
                                  "redos": Array [],
                                  "undos": Array [],
                                },
                                "insertBreak": [Function],
                                "insertData": [Function],
                                "insertFragment": [Function],
                                "insertNode": [Function],
                                "insertText": [Function],
                                "isInline": [Function],
                                "isVoid": [Function],
                                "marks": null,
                                "normalizeNode": [Function],
                                "onChange": [Function],
                                "operations": Array [],
                                "redo": [Function],
                                "removeMark": [Function],
                                "selection": null,
                                "setFragmentData": [Function],
                                "undo": [Function],
                              }
                            }
                            renderElement={[Function]}
                            renderLeaf={[Function]}
                            selection={null}
                          >
                            <Element
                              decorate={[Function]}
                              decorations={Array []}
                              element={
                                Object {
                                  "children": Array [
                                    Object {
                                      "text": "",
                                    },
                                  ],
                                  "type": "paragraph",
                                }
                              }
                              key="0"
                              renderElement={[Function]}
                              renderLeaf={[Function]}
                              selection={null}
                            >
                              <p
                                data-slate-node="element"
                              >
                                <Children
                                  decorate={[Function]}
                                  decorations={Array []}
                                  node={
                                    Object {
                                      "children": Array [
                                        Object {
                                          "text": "",
                                        },
                                      ],
                                      "type": "paragraph",
                                    }
                                  }
                                  renderElement={[Function]}
                                  renderLeaf={[Function]}
                                  selection={null}
                                >
                                  <Text
                                    decorations={Array []}
                                    isLast={true}
                                    key="1"
                                    parent={
                                      Object {
                                        "children": Array [
                                          Object {
                                            "text": "",
                                          },
                                        ],
                                        "type": "paragraph",
                                      }
                                    }
                                    renderLeaf={[Function]}
                                  >
                                    <div
                                      contentEditable={true}
                                      data-gramm={false}
                                      data-slate-editor={true}
                                      data-slate-node="value"
                                      onBeforeInput={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onCompositionEnd={[Function]}
                                      onCompositionStart={[Function]}
                                      onCopy={[Function]}
                                      onCut={[Function]}
                                      onDragOver={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onPaste={[Function]}
                                      role="textbox"
                                      style={
                                        Object {
                                          "outline": "none",
                                          "whiteSpace": "pre-wrap",
                                          "wordWrap": "break-word",
                                        }
                                      }
                                      suppressContentEditableWarning={true}
                                    >
                                      <Children
                                        decorate={[Function]}
                                        decorations={Array []}
                                        node={
                                          Object {
                                            "addMark": [Function],
                                            "apply": [Function],
                                            "children": Array [
                                              Object {
                                                "children": Array [
                                                  Object {
                                                    "text": "",
                                                  },
                                                ],
                                                "type": "paragraph",
                                              },
                                            ],
                                            "deleteBackward": [Function],
                                            "deleteForward": [Function],
                                            "deleteFragment": [Function],
                                            "getFragment": [Function],
                                            "history": Object {
                                              "redos": Array [],
                                              "undos": Array [],
                                            },
                                            "insertBreak": [Function],
                                            "insertData": [Function],
                                            "insertFragment": [Function],
                                            "insertNode": [Function],
                                            "insertText": [Function],
                                            "isInline": [Function],
                                            "isVoid": [Function],
                                            "marks": null,
                                            "normalizeNode": [Function],
                                            "onChange": [Function],
                                            "operations": Array [],
                                            "redo": [Function],
                                            "removeMark": [Function],
                                            "selection": null,
                                            "setFragmentData": [Function],
                                            "undo": [Function],
                                          }
                                        }
                                        renderElement={[Function]}
                                        renderLeaf={[Function]}
                                        selection={null}
                                      >
                                        <Element
                                          decorate={[Function]}
                                          decorations={Array []}
                                          element={
                                            Object {
                                              "children": Array [
                                                Object {
                                                  "text": "",
                                                },
                                              ],
                                              "type": "paragraph",
                                            }
                                          }
                                          key="0"
                                          renderElement={[Function]}
                                          renderLeaf={[Function]}
                                          selection={null}
                                        >
                                          <p
                                            data-slate-node="element"
                                          >
                                            <Children
                                              decorate={[Function]}
                                              decorations={Array []}
                                              node={
                                                Object {
                                                  "children": Array [
                                                    Object {
                                                      "text": "",
                                                    },
                                                  ],
                                                  "type": "paragraph",
                                                }
                                              }
                                              renderElement={[Function]}
                                              renderLeaf={[Function]}
                                              selection={null}
                                            >
                                              <Text
                                                decorations={Array []}
                                                isLast={true}
                                                key="1"
                                                parent={
                                                  Object {
                                                    "children": Array [
                                                      Object {
                                                        "text": "",
                                                      },
                                                    ],
                                                    "type": "paragraph",
                                                  }
                                                }
                                                renderLeaf={[Function]}
                                                text={
                                                  Object {
                                                    "text": "",
                                                  }
                                                }
                                              >
                                                <span
                                                  data-slate-node="text"
                                                >
                                                  <Leaf
                                                    isLast={true}
                                                    key="1-0"
                                                    leaf={
                                                      Object {
                                                        "text": "",
                                                      }
                                                    }
                                                    parent={
                                                      Object {
                                                        "children": Array [
                                                          Object {
                                                            "text": "",
                                                          },
                                                        ],
                                                        "type": "paragraph",
                                                      }
                                                    }
                                                    renderLeaf={[Function]}
                                                    text={
                                                      Object {
                                                        "text": "",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      data-slate-leaf={true}
                                                    >
                                                      <String
                                                        isLast={true}
                                                        leaf={
                                                          Object {
                                                            "text": "",
                                                          }
                                                        }
                                                        parent={
                                                          Object {
                                                            "children": Array [
                                                              Object {
                                                                "text": "",
                                                              },
                                                            ],
                                                            "type": "paragraph",
                                                          }
                                                        }
                                                        text={
                                                          Object {
                                                            "text": "",
                                                          }
                                                        }
                                                      >
                                                        <ZeroWidthString
                                                          isLineBreak={true}
                                                        >
                                                          <span
                                                            data-slate-length={0}
                                                            data-slate-zero-width="n"
                                                          >
                                                            ï»¿
                                                            <br />
                                                          </span>
                                                        </ZeroWidthString>
                                                      </String>
                                                    </span>
                                                  </Leaf>
                                                </span>
                                              </Text>
                                            </Children>
                                          </p>
                                        </Element>
                                      </Children>
                                    </div>
                                  </Editable>
                                </Slate>
                              </Memo(RichTextBlock)>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
              </div>
            </PanelGroup>
          </defaultProps(PanelGroup)>
        </div>
      </ModalBody>
    </defaultProps(ModalBody)>
  </Body>
  <defaultProps(defaultProps(ModalFooter))
    classPrefix="rs-drawer-footer"
  >
    <defaultProps(ModalFooter)
      classPrefix="rs-drawer-footer"
    >
      <ModalFooter
        classPrefix="rs-drawer-footer"
      >
        <div
          className="rs-drawer-footer"
        >
          <withStyleProps(defaultProps(Button))
            appearance="primary"
            classPrefix="rs-btn"
            componentClass="button"
            disabled={false}
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="primary"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              disabled={false}
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="primary"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                disabled={false}
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.create
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
          <withStyleProps(defaultProps(Button))
            appearance="subtle"
            classPrefix="rs-btn"
            componentClass="button"
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="subtle"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="subtle"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.close
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
        </div>
      </ModalFooter>
    </defaultProps(ModalFooter)>
  </defaultProps(defaultProps(ModalFooter))>
  <defaultProps(Drawer)
    classPrefix="rs-drawer"
    onHide={[Function]}
    placement="right"
    show={false}
    size="sm"
  >
    <Drawer
      classPrefix="rs-drawer"
      onHide={[Function]}
      placement="right"
      show={false}
      size="sm"
    >
      <defaultProps(Modal)
        animation={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Slide",
            "render": [Function],
          }
        }
        animationProps={
          Object {
            "placement": "right",
          }
        }
        animationTimeout={300}
        autoFocus={true}
        backdrop={true}
        className="rs-drawer-right"
        classPrefix="rs-drawer"
        dialogComponentClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "classPrefix": "rs-modal",
            },
            "displayName": "withStyleProps(defaultProps(ModalDialog))",
            "propTypes": Object {
              "innerRef": [Function],
              "size": [Function],
            },
            "render": [Function],
          }
        }
        drawer={true}
        enforceFocus={true}
        keyboard={true}
        onHide={[Function]}
        overflow={true}
        show={false}
        size="sm"
      >
        <Modal
          animation={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Slide",
              "render": [Function],
            }
          }
          animationProps={
            Object {
              "placement": "right",
            }
          }
          animationTimeout={300}
          autoFocus={true}
          backdrop={true}
          className="rs-drawer-right"
          classPrefix="rs-drawer"
          dialogComponentClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "classPrefix": "rs-modal",
              },
              "displayName": "withStyleProps(defaultProps(ModalDialog))",
              "propTypes": Object {
                "innerRef": [Function],
                "size": [Function],
              },
              "render": [Function],
            }
          }
          drawer={true}
          enforceFocus={true}
          keyboard={true}
          onHide={[Function]}
          overflow={true}
          show={false}
          size="sm"
        >
          <BaseModal
            animationProps={
              Object {
                "placement": "right",
              }
            }
            autoFocus={true}
            backdrop={true}
            backdropClassName="rs-drawer-backdrop"
            backdropTransitionTimeout={150}
            className="rs-drawer-wrapper"
            containerClassName="rs-drawer-open rs-drawer-has-backdrop"
            dialogTransitionTimeout={300}
            drawer={true}
            enforceFocus={true}
            keyboard={true}
            onEntered={[Function]}
            onEntering={[Function]}
            onExited={[Function]}
            onHide={[Function]}
            overflow={true}
            show={false}
            transition={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Slide",
                "render": [Function],
              }
            }
          />
        </Modal>
      </defaultProps(Modal)>
    </Drawer>
  </defaultProps(Drawer)>
  <defaultProps(Drawer)
    classPrefix="rs-drawer"
    placement="right"
    show={false}
    size="sm"
  >
    <Drawer
      classPrefix="rs-drawer"
      placement="right"
      show={false}
      size="sm"
    >
      <defaultProps(Modal)
        animation={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Slide",
            "render": [Function],
          }
        }
        animationProps={
          Object {
            "placement": "right",
          }
        }
        animationTimeout={300}
        autoFocus={true}
        backdrop={true}
        className="rs-drawer-right"
        classPrefix="rs-drawer"
        dialogComponentClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "classPrefix": "rs-modal",
            },
            "displayName": "withStyleProps(defaultProps(ModalDialog))",
            "propTypes": Object {
              "innerRef": [Function],
              "size": [Function],
            },
            "render": [Function],
          }
        }
        drawer={true}
        enforceFocus={true}
        keyboard={true}
        overflow={true}
        show={false}
        size="sm"
      >
        <Modal
          animation={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Slide",
              "render": [Function],
            }
          }
          animationProps={
            Object {
              "placement": "right",
            }
          }
          animationTimeout={300}
          autoFocus={true}
          backdrop={true}
          className="rs-drawer-right"
          classPrefix="rs-drawer"
          dialogComponentClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "classPrefix": "rs-modal",
              },
              "displayName": "withStyleProps(defaultProps(ModalDialog))",
              "propTypes": Object {
                "innerRef": [Function],
                "size": [Function],
              },
              "render": [Function],
            }
          }
          drawer={true}
          enforceFocus={true}
          keyboard={true}
          overflow={true}
          show={false}
          size="sm"
        >
          <BaseModal
            animationProps={
              Object {
                "placement": "right",
              }
            }
            autoFocus={true}
            backdrop={true}
            backdropClassName="rs-drawer-backdrop"
            backdropTransitionTimeout={150}
            className="rs-drawer-wrapper"
            containerClassName="rs-drawer-open rs-drawer-has-backdrop"
            dialogTransitionTimeout={300}
            drawer={true}
            enforceFocus={true}
            keyboard={true}
            onEntered={[Function]}
            onEntering={[Function]}
            onExited={[Function]}
            overflow={true}
            show={false}
            transition={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Slide",
                "render": [Function],
              }
            }
          />
        </Modal>
      </defaultProps(Modal)>
    </Drawer>
  </defaultProps(Drawer)>
</AuthorEditPanel>
`;

exports[`Author Edit Panel should render with ID 1`] = `
<AuthorEditPanel
  id="fakeId2"
>
  <defaultProps(defaultProps(ModalHeader))
    classPrefix="rs-drawer-header"
    closeButton={true}
  >
    <defaultProps(ModalHeader)
      classPrefix="rs-drawer-header"
      closeButton={true}
    >
      <ModalHeader
        classPrefix="rs-drawer-header"
        closeButton={true}
      >
        <div
          className="rs-drawer-header"
        >
          <button
            aria-label="Close"
            className="rs-drawer-header-close"
            type="button"
          >
            <span
              aria-hidden="true"
            >
              Ã—
            </span>
          </button>
          <defaultProps(defaultProps(ModalTitle))
            classPrefix="rs-drawer-title"
          >
            <defaultProps(ModalTitle)
              classPrefix="rs-drawer-title"
            >
              <ModalTitle
                classPrefix="rs-drawer-title"
              >
                <h4
                  className="rs-drawer-title"
                >
                  authors.panels.editAuthor
                </h4>
              </ModalTitle>
            </defaultProps(ModalTitle)>
          </defaultProps(defaultProps(ModalTitle))>
        </div>
      </ModalHeader>
    </defaultProps(ModalHeader)>
  </defaultProps(defaultProps(ModalHeader))>
  <Body
    classPrefix="rs-drawer-body"
  >
    <defaultProps(ModalBody)
      classPrefix="rs-drawer-body"
    >
      <ModalBody
        classPrefix="rs-drawer-body"
      >
        <div
          className="rs-drawer-body"
          style={Object {}}
        >
          <defaultProps(PanelGroup)
            accordion={true}
            classPrefix="rs-panel-group"
          >
            <PanelGroup
              accordion={true}
              classPrefix="rs-panel-group"
            >
              <div
                className="rs-panel-group rs-panel-group-accordion"
                role="tablist"
              >
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  defaultExpanded={true}
                  header="authors.panels.name"
                  headerRole="tab"
                  key="0/.0"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    defaultExpanded={true}
                    header="authors.panels.name"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-in rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            aria-expanded={true}
                            aria-selected={true}
                            className={null}
                            role="tab"
                          >
                            authors.panels.name
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        in={true}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          in={true}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={false}
                            className="rs-panel-collapse collapse in"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <Form
                                checkDelay={500}
                                checkTrigger="change"
                                classPrefix="rs-form"
                                errorFromContext={true}
                                fluid={true}
                                formDefaultValue={Object {}}
                                layout="vertical"
                                model={
                                  Schema {
                                    "schema": Object {},
                                  }
                                }
                              >
                                <form
                                  className="rs-form rs-form-vertical rs-form-fluid"
                                  onSubmit={[Function]}
                                >
                                  <withStyleProps(defaultProps(InputGroup))
                                    classPrefix="rs-input-group"
                                    inside={true}
                                  >
                                    <defaultProps(InputGroup)
                                      className=""
                                      classPrefix="rs-input-group"
                                      inside={true}
                                    >
                                      <InputGroup
                                        className=""
                                        classPrefix="rs-input-group"
                                        inside={true}
                                      >
                                        <div
                                          className="rs-input-group rs-input-group-inside"
                                        >
                                          <defaultProps(InputGroupAddon)
                                            classPrefix="rs-input-group-addon"
                                          >
                                            <InputGroupAddon
                                              classPrefix="rs-input-group-addon"
                                            >
                                              <span
                                                className="rs-input-group-addon"
                                              >
                                                <defaultProps(Icon)
                                                  classPrefix="rs-icon"
                                                  componentClass="i"
                                                  icon="avatar"
                                                >
                                                  <Icon
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="avatar"
                                                  >
                                                    <i
                                                      className="rs-icon rs-icon-avatar"
                                                    />
                                                  </Icon>
                                                </defaultProps(Icon)>
                                              </span>
                                            </InputGroupAddon>
                                          </defaultProps(InputGroupAddon)>
                                          <defaultProps(FormControlWrapper)
                                            classPrefix="rs-form-control"
                                            disabled={false}
                                            name="authors.panels.name"
                                            onChange={[Function]}
                                            value="Douglas Cole"
                                          >
                                            <FormControlWrapper
                                              classPrefix="rs-form-control"
                                              disabled={false}
                                              name="authors.panels.name"
                                              onChange={[Function]}
                                              value="Douglas Cole"
                                            >
                                              <FormControl
                                                accepter={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "contextType": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": Object {
                                                        "$$typeof": Symbol(react.context),
                                                        "_calculateChangedBits": null,
                                                        "_context": [Circular],
                                                      },
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": null,
                                                      "_currentValue2": null,
                                                      "_threadCount": 0,
                                                    },
                                                    "defaultProps": Object {
                                                      "classPrefix": "rs-input",
                                                      "componentClass": "input",
                                                      "type": "text",
                                                    },
                                                    "displayName": "withStyleProps(defaultProps(Input))",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "size": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                classPrefix="rs-form-control"
                                                disabled={false}
                                                errorPlacement="bottomStart"
                                                formValue={Object {}}
                                                name="authors.panels.name"
                                                onChange={[Function]}
                                                plaintextDefaultValue="--"
                                                value="Douglas Cole"
                                              >
                                                <div
                                                  className="rs-form-control-wrapper"
                                                >
                                                  <withStyleProps(defaultProps(Input))
                                                    classPrefix="rs-input"
                                                    componentClass="input"
                                                    disabled={false}
                                                    name="authors.panels.name"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    type="text"
                                                    value="Douglas Cole"
                                                  >
                                                    <defaultProps(Input)
                                                      className=""
                                                      classPrefix="rs-input"
                                                      componentClass="input"
                                                      disabled={false}
                                                      name="authors.panels.name"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="Douglas Cole"
                                                    >
                                                      <Input
                                                        className=""
                                                        classPrefix="rs-input"
                                                        componentClass="input"
                                                        disabled={false}
                                                        name="authors.panels.name"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        type="text"
                                                        value="Douglas Cole"
                                                      >
                                                        <input
                                                          className="rs-input"
                                                          disabled={false}
                                                          id={null}
                                                          name="authors.panels.name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="text"
                                                          value="Douglas Cole"
                                                        />
                                                      </Input>
                                                    </defaultProps(Input)>
                                                  </withStyleProps(defaultProps(Input))>
                                                  <defaultProps(ErrorMessage)
                                                    className="rs-form-control-message-wrapper"
                                                    classPrefix="rs-error-message"
                                                    placement="bottomStart"
                                                    show={false}
                                                  >
                                                    <ErrorMessage
                                                      className="rs-form-control-message-wrapper"
                                                      classPrefix="rs-error-message"
                                                      placement="bottomStart"
                                                      show={false}
                                                    />
                                                  </defaultProps(ErrorMessage)>
                                                </div>
                                              </FormControl>
                                            </FormControlWrapper>
                                          </defaultProps(FormControlWrapper)>
                                        </div>
                                      </InputGroup>
                                    </defaultProps(InputGroup)>
                                  </withStyleProps(defaultProps(InputGroup))>
                                </form>
                              </Form>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.image"
                  headerRole="tab"
                  key="1/.1"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.image"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.image
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <ChooseEditImage
                                disabled={false}
                                header=""
                                left={0}
                                openChooseModalOpen={[Function]}
                                openEditModalOpen={[Function]}
                                removeImage={[Function]}
                                top={0}
                              >
                                <defaultProps(Panel)
                                  bodyFill={true}
                                  classPrefix="rs-panel"
                                  header=""
                                  style={
                                    Object {
                                      "height": 240,
                                      "marginBottom": 10,
                                    }
                                  }
                                >
                                  <Panel
                                    bodyFill={true}
                                    classPrefix="rs-panel"
                                    header=""
                                    style={
                                      Object {
                                        "height": 240,
                                        "marginBottom": 10,
                                      }
                                    }
                                  >
                                    <div
                                      className="rs-panel rs-panel-default"
                                      style={
                                        Object {
                                          "height": 240,
                                          "marginBottom": 10,
                                        }
                                      }
                                    >
                                      <div
                                        className="rs-panel-body rs-panel-body-fill"
                                      >
                                        <PlaceholderInput
                                          onAddClick={[Function]}
                                        >
                                          <div
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "backgroundColor": "#f7f9fa",
                                                "display": "flex",
                                                "flexDirection": "column",
                                                "height": "100%",
                                                "justifyContent": "center",
                                                "width": "100%",
                                              }
                                            }
                                          >
                                            <defaultProps(IconButton)
                                              classPrefix="rs-btn-icon"
                                              icon={
                                                <defaultProps(Icon)
                                                  classPrefix="rs-icon"
                                                  componentClass="i"
                                                  icon="plus-circle"
                                                  size="5x"
                                                />
                                              }
                                              onClick={[Function]}
                                              placement="left"
                                              size="lg"
                                            >
                                              <IconButton
                                                classPrefix="rs-btn-icon"
                                                icon={
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="plus-circle"
                                                    size="5x"
                                                  />
                                                }
                                                onClick={[Function]}
                                                placement="left"
                                                size="lg"
                                              >
                                                <withStyleProps(defaultProps(Button))
                                                  appearance="default"
                                                  className="rs-btn-icon rs-btn-icon-placement-left"
                                                  classPrefix="rs-btn"
                                                  componentClass="button"
                                                  onClick={[Function]}
                                                  ripple={true}
                                                  size="lg"
                                                >
                                                  <defaultProps(Button)
                                                    appearance="default"
                                                    className="rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                    classPrefix="rs-btn"
                                                    componentClass="button"
                                                    onClick={[Function]}
                                                    ripple={true}
                                                  >
                                                    <Button
                                                      appearance="default"
                                                      className="rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                      classPrefix="rs-btn"
                                                      componentClass="button"
                                                      onClick={[Function]}
                                                      ripple={true}
                                                    >
                                                      <button
                                                        className="rs-btn rs-btn-default rs-btn-icon rs-btn-icon-placement-left rs-btn-lg"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <defaultProps(Icon)
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="plus-circle"
                                                          size="5x"
                                                        >
                                                          <Icon
                                                            classPrefix="rs-icon"
                                                            componentClass="i"
                                                            icon="plus-circle"
                                                            size="5x"
                                                          >
                                                            <i
                                                              className="rs-icon rs-icon-plus-circle rs-icon-size-5x"
                                                            />
                                                          </Icon>
                                                        </defaultProps(Icon)>
                                                        <defaultProps(Ripple)
                                                          classPrefix="rs-ripple"
                                                        >
                                                          <Ripple
                                                            classPrefix="rs-ripple"
                                                          >
                                                            <span
                                                              className="rs-ripple-pond"
                                                            >
                                                              <Transition
                                                                enteringClassName="rs-ripple-rippling"
                                                                in={false}
                                                                onEntered={[Function]}
                                                                timeout={1000}
                                                              >
                                                                <span
                                                                  className="rs-ripple"
                                                                  style={Object {}}
                                                                />
                                                              </Transition>
                                                            </span>
                                                          </Ripple>
                                                        </defaultProps(Ripple)>
                                                      </button>
                                                    </Button>
                                                  </defaultProps(Button)>
                                                </withStyleProps(defaultProps(Button))>
                                              </IconButton>
                                            </defaultProps(IconButton)>
                                          </div>
                                        </PlaceholderInput>
                                      </div>
                                    </div>
                                  </Panel>
                                </defaultProps(Panel)>
                              </ChooseEditImage>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.links"
                  headerRole="tab"
                  key="2/.2"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.links"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.links
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <ListInput
                                defaultValue={
                                  Object {
                                    "title": "",
                                    "url": "",
                                  }
                                }
                                onChange={[Function]}
                                value={Array []}
                              >
                                <div>
                                  <Component
                                    defaultValue={
                                      Object {
                                        "title": "",
                                        "url": "",
                                      }
                                    }
                                    onChange={[Function]}
                                    onSortEnd={[Function]}
                                    useDragHandle={true}
                                    value={Array []}
                                  >
                                    <div>
                                      <defaultProps(IconButton)
                                        classPrefix="rs-btn-icon"
                                        icon={
                                          <defaultProps(Icon)
                                            classPrefix="rs-icon"
                                            componentClass="i"
                                            icon="plus-circle"
                                          />
                                        }
                                        onClick={[Function]}
                                        placement="left"
                                      >
                                        <IconButton
                                          classPrefix="rs-btn-icon"
                                          icon={
                                            <defaultProps(Icon)
                                              classPrefix="rs-icon"
                                              componentClass="i"
                                              icon="plus-circle"
                                            />
                                          }
                                          onClick={[Function]}
                                          placement="left"
                                        >
                                          <withStyleProps(defaultProps(Button))
                                            appearance="default"
                                            className="rs-btn-icon rs-btn-icon-placement-left"
                                            classPrefix="rs-btn"
                                            componentClass="button"
                                            onClick={[Function]}
                                            ripple={true}
                                          >
                                            <defaultProps(Button)
                                              appearance="default"
                                              className="rs-btn-icon rs-btn-icon-placement-left"
                                              classPrefix="rs-btn"
                                              componentClass="button"
                                              onClick={[Function]}
                                              ripple={true}
                                            >
                                              <Button
                                                appearance="default"
                                                className="rs-btn-icon rs-btn-icon-placement-left"
                                                classPrefix="rs-btn"
                                                componentClass="button"
                                                onClick={[Function]}
                                                ripple={true}
                                              >
                                                <button
                                                  className="rs-btn rs-btn-default rs-btn-icon rs-btn-icon-placement-left"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    icon="plus-circle"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      icon="plus-circle"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-plus-circle"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                  <defaultProps(Ripple)
                                                    classPrefix="rs-ripple"
                                                  >
                                                    <Ripple
                                                      classPrefix="rs-ripple"
                                                    >
                                                      <span
                                                        className="rs-ripple-pond"
                                                      >
                                                        <Transition
                                                          enteringClassName="rs-ripple-rippling"
                                                          in={false}
                                                          onEntered={[Function]}
                                                          timeout={1000}
                                                        >
                                                          <span
                                                            className="rs-ripple"
                                                            style={Object {}}
                                                          />
                                                        </Transition>
                                                      </span>
                                                    </Ripple>
                                                  </defaultProps(Ripple)>
                                                </button>
                                              </Button>
                                            </defaultProps(Button)>
                                          </withStyleProps(defaultProps(Button))>
                                        </IconButton>
                                      </defaultProps(IconButton)>
                                    </div>
                                  </Component>
                                </div>
                              </ListInput>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
                <defaultProps(Panel)
                  classPrefix="rs-panel"
                  collapsible={true}
                  header="authors.panels.bioInformation"
                  headerRole="tab"
                  key="3/.3"
                  onSelect={[Function]}
                  panelRole="tabpanel"
                >
                  <Panel
                    classPrefix="rs-panel"
                    collapsible={true}
                    header="authors.panels.bioInformation"
                    headerRole="tab"
                    onSelect={[Function]}
                    panelRole="tabpanel"
                  >
                    <div
                      className="rs-panel rs-panel-default rs-panel-collapsible"
                      id={null}
                    >
                      <div
                        className="rs-panel-heading"
                        onClick={[Function]}
                        role="rowheader"
                        tabIndex={-1}
                      >
                        <span
                          className="rs-panel-title"
                          role="presentation"
                        >
                          <span
                            aria-controls="undefined"
                            className="collapsed"
                            role="tab"
                          >
                            authors.panels.bioInformation
                          </span>
                        </span>
                      </div>
                      <Collapse
                        dimension="height"
                        enteredClassName="collapse in"
                        enteringClassName="collapsing"
                        exitedClassName="collapse"
                        exitingClassName="collapsing"
                        getDimensionValue={[Function]}
                        timeout={300}
                      >
                        <Transition
                          aria-expanded={null}
                          className=""
                          enteredClassName="collapse in"
                          enteringClassName="collapsing"
                          exitedClassName="collapse"
                          exitingClassName="collapsing"
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                        >
                          <div
                            aria-expanded={null}
                            aria-hidden={true}
                            className="rs-panel-collapse collapse"
                            id={null}
                            role="tabpanel"
                          >
                            <div
                              className="rs-panel-body"
                            >
                              <Memo(RichTextBlock)
                                onChange={[Function]}
                                value={
                                  Array [
                                    Object {
                                      "children": Array [
                                        Object {
                                          "text": "",
                                        },
                                      ],
                                      "type": "paragraph",
                                    },
                                  ]
                                }
                              >
                                <Slate
                                  editor={
                                    Object {
                                      "addMark": [Function],
                                      "apply": [Function],
                                      "children": Array [
                                        Object {
                                          "children": Array [
                                            Object {
                                              "text": "",
                                            },
                                          ],
                                          "type": "paragraph",
                                        },
                                      ],
                                      "deleteBackward": [Function],
                                      "deleteForward": [Function],
                                      "deleteFragment": [Function],
                                      "getFragment": [Function],
                                      "history": Object {
                                        "redos": Array [],
                                        "undos": Array [],
                                      },
                                      "insertBreak": [Function],
                                      "insertData": [Function],
                                      "insertFragment": [Function],
                                      "insertNode": [Function],
                                      "insertText": [Function],
                                      "isInline": [Function],
                                      "isVoid": [Function],
                                      "marks": null,
                                      "normalizeNode": [Function],
                                      "onChange": [Function],
                                      "operations": Array [],
                                      "redo": [Function],
                                      "removeMark": [Function],
                                      "selection": null,
                                      "setFragmentData": [Function],
                                      "undo": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value={
                                    Array [
                                      Object {
                                        "children": Array [
                                          Object {
                                            "text": "",
                                          },
                                        ],
                                        "type": "paragraph",
                                      },
                                    ]
                                  }
                                >
                                  <Toolbar
                                    fadeOut={true}
                                    onMouseDown={[Function]}
                                  >
                                    <div
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "display": "flex",
                                          "justifyContent": "center",
                                          "marginBottom": 30,
                                          "pointerEvents": "none",
                                          "position": "sticky",
                                          "zIndex": 1,
                                        }
                                      }
                                    >
                                      <div
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                            "borderRadius": 6,
                                            "padding": 5,
                                            "pointerEvents": "auto",
                                            "transitionDuration": "100ms",
                                            "transitionProperty": "opacity",
                                          }
                                        }
                                      >
                                        <div
                                          style={
                                            Object {
                                              "display": "flex",
                                              "opacity": 0.5,
                                              "transitionDuration": "100ms",
                                              "transitionProperty": "opacity",
                                            }
                                          }
                                        >
                                          <FormatButton
                                            format="heading-one"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H1Icon>
                                                  <svg
                                                    className="bi bi-type-h1"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M8.637 13V3.669H7.379V7.62H2.758V3.67H1.5V13h1.258V8.728h4.62V13h1.259zm5.329 0V3.669h-1.244L10.5 5.316v1.265l2.16-1.565h.062V13h1.244z"
                                                    />
                                                  </svg>
                                                </H1Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <FormatButton
                                            format="heading-two"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H2Icon>
                                                  <svg
                                                    className="bi bi-type-h2"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M7.638 13V3.669H6.38V7.62H1.759V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.022-6.733v-.048c0-.889.63-1.668 1.716-1.668.957 0 1.675.608 1.675 1.572 0 .855-.554 1.504-1.067 2.085l-3.513 3.999V13H15.5v-1.094h-4.245v-.075l2.481-2.844c.875-.998 1.586-1.784 1.586-2.953 0-1.463-1.155-2.556-2.919-2.556-1.941 0-2.966 1.326-2.966 2.74v.049h1.223z"
                                                    />
                                                  </svg>
                                                </H2Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <FormatButton
                                            format="heading-three"
                                          >
                                            <ForwardRef
                                              active={false}
                                              onMouseDown={[Function]}
                                            >
                                              <button
                                                className="icon-button"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "border": "#00000000 1px solid",
                                                  }
                                                }
                                              >
                                                <H3Icon>
                                                  <svg
                                                    className="bi bi-type-h3"
                                                    fill="currentColor"
                                                    height="1em"
                                                    viewBox="0 0 16 16"
                                                    width="1em"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M7.637 13V3.669H6.379V7.62H1.758V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.625-4.272h1.018c1.142 0 1.935.67 1.949 1.674.013 1.005-.78 1.737-2.01 1.73-1.08-.007-1.853-.588-1.935-1.32H9.108c.069 1.327 1.224 2.386 3.083 2.386 1.935 0 3.343-1.155 3.309-2.789-.027-1.51-1.251-2.16-2.037-2.249v-.068c.704-.123 1.764-.91 1.723-2.229-.035-1.353-1.176-2.4-2.954-2.385-1.873.006-2.857 1.162-2.898 2.358h1.196c.062-.69.711-1.299 1.696-1.299.998 0 1.695.622 1.695 1.525.007.922-.718 1.592-1.695 1.592h-.964v1.074z"
                                                    />
                                                  </svg>
                                                </H3Icon>
                                              </button>
                                            </ForwardRef>
                                          </FormatButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <FormatIconButton
                                            format="unordered-list"
                                            icon="list-ul"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="list-ul"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="list-ul"
                                                    icon="list-ul"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="list-ul"
                                                      icon="list-ul"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-list-ul"
                                                        element="list-ul"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="ordered-list"
                                            icon="list-ol"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="list-ol"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="list-ol"
                                                    icon="list-ol"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="list-ol"
                                                      icon="list-ol"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-list-ol"
                                                        element="list-ol"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <EditorSubMenuButton
                                            editorHasFocus={false}
                                            icon="table"
                                          >
                                            <ForwardRef
                                              icon="table"
                                            >
                                              <withLocale(Whisper)
                                                placement="top"
                                                speaker={
                                                  <defaultProps(Popover)
                                                    classPrefix="rs-popover"
                                                  >
                                                    <TableMenu />
                                                  </defaultProps(Popover)>
                                                }
                                                trigger="none"
                                              >
                                                <Whisper
                                                  locale={
                                                    Object {
                                                      "formatDate": [Function],
                                                    }
                                                  }
                                                  placement="top"
                                                  speaker={
                                                    <defaultProps(Popover)
                                                      classPrefix="rs-popover"
                                                    >
                                                      <TableMenu />
                                                    </defaultProps(Popover)>
                                                  }
                                                  trigger="none"
                                                >
                                                  <OverlayTrigger
                                                    delayHide={200}
                                                    locale={
                                                      Object {
                                                        "formatDate": [Function],
                                                      }
                                                    }
                                                    placement="top"
                                                    rootClose={true}
                                                    speaker={
                                                      <defaultProps(Popover)
                                                        classPrefix="rs-popover"
                                                      >
                                                        <TableMenu />
                                                      </defaultProps(Popover)>
                                                    }
                                                    trigger="none"
                                                  >
                                                    <ForwardRef
                                                      active={false}
                                                      key="triggerComponent"
                                                      onMouseDown={[Function]}
                                                    >
                                                      <button
                                                        className="icon-button"
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "border": "#00000000 1px solid",
                                                          }
                                                        }
                                                      >
                                                        <defaultProps(Icon)
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="table"
                                                          style={
                                                            Object {
                                                              "minWidth": "15px",
                                                            }
                                                          }
                                                        >
                                                          <Icon
                                                            classPrefix="rs-icon"
                                                            componentClass="i"
                                                            icon="table"
                                                            style={
                                                              Object {
                                                                "minWidth": "15px",
                                                              }
                                                            }
                                                          >
                                                            <i
                                                              className="rs-icon rs-icon-table"
                                                              style={
                                                                Object {
                                                                  "minWidth": "15px",
                                                                }
                                                              }
                                                            />
                                                          </Icon>
                                                        </defaultProps(Icon)>
                                                      </button>
                                                    </ForwardRef>
                                                    <Portal
                                                      key="portal"
                                                    >
                                                      <Portal
                                                        containerInfo={<body />}
                                                      >
                                                        <Overlay
                                                          placement="top"
                                                          rootClose={true}
                                                          show={false}
                                                          target={[Function]}
                                                        >
                                                          <BaseOverlay
                                                            placement="top"
                                                            rootClose={true}
                                                            show={false}
                                                            target={[Function]}
                                                            transition={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Fade",
                                                                "render": [Function],
                                                              }
                                                            }
                                                          />
                                                        </Overlay>
                                                      </Portal>
                                                    </Portal>
                                                  </OverlayTrigger>
                                                </Whisper>
                                              </withLocale(Whisper)>
                                            </ForwardRef>
                                          </EditorSubMenuButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <FormatIconButton
                                            format="bold"
                                            icon="bold"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="bold"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="bold"
                                                    icon="bold"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="bold"
                                                      icon="bold"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-bold"
                                                        element="bold"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="italic"
                                            icon="italic"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="italic"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="italic"
                                                    icon="italic"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="italic"
                                                      icon="italic"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-italic"
                                                        element="italic"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="underline"
                                            icon="underline"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="underline"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="underline"
                                                    icon="underline"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="underline"
                                                      icon="underline"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-underline"
                                                        element="underline"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="strikethrough"
                                            icon="strikethrough"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="strikethrough"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="strikethrough"
                                                    icon="strikethrough"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="strikethrough"
                                                      icon="strikethrough"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-strikethrough"
                                                        element="strikethrough"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="superscript"
                                            icon="superscript"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="superscript"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="superscript"
                                                    icon="superscript"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="superscript"
                                                      icon="superscript"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-superscript"
                                                        element="superscript"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <FormatIconButton
                                            format="subscript"
                                            icon="subscript"
                                          >
                                            <ToolbarIconButton
                                              active={false}
                                              icon="subscript"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="subscript"
                                                    icon="subscript"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="subscript"
                                                      icon="subscript"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-subscript"
                                                        element="subscript"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </FormatIconButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <LinkFormatButton>
                                            <ToolbarIconButton
                                              active={false}
                                              icon="link"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="link"
                                                    icon="link"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="link"
                                                      icon="link"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-link"
                                                        element="link"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                            <defaultProps(Modal)
                                              animation={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Bounce",
                                                  "render": [Function],
                                                }
                                              }
                                              animationTimeout={300}
                                              autoFocus={true}
                                              backdrop={true}
                                              classPrefix="rs-modal"
                                              dialogComponentClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "defaultProps": Object {
                                                    "classPrefix": "rs-modal",
                                                  },
                                                  "displayName": "withStyleProps(defaultProps(ModalDialog))",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "size": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              enforceFocus={true}
                                              keyboard={true}
                                              onHide={[Function]}
                                              overflow={true}
                                              show={false}
                                              size="sm"
                                            >
                                              <Modal
                                                animation={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Bounce",
                                                    "render": [Function],
                                                  }
                                                }
                                                animationTimeout={300}
                                                autoFocus={true}
                                                backdrop={true}
                                                classPrefix="rs-modal"
                                                dialogComponentClass={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "defaultProps": Object {
                                                      "classPrefix": "rs-modal",
                                                    },
                                                    "displayName": "withStyleProps(defaultProps(ModalDialog))",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "size": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                enforceFocus={true}
                                                keyboard={true}
                                                onHide={[Function]}
                                                overflow={true}
                                                show={false}
                                                size="sm"
                                              >
                                                <BaseModal
                                                  autoFocus={true}
                                                  backdrop={true}
                                                  backdropClassName="rs-modal-backdrop"
                                                  backdropTransitionTimeout={150}
                                                  className="rs-modal-wrapper"
                                                  containerClassName="rs-modal-open rs-modal-has-backdrop"
                                                  dialogTransitionTimeout={300}
                                                  enforceFocus={true}
                                                  keyboard={true}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExited={[Function]}
                                                  onHide={[Function]}
                                                  overflow={true}
                                                  show={false}
                                                  transition={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Bounce",
                                                      "render": [Function],
                                                    }
                                                  }
                                                />
                                              </Modal>
                                            </defaultProps(Modal)>
                                          </LinkFormatButton>
                                          <RemoveLinkFormatButton>
                                            <ToolbarIconButton
                                              active={false}
                                              disabled={true}
                                              icon="unlink"
                                              onMouseDown={[Function]}
                                            >
                                              <ForwardRef
                                                active={false}
                                                disabled={true}
                                                onMouseDown={[Function]}
                                              >
                                                <button
                                                  className="icon-button"
                                                  disabled={true}
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "border": "#00000000 1px solid",
                                                    }
                                                  }
                                                >
                                                  <defaultProps(Icon)
                                                    classPrefix="rs-icon"
                                                    componentClass="i"
                                                    element="unlink"
                                                    icon="unlink"
                                                  >
                                                    <Icon
                                                      classPrefix="rs-icon"
                                                      componentClass="i"
                                                      element="unlink"
                                                      icon="unlink"
                                                    >
                                                      <i
                                                        className="rs-icon rs-icon-unlink"
                                                        element="unlink"
                                                      />
                                                    </Icon>
                                                  </defaultProps(Icon)>
                                                </button>
                                              </ForwardRef>
                                            </ToolbarIconButton>
                                          </RemoveLinkFormatButton>
                                          <ToolbarDivider>
                                            <defaultProps(Divider)
                                              classPrefix="rs-divider"
                                              componentClass="div"
                                              style={
                                                Object {
                                                  "height": "1.5em",
                                                }
                                              }
                                              vertical={true}
                                            >
                                              <Divider
                                                classPrefix="rs-divider"
                                                componentClass="div"
                                                style={
                                                  Object {
                                                    "height": "1.5em",
                                                  }
                                                }
                                                vertical={true}
                                              >
                                                <div
                                                  className="rs-divider rs-divider-vertical"
                                                  style={
                                                    Object {
                                                      "height": "1.5em",
                                                    }
                                                  }
                                                />
                                              </Divider>
                                            </defaultProps(Divider)>
                                          </ToolbarDivider>
                                          <ForwardRef
                                            icon="smile-o"
                                          >
                                            <withLocale(Whisper)
                                              placement="top"
                                              speaker={
                                                <defaultProps(Popover)
                                                  classPrefix="rs-popover"
                                                >
                                                  <EmojiPicker
                                                    setEmoji={[Function]}
                                                  />
                                                </defaultProps(Popover)>
                                              }
                                              trigger="none"
                                            >
                                              <Whisper
                                                locale={
                                                  Object {
                                                    "formatDate": [Function],
                                                  }
                                                }
                                                placement="top"
                                                speaker={
                                                  <defaultProps(Popover)
                                                    classPrefix="rs-popover"
                                                  >
                                                    <EmojiPicker
                                                      setEmoji={[Function]}
                                                    />
                                                  </defaultProps(Popover)>
                                                }
                                                trigger="none"
                                              >
                                                <OverlayTrigger
                                                  delayHide={200}
                                                  locale={
                                                    Object {
                                                      "formatDate": [Function],
                                                    }
                                                  }
                                                  placement="top"
                                                  rootClose={true}
                                                  speaker={
                                                    <defaultProps(Popover)
                                                      classPrefix="rs-popover"
                                                    >
                                                      <EmojiPicker
                                                        setEmoji={[Function]}
                                                      />
                                                    </defaultProps(Popover)>
                                                  }
                                                  trigger="none"
                                                >
                                                  <ForwardRef
                                                    active={false}
                                                    key="triggerComponent"
                                                    onMouseDown={[Function]}
                                                  >
                                                    <button
                                                      className="icon-button"
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "border": "#00000000 1px solid",
                                                        }
                                                      }
                                                    >
                                                      <defaultProps(Icon)
                                                        classPrefix="rs-icon"
                                                        componentClass="i"
                                                        icon="smile-o"
                                                        style={
                                                          Object {
                                                            "minWidth": "15px",
                                                          }
                                                        }
                                                      >
                                                        <Icon
                                                          classPrefix="rs-icon"
                                                          componentClass="i"
                                                          icon="smile-o"
                                                          style={
                                                            Object {
                                                              "minWidth": "15px",
                                                            }
                                                          }
                                                        >
                                                          <i
                                                            className="rs-icon rs-icon-smile-o"
                                                            style={
                                                              Object {
                                                                "minWidth": "15px",
                                                              }
                                                            }
                                                          />
                                                        </Icon>
                                                      </defaultProps(Icon)>
                                                    </button>
                                                  </ForwardRef>
                                                  <Portal
                                                    key="portal"
                                                  >
                                                    <Portal
                                                      containerInfo={<body />}
                                                    >
                                                      <Overlay
                                                        placement="top"
                                                        rootClose={true}
                                                        target={[Function]}
                                                      >
                                                        <BaseOverlay
                                                          placement="top"
                                                          rootClose={true}
                                                          target={[Function]}
                                                          transition={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Fade",
                                                              "render": [Function],
                                                            }
                                                          }
                                                        />
                                                      </Overlay>
                                                    </Portal>
                                                  </Portal>
                                                </OverlayTrigger>
                                              </Whisper>
                                            </withLocale(Whisper)>
                                          </ForwardRef>
                                        </div>
                                      </div>
                                    </div>
                                  </Toolbar>
                                  <div
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "color": "#cad5e4",
                                      }
                                    }
                                  >
                                    blocks.richText.startWriting
                                  </div>
                                  <Editable
                                    onBlur={[Function]}
                                    renderElement={[Function]}
                                    renderLeaf={[Function]}
                                  >
                                    <div
                                      contentEditable={true}
                                      data-gramm={false}
                                      data-slate-editor={true}
                                      data-slate-node="value"
                                      onBeforeInput={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onCompositionEnd={[Function]}
                                      onCompositionStart={[Function]}
                                      onCopy={[Function]}
                                      onCut={[Function]}
                                      onDragOver={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onPaste={[Function]}
                                      role="textbox"
                                      style={
                                        Object {
                                          "outline": "none",
                                          "whiteSpace": "pre-wrap",
                                          "wordWrap": "break-word",
                                        }
                                      }
                                      suppressContentEditableWarning={true}
                                    >
                                      <Children
                                        decorate={[Function]}
                                        decorations={Array []}
                                        node={
                                          Object {
                                            "addMark": [Function],
                                            "apply": [Function],
                                            "children": Array [
                                              Object {
                                                "children": Array [
                                                  Object {
                                                    "text": "",
                                                  },
                                                ],
                                                "type": "paragraph",
                                              },
                                            ],
                                            "deleteBackward": [Function],
                                            "deleteForward": [Function],
                                            "deleteFragment": [Function],
                                            "getFragment": [Function],
                                            "history": Object {
                                              "redos": Array [],
                                              "undos": Array [],
                                            },
                                            "insertBreak": [Function],
                                            "insertData": [Function],
                                            "insertFragment": [Function],
                                            "insertNode": [Function],
                                            "insertText": [Function],
                                            "isInline": [Function],
                                            "isVoid": [Function],
                                            "marks": null,
                                            "normalizeNode": [Function],
                                            "onChange": [Function],
                                            "operations": Array [],
                                            "redo": [Function],
                                            "removeMark": [Function],
                                            "selection": null,
                                            "setFragmentData": [Function],
                                            "undo": [Function],
                                          }
                                        }
                                        renderElement={[Function]}
                                        renderLeaf={[Function]}
                                        selection={null}
                                      >
                                        <Element
                                          decorate={[Function]}
                                          decorations={Array []}
                                          element={
                                            Object {
                                              "children": Array [
                                                Object {
                                                  "text": "",
                                                },
                                              ],
                                              "type": "paragraph",
                                            }
                                          }
                                          key="4"
                                          renderElement={[Function]}
                                          renderLeaf={[Function]}
                                          selection={null}
                                        >
                                          <p
                                            data-slate-node="element"
                                          >
                                            <Children
                                              decorate={[Function]}
                                              decorations={Array []}
                                              node={
                                                Object {
                                                  "children": Array [
                                                    Object {
                                                      "text": "",
                                                    },
                                                  ],
                                                  "type": "paragraph",
                                                }
                                              }
                                              renderElement={[Function]}
                                              renderLeaf={[Function]}
                                              selection={null}
                                            >
                                              <Text
                                                decorations={Array []}
                                                isLast={true}
                                                key="5"
                                                parent={
                                                  Object {
                                                    "children": Array [
                                                      Object {
                                                        "text": "",
                                                      },
                                                    ],
                                                    "type": "paragraph",
                                                  }
                                                }
                                                renderLeaf={[Function]}
                                                text={
                                                  Object {
                                                    "text": "",
                                                  }
                                                }
                                              >
                                                <span
                                                  data-slate-node="text"
                                                >
                                                  <Leaf
                                                    isLast={true}
                                                    key="5-0"
                                                    leaf={
                                                      Object {
                                                        "text": "",
                                                      }
                                                    }
                                                    parent={
                                                      Object {
                                                        "children": Array [
                                                          Object {
                                                            "text": "",
                                                          },
                                                        ],
                                                        "type": "paragraph",
                                                      }
                                                    }
                                                    renderLeaf={[Function]}
                                                    text={
                                                      Object {
                                                        "text": "",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      data-slate-leaf={true}
                                                    >
                                                      <String
                                                        isLast={true}
                                                        leaf={
                                                          Object {
                                                            "text": "",
                                                          }
                                                        }
                                                        parent={
                                                          Object {
                                                            "children": Array [
                                                              Object {
                                                                "text": "",
                                                              },
                                                            ],
                                                            "type": "paragraph",
                                                          }
                                                        }
                                                        text={
                                                          Object {
                                                            "text": "",
                                                          }
                                                        }
                                                      >
                                                        <ZeroWidthString
                                                          isLineBreak={true}
                                                        >
                                                          <span
                                                            data-slate-length={0}
                                                            data-slate-zero-width="n"
                                                          >
                                                            ï»¿
                                                            <br />
                                                          </span>
                                                        </ZeroWidthString>
                                                      </String>
                                                    </span>
                                                  </Leaf>
                                                </span>
                                              </Text>
                                            </Children>
                                          </p>
                                        </Element>
                                      </Children>
                                    </div>
                                  </Editable>
                                </Slate>
                              </Memo(RichTextBlock)>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Panel>
                </defaultProps(Panel)>
              </div>
            </PanelGroup>
          </defaultProps(PanelGroup)>
        </div>
      </ModalBody>
    </defaultProps(ModalBody)>
  </Body>
  <defaultProps(defaultProps(ModalFooter))
    classPrefix="rs-drawer-footer"
  >
    <defaultProps(ModalFooter)
      classPrefix="rs-drawer-footer"
    >
      <ModalFooter
        classPrefix="rs-drawer-footer"
      >
        <div
          className="rs-drawer-footer"
        >
          <withStyleProps(defaultProps(Button))
            appearance="primary"
            classPrefix="rs-btn"
            componentClass="button"
            disabled={false}
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="primary"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              disabled={false}
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="primary"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                disabled={false}
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.save
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
          <withStyleProps(defaultProps(Button))
            appearance="subtle"
            classPrefix="rs-btn"
            componentClass="button"
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="subtle"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="subtle"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.close
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
        </div>
      </ModalFooter>
    </defaultProps(ModalFooter)>
  </defaultProps(defaultProps(ModalFooter))>
  <defaultProps(Drawer)
    classPrefix="rs-drawer"
    onHide={[Function]}
    placement="right"
    show={false}
    size="sm"
  >
    <Drawer
      classPrefix="rs-drawer"
      onHide={[Function]}
      placement="right"
      show={false}
      size="sm"
    >
      <defaultProps(Modal)
        animation={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Slide",
            "render": [Function],
          }
        }
        animationProps={
          Object {
            "placement": "right",
          }
        }
        animationTimeout={300}
        autoFocus={true}
        backdrop={true}
        className="rs-drawer-right"
        classPrefix="rs-drawer"
        dialogComponentClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "classPrefix": "rs-modal",
            },
            "displayName": "withStyleProps(defaultProps(ModalDialog))",
            "propTypes": Object {
              "innerRef": [Function],
              "size": [Function],
            },
            "render": [Function],
          }
        }
        drawer={true}
        enforceFocus={true}
        keyboard={true}
        onHide={[Function]}
        overflow={true}
        show={false}
        size="sm"
      >
        <Modal
          animation={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Slide",
              "render": [Function],
            }
          }
          animationProps={
            Object {
              "placement": "right",
            }
          }
          animationTimeout={300}
          autoFocus={true}
          backdrop={true}
          className="rs-drawer-right"
          classPrefix="rs-drawer"
          dialogComponentClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "classPrefix": "rs-modal",
              },
              "displayName": "withStyleProps(defaultProps(ModalDialog))",
              "propTypes": Object {
                "innerRef": [Function],
                "size": [Function],
              },
              "render": [Function],
            }
          }
          drawer={true}
          enforceFocus={true}
          keyboard={true}
          onHide={[Function]}
          overflow={true}
          show={false}
          size="sm"
        >
          <BaseModal
            animationProps={
              Object {
                "placement": "right",
              }
            }
            autoFocus={true}
            backdrop={true}
            backdropClassName="rs-drawer-backdrop"
            backdropTransitionTimeout={150}
            className="rs-drawer-wrapper"
            containerClassName="rs-drawer-open rs-drawer-has-backdrop"
            dialogTransitionTimeout={300}
            drawer={true}
            enforceFocus={true}
            keyboard={true}
            onEntered={[Function]}
            onEntering={[Function]}
            onExited={[Function]}
            onHide={[Function]}
            overflow={true}
            show={false}
            transition={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Slide",
                "render": [Function],
              }
            }
          />
        </Modal>
      </defaultProps(Modal)>
    </Drawer>
  </defaultProps(Drawer)>
  <defaultProps(Drawer)
    classPrefix="rs-drawer"
    placement="right"
    show={false}
    size="sm"
  >
    <Drawer
      classPrefix="rs-drawer"
      placement="right"
      show={false}
      size="sm"
    >
      <defaultProps(Modal)
        animation={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Slide",
            "render": [Function],
          }
        }
        animationProps={
          Object {
            "placement": "right",
          }
        }
        animationTimeout={300}
        autoFocus={true}
        backdrop={true}
        className="rs-drawer-right"
        classPrefix="rs-drawer"
        dialogComponentClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "classPrefix": "rs-modal",
            },
            "displayName": "withStyleProps(defaultProps(ModalDialog))",
            "propTypes": Object {
              "innerRef": [Function],
              "size": [Function],
            },
            "render": [Function],
          }
        }
        drawer={true}
        enforceFocus={true}
        keyboard={true}
        overflow={true}
        show={false}
        size="sm"
      >
        <Modal
          animation={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Slide",
              "render": [Function],
            }
          }
          animationProps={
            Object {
              "placement": "right",
            }
          }
          animationTimeout={300}
          autoFocus={true}
          backdrop={true}
          className="rs-drawer-right"
          classPrefix="rs-drawer"
          dialogComponentClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "classPrefix": "rs-modal",
              },
              "displayName": "withStyleProps(defaultProps(ModalDialog))",
              "propTypes": Object {
                "innerRef": [Function],
                "size": [Function],
              },
              "render": [Function],
            }
          }
          drawer={true}
          enforceFocus={true}
          keyboard={true}
          overflow={true}
          show={false}
          size="sm"
        >
          <BaseModal
            animationProps={
              Object {
                "placement": "right",
              }
            }
            autoFocus={true}
            backdrop={true}
            backdropClassName="rs-drawer-backdrop"
            backdropTransitionTimeout={150}
            className="rs-drawer-wrapper"
            containerClassName="rs-drawer-open rs-drawer-has-backdrop"
            dialogTransitionTimeout={300}
            drawer={true}
            enforceFocus={true}
            keyboard={true}
            onEntered={[Function]}
            onEntering={[Function]}
            onExited={[Function]}
            overflow={true}
            show={false}
            transition={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Slide",
                "render": [Function],
              }
            }
          />
        </Modal>
      </defaultProps(Modal)>
    </Drawer>
  </defaultProps(Drawer)>
</AuthorEditPanel>
`;
