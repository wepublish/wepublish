// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Author Edit Panel should allow a new author to be created  1`] = `
<AuthorEditPanel>
  <DrawerHeader>
    <ModalHeader
      classPrefix="drawer-header"
    >
      <div
        className="rs-drawer-header"
      >
        <CloseButton
          className="rs-drawer-header-close"
        >
          <span
            aria-label="Close"
            className="rs-drawer-header-close rs-btn-close"
            role="button"
            title="Close"
          >
            <Close>
              <Icon
                aria-label="close"
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                data-category="application"
                fill="currentColor"
                height="1em"
                width="1em"
              >
                <ForwardRef(Close)
                  aria-hidden={true}
                  aria-label="close"
                  className="rs-icon"
                  data-category="application"
                  fill="currentColor"
                  focusable={false}
                  height="1em"
                  width="1em"
                >
                  <svg
                    aria-hidden={true}
                    aria-label="close"
                    className="rs-icon"
                    data-category="application"
                    fill="currentColor"
                    focusable={false}
                    height="1em"
                    viewBox="0 0 16 16"
                    width="1em"
                  >
                    <path
                      d="M2.784 2.089l.069.058 5.146 5.147 5.146-5.147a.5.5 0 01.765.638l-.058.069L8.705 8l5.147 5.146a.5.5 0 01-.638.765l-.069-.058-5.146-5.147-5.146 5.147a.5.5 0 01-.765-.638l.058-.069L7.293 8 2.146 2.854a.5.5 0 01.638-.765z"
                    />
                  </svg>
                </ForwardRef(Close)>
              </Icon>
            </Close>
          </span>
        </CloseButton>
        <DrawerTitle>
          <Modal.Title
            classPrefix="drawer-title"
          >
            <h4
              className="rs-drawer-title"
            >
              authors.panels.createAuthor
            </h4>
          </Modal.Title>
        </DrawerTitle>
        <DrawerActions>
          <ModalFooter
            classPrefix="drawer-actions"
          >
            <div
              className="rs-drawer-actions"
            >
              <Button
                appearance="primary"
                disabled={true}
                onClick={[Function]}
              >
                <button
                  aria-disabled={true}
                  className="rs-btn rs-btn-primary rs-btn-disabled"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.create
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
              <Button
                appearance="subtle"
                onClick={[Function]}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.close
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
            </div>
          </ModalFooter>
        </DrawerActions>
      </div>
    </ModalHeader>
  </DrawerHeader>
  <DrawerBody>
    <ModalBody
      classPrefix="drawer-body"
    >
      <div
        className="rs-drawer-body"
        style={Object {}}
      >
        <PanelGroup>
          <div
            className="rs-panel-group"
          >
            <Panel>
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <Form
                    fluid={true}
                  >
                    <form
                      className="rs-form rs-form-vertical rs-form-fluid"
                      onSubmit={[Function]}
                    >
                      <FormGroup>
                        <div
                          className="rs-form-group"
                          role="group"
                        >
                          <FormControlLabel>
                            <label
                              className="rs-form-control-label"
                              id={null}
                            >
                              authors.panels.name
                            </label>
                          </FormControlLabel>
                          <FormControl
                            disabled={true}
                            name="authors.panels.name"
                            onChange={[Function]}
                            value="Clark Kent"
                          >
                            <div
                              className="rs-form-control rs-form-control-wrapper"
                            >
                              <Input
                                aria-describedby={null}
                                aria-labelledby={null}
                                disabled={true}
                                name="authors.panels.name"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value="Clark Kent"
                              >
                                <input
                                  aria-describedby={null}
                                  aria-labelledby={null}
                                  className="rs-input"
                                  disabled={true}
                                  name="authors.panels.name"
                                  type="text"
                                  value="Clark Kent"
                                />
                              </Input>
                              <FormErrorMessage
                                aria-relevant="all"
                                className="rs-form-control-message-wrapper"
                                id="undefined-error-message"
                                placement="bottomStart"
                                role="alert"
                                show={false}
                              />
                            </div>
                          </FormControl>
                        </div>
                      </FormGroup>
                      <FormGroup>
                        <div
                          className="rs-form-group"
                          role="group"
                        >
                          <FormControlLabel>
                            <label
                              className="rs-form-control-label"
                              id={null}
                            >
                              authors.panels.jobTitle
                            </label>
                          </FormControlLabel>
                          <FormControl
                            disabled={true}
                            name="authors.panels.jobTitle"
                            onChange={[Function]}
                            value=""
                          >
                            <div
                              className="rs-form-control rs-form-control-wrapper"
                            >
                              <Input
                                aria-describedby={null}
                                aria-labelledby={null}
                                disabled={true}
                                name="authors.panels.jobTitle"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <input
                                  aria-describedby={null}
                                  aria-labelledby={null}
                                  className="rs-input"
                                  disabled={true}
                                  name="authors.panels.jobTitle"
                                  type="text"
                                  value=""
                                />
                              </Input>
                              <FormErrorMessage
                                aria-relevant="all"
                                className="rs-form-control-message-wrapper"
                                id="undefined-error-message"
                                placement="bottomStart"
                                role="alert"
                                show={false}
                              />
                            </div>
                          </FormControl>
                        </div>
                      </FormGroup>
                    </form>
                  </Form>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.image"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.image
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <ChooseEditImage
                    disabled={false}
                    header=""
                    left={0}
                    openChooseModalOpen={[Function]}
                    openEditModalOpen={[Function]}
                    removeImage={[Function]}
                    top={0}
                  >
                    <Panel
                      bodyFill={true}
                      header=""
                    >
                      <div
                        className="rs-panel"
                      >
                        <div
                          className="rs-panel-body rs-panel-body-fill"
                          role="region"
                        >
                          <PlaceholderInput
                            onAddClick={[Function]}
                          >
                            <div
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#f7f9fa",
                                  "display": "flex",
                                  "flexDirection": "column",
                                  "height": "100%",
                                  "justifyContent": "center",
                                  "maxHeight": 450,
                                  "width": "100%",
                                }
                              }
                            >
                              <IconButton
                                icon={<PlusCircle />}
                                onClick={[Function]}
                                size="sm"
                              >
                                <Button
                                  className="rs-btn-icon rs-btn-icon-placement-left"
                                  onClick={[Function]}
                                  size="sm"
                                >
                                  <button
                                    className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default rs-btn-sm"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <PlusCircle>
                                      <Icon
                                        aria-label="plus circle"
                                        as={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          }
                                        }
                                        data-category="legacy"
                                        fill="currentColor"
                                        height="1em"
                                        width="1em"
                                      >
                                        <ForwardRef(PlusCircle)
                                          aria-hidden={true}
                                          aria-label="plus circle"
                                          className="rs-icon"
                                          data-category="legacy"
                                          fill="currentColor"
                                          focusable={false}
                                          height="1em"
                                          width="1em"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-label="plus circle"
                                            className="rs-icon"
                                            data-category="legacy"
                                            fill="currentColor"
                                            focusable={false}
                                            height="1em"
                                            viewBox="0 0 27 32"
                                            width="1em"
                                          >
                                            <path
                                              d="M21.714 17.143v-2.286c0-.625-.518-1.143-1.143-1.143H16V9.143C16 8.518 15.482 8 14.857 8h-2.286c-.625 0-1.143.518-1.143 1.143v4.571H6.857c-.625 0-1.143.518-1.143 1.143v2.286c0 .625.518 1.143 1.143 1.143h4.571v4.571c0 .625.518 1.143 1.143 1.143h2.286c.625 0 1.143-.518 1.143-1.143v-4.571h4.571c.625 0 1.143-.518 1.143-1.143zM27.429 16c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                            />
                                          </svg>
                                        </ForwardRef(PlusCircle)>
                                      </Icon>
                                    </PlusCircle>
                                    <Ripple>
                                      <span
                                        className="rs-ripple-pond"
                                      >
                                        <Transition
                                          enteringClassName="rs-ripple-rippling"
                                          in={false}
                                          onEntered={[Function]}
                                          timeout={1000}
                                        >
                                          <span
                                            className="rs-ripple"
                                          />
                                        </Transition>
                                      </span>
                                    </Ripple>
                                  </button>
                                </Button>
                              </IconButton>
                            </div>
                          </PlaceholderInput>
                        </div>
                      </div>
                    </Panel>
                  </ChooseEditImage>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.links"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.links
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <ListInput
                    defaultValue={
                      Object {
                        "title": "",
                        "url": "",
                      }
                    }
                    onChange={[Function]}
                    value={
                      Array [
                        Object {
                          "id": "fakeNanoid1",
                          "value": Object {
                            "title": "",
                            "url": "",
                          },
                        },
                      ]
                    }
                  >
                    <div>
                      <Component
                        defaultValue={
                          Object {
                            "title": "",
                            "url": "",
                          }
                        }
                        onChange={[Function]}
                        onSortEnd={[Function]}
                        useDragHandle={true}
                        value={
                          Array [
                            Object {
                              "id": "fakeNanoid1",
                              "value": Object {
                                "title": "",
                                "url": "",
                              },
                            },
                          ]
                        }
                      >
                        <div>
                          <Component
                            index={0}
                            itemIndex={0}
                            key="fakeNanoid1"
                            onChange={[Function]}
                            onRemove={[Function]}
                            value={
                              Object {
                                "id": "fakeNanoid1",
                                "value": Object {
                                  "title": "",
                                  "url": "",
                                },
                              }
                            }
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                  "flexDirection": "row",
                                  "marginBottom": "10px",
                                }
                              }
                            >
                              <div
                                style={
                                  Object {
                                    "marginRight": "10px",
                                  }
                                }
                              >
                                <Component>
                                  <IconButton
                                    icon={<Th2 />}
                                  >
                                    <Button
                                      className="rs-btn-icon rs-btn-icon-placement-left"
                                    >
                                      <button
                                        className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default"
                                        type="button"
                                      >
                                        <Th2>
                                          <Icon
                                            aria-label="th 2"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Th2)
                                              aria-hidden={true}
                                              aria-label="th 2"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="th 2"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M0 0h8v8.005H0V0zM12 0h8v8.005h-8V0zM24 0h8v8.005h-8V0zM0 11.998h8v8.005H0v-8.005zM12 11.998h8v8.005h-8v-8.005zM24 11.998h8v8.005h-8v-8.005zM0 23.995h8V32H0v-8.005zM12 23.995h8V32h-8v-8.005zM24 23.995h8V32h-8v-8.005z"
                                                />
                                              </svg>
                                            </ForwardRef(Th2)>
                                          </Icon>
                                        </Th2>
                                        <Ripple>
                                          <span
                                            className="rs-ripple-pond"
                                          >
                                            <Transition
                                              enteringClassName="rs-ripple-rippling"
                                              in={false}
                                              onEntered={[Function]}
                                              timeout={1000}
                                            >
                                              <span
                                                className="rs-ripple"
                                              />
                                            </Transition>
                                          </span>
                                        </Ripple>
                                      </button>
                                    </Button>
                                  </IconButton>
                                </Component>
                              </div>
                              <Panel
                                bodyFill={true}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <div
                                  className="rs-panel"
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <div
                                    className="rs-panel-body rs-panel-body-fill"
                                    role="region"
                                  >
                                    <div
                                      style={
                                        Object {
                                          "minHeight": "100%",
                                        }
                                      }
                                    >
                                      <div
                                        style={
                                          Object {
                                            "display": "flex",
                                            "flexDirection": "row",
                                          }
                                        }
                                      >
                                        <Input
                                          onChange={[Function]}
                                          placeholder="authors.panels.title"
                                          style={
                                            Object {
                                              "marginRight": "10px",
                                              "width": "30%",
                                            }
                                          }
                                          value=""
                                        >
                                          <input
                                            className="rs-input"
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="authors.panels.title"
                                            style={
                                              Object {
                                                "marginRight": "10px",
                                                "width": "30%",
                                              }
                                            }
                                            type="text"
                                            value=""
                                          />
                                        </Input>
                                        <InputGroup
                                          inside={true}
                                        >
                                          <div
                                            className="rs-input-group rs-input-group-inside"
                                          >
                                            <InputGroupAddon>
                                              <span
                                                className="rs-input-group-addon"
                                              >
                                                <Link>
                                                  <Icon
                                                    aria-label="link"
                                                    as={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      }
                                                    }
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    height="1em"
                                                    width="1em"
                                                  >
                                                    <ForwardRef(Link)
                                                      aria-hidden={true}
                                                      aria-label="link"
                                                      className="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable={false}
                                                      height="1em"
                                                      width="1em"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-label="link"
                                                        className="rs-icon"
                                                        data-category="legacy"
                                                        fill="currentColor"
                                                        focusable={false}
                                                        height="1em"
                                                        viewBox="0 0 30 32"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(Link)>
                                                  </Icon>
                                                </Link>
                                              </span>
                                            </InputGroupAddon>
                                            <Input
                                              onChange={[Function]}
                                              placeholder="authors.panels.link"
                                              style={
                                                Object {
                                                  "width": "70%",
                                                }
                                              }
                                              value=""
                                            >
                                              <input
                                                className="rs-input"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="authors.panels.link"
                                                style={
                                                  Object {
                                                    "width": "70%",
                                                  }
                                                }
                                                type="text"
                                                value=""
                                              />
                                            </Input>
                                          </div>
                                        </InputGroup>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </Panel>
                              <div
                                style={
                                  Object {
                                    "marginLeft": "10px",
                                  }
                                }
                              >
                                <IconButton
                                  icon={<Trash />}
                                  onClick={[Function]}
                                >
                                  <Button
                                    className="rs-btn-icon rs-btn-icon-placement-left"
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <Trash>
                                        <Icon
                                          aria-label="trash"
                                          as={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            }
                                          }
                                          data-category="legacy"
                                          fill="currentColor"
                                          height="1em"
                                          width="1em"
                                        >
                                          <ForwardRef(Trash)
                                            aria-hidden={true}
                                            aria-label="trash"
                                            className="rs-icon"
                                            data-category="legacy"
                                            fill="currentColor"
                                            focusable={false}
                                            height="1em"
                                            width="1em"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-label="trash"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              viewBox="0 0 25 32"
                                              width="1em"
                                            >
                                              <path
                                                d="M9.143 24.571V12a.564.564 0 00-.571-.571H7.429a.564.564 0 00-.571.571v12.571c0 .321.25.571.571.571h1.143c.321 0 .571-.25.571-.571zm4.571 0V12a.564.564 0 00-.571-.571H12a.564.564 0 00-.571.571v12.571c0 .321.25.571.571.571h1.143c.321 0 .571-.25.571-.571zm4.572 0V12a.564.564 0 00-.571-.571h-1.143a.564.564 0 00-.571.571v12.571c0 .321.25.571.571.571h1.143c.321 0 .571-.25.571-.571zM8.571 6.857h8l-.857-2.089a.684.684 0 00-.304-.196H9.749a.608.608 0 00-.304.196zm16.572.572v1.143c0 .321-.25.571-.571.571h-1.714v16.929c0 1.964-1.286 3.643-2.857 3.643H5.144c-1.571 0-2.857-1.607-2.857-3.571v-17H.573a.564.564 0 01-.571-.571V7.43c0-.321.25-.571.571-.571h5.518l1.25-2.982c.357-.875 1.429-1.589 2.375-1.589h5.714c.946 0 2.018.714 2.375 1.589l1.25 2.982h5.518c.321 0 .571.25.571.571z"
                                              />
                                            </svg>
                                          </ForwardRef(Trash)>
                                        </Icon>
                                      </Trash>
                                      <Ripple>
                                        <span
                                          className="rs-ripple-pond"
                                        >
                                          <Transition
                                            enteringClassName="rs-ripple-rippling"
                                            in={false}
                                            onEntered={[Function]}
                                            timeout={1000}
                                          >
                                            <span
                                              className="rs-ripple"
                                            />
                                          </Transition>
                                        </span>
                                      </Ripple>
                                    </button>
                                  </Button>
                                </IconButton>
                              </div>
                            </div>
                          </Component>
                          <IconButton
                            icon={<PlusCircle />}
                            onClick={[Function]}
                          >
                            <Button
                              className="rs-btn-icon rs-btn-icon-placement-left"
                              onClick={[Function]}
                            >
                              <button
                                className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default"
                                onClick={[Function]}
                                type="button"
                              >
                                <PlusCircle>
                                  <Icon
                                    aria-label="plus circle"
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      }
                                    }
                                    data-category="legacy"
                                    fill="currentColor"
                                    height="1em"
                                    width="1em"
                                  >
                                    <ForwardRef(PlusCircle)
                                      aria-hidden={true}
                                      aria-label="plus circle"
                                      className="rs-icon"
                                      data-category="legacy"
                                      fill="currentColor"
                                      focusable={false}
                                      height="1em"
                                      width="1em"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-label="plus circle"
                                        className="rs-icon"
                                        data-category="legacy"
                                        fill="currentColor"
                                        focusable={false}
                                        height="1em"
                                        viewBox="0 0 27 32"
                                        width="1em"
                                      >
                                        <path
                                          d="M21.714 17.143v-2.286c0-.625-.518-1.143-1.143-1.143H16V9.143C16 8.518 15.482 8 14.857 8h-2.286c-.625 0-1.143.518-1.143 1.143v4.571H6.857c-.625 0-1.143.518-1.143 1.143v2.286c0 .625.518 1.143 1.143 1.143h4.571v4.571c0 .625.518 1.143 1.143 1.143h2.286c.625 0 1.143-.518 1.143-1.143v-4.571h4.571c.625 0 1.143-.518 1.143-1.143zM27.429 16c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                        />
                                      </svg>
                                    </ForwardRef(PlusCircle)>
                                  </Icon>
                                </PlusCircle>
                                <Ripple>
                                  <span
                                    className="rs-ripple-pond"
                                  >
                                    <Transition
                                      enteringClassName="rs-ripple-rippling"
                                      in={false}
                                      onEntered={[Function]}
                                      timeout={1000}
                                    >
                                      <span
                                        className="rs-ripple"
                                      />
                                    </Transition>
                                  </span>
                                </Ripple>
                              </button>
                            </Button>
                          </IconButton>
                        </div>
                      </Component>
                    </div>
                  </ListInput>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.bioInformation"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.bioInformation
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <div
                    className="richTextFrame"
                  >
                    <Memo(RichTextBlock)
                      onChange={[Function]}
                      value={
                        Array [
                          Object {
                            "children": Array [
                              Object {
                                "text": "",
                              },
                            ],
                            "type": "paragraph",
                          },
                        ]
                      }
                    >
                      <Slate
                        editor={
                          Object {
                            "addMark": [Function],
                            "apply": [Function],
                            "children": Array [
                              Object {
                                "children": Array [
                                  Object {
                                    "text": "",
                                  },
                                ],
                                "type": "paragraph",
                              },
                            ],
                            "deleteBackward": [Function],
                            "deleteForward": [Function],
                            "deleteFragment": [Function],
                            "getFragment": [Function],
                            "history": Object {
                              "redos": Array [],
                              "undos": Array [],
                            },
                            "insertBreak": [Function],
                            "insertData": [Function],
                            "insertFragment": [Function],
                            "insertNode": [Function],
                            "insertText": [Function],
                            "isInline": [Function],
                            "isVoid": [Function],
                            "marks": null,
                            "normalizeNode": [Function],
                            "onChange": [Function],
                            "operations": Array [],
                            "redo": [Function],
                            "removeMark": [Function],
                            "selection": null,
                            "setFragmentData": [Function],
                            "undo": [Function],
                          }
                        }
                        onChange={[Function]}
                        value={
                          Array [
                            Object {
                              "children": Array [
                                Object {
                                  "text": "",
                                },
                              ],
                              "type": "paragraph",
                            },
                          ]
                        }
                      >
                        <Toolbar
                          fadeOut={true}
                          onMouseDown={[Function]}
                        >
                          <div
                            onMouseDown={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "display": "flex",
                                "justifyContent": "center",
                                "marginBottom": 30,
                                "pointerEvents": "none",
                                "position": "sticky",
                                "zIndex": 1,
                              }
                            }
                          >
                            <div
                              style={
                                Object {
                                  "backgroundColor": "white",
                                  "borderRadius": 6,
                                  "padding": 5,
                                  "pointerEvents": "auto",
                                  "transitionDuration": "100ms",
                                  "transitionProperty": "opacity",
                                }
                              }
                            >
                              <div
                                style={
                                  Object {
                                    "display": "flex",
                                    "opacity": 0.5,
                                    "transitionDuration": "100ms",
                                    "transitionProperty": "opacity",
                                  }
                                }
                              >
                                <FormatButton
                                  format="heading-one"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H1Icon>
                                        <svg
                                          className="bi bi-type-h1"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M8.637 13V3.669H7.379V7.62H2.758V3.67H1.5V13h1.258V8.728h4.62V13h1.259zm5.329 0V3.669h-1.244L10.5 5.316v1.265l2.16-1.565h.062V13h1.244z"
                                          />
                                        </svg>
                                      </H1Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <FormatButton
                                  format="heading-two"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H2Icon>
                                        <svg
                                          className="bi bi-type-h2"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7.638 13V3.669H6.38V7.62H1.759V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.022-6.733v-.048c0-.889.63-1.668 1.716-1.668.957 0 1.675.608 1.675 1.572 0 .855-.554 1.504-1.067 2.085l-3.513 3.999V13H15.5v-1.094h-4.245v-.075l2.481-2.844c.875-.998 1.586-1.784 1.586-2.953 0-1.463-1.155-2.556-2.919-2.556-1.941 0-2.966 1.326-2.966 2.74v.049h1.223z"
                                          />
                                        </svg>
                                      </H2Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <FormatButton
                                  format="heading-three"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H3Icon>
                                        <svg
                                          className="bi bi-type-h3"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7.637 13V3.669H6.379V7.62H1.758V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.625-4.272h1.018c1.142 0 1.935.67 1.949 1.674.013 1.005-.78 1.737-2.01 1.73-1.08-.007-1.853-.588-1.935-1.32H9.108c.069 1.327 1.224 2.386 3.083 2.386 1.935 0 3.343-1.155 3.309-2.789-.027-1.51-1.251-2.16-2.037-2.249v-.068c.704-.123 1.764-.91 1.723-2.229-.035-1.353-1.176-2.4-2.954-2.385-1.873.006-2.857 1.162-2.898 2.358h1.196c.062-.69.711-1.299 1.696-1.299.998 0 1.695.622 1.695 1.525.007.922-.718 1.592-1.695 1.592h-.964v1.074z"
                                          />
                                        </svg>
                                      </H3Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <FormatIconButton
                                  format="unordered-list"
                                  icon={<ListUl />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<ListUl />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <ListUl>
                                          <Icon
                                            aria-label="list ul"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(ListUl)
                                              aria-hidden={true}
                                              aria-label="list ul"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="list ul"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M6.857 25.143a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zm0-9.143a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zM32 23.429v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571v-3.429c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571zM6.857 6.857a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zM32 14.286v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571v-3.429c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571zm0-9.143v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571V5.143c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571z"
                                                />
                                              </svg>
                                            </ForwardRef(ListUl)>
                                          </Icon>
                                        </ListUl>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="ordered-list"
                                  icon={<ListOl />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<ListOl />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <ListOl>
                                          <Icon
                                            aria-label="list ol"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(ListOl)
                                              aria-hidden={true}
                                              aria-label="list ol"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="list ol"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M6.804 28.929C6.804 30.893 5.268 32 3.411 32c-1.125 0-2.268-.375-3.071-1.179l1.018-1.571c.482.446 1.214.804 1.893.804.625 0 1.286-.304 1.286-1.018 0-1-1.143-1.054-1.875-1l-.464-1c.643-.821 1.232-1.732 2-2.429v-.018c-.571 0-1.161.036-1.732.036v.946H.573v-2.714h5.946v1.571l-1.696 2.054c1.196.286 1.982 1.214 1.982 2.446zm.035-11.197v2.839H.375a5.853 5.853 0 01-.107-.964c0-3.304 4.036-3.804 4.036-5.304 0-.607-.375-.929-.964-.929-.625 0-1.143.536-1.446 1.036L.376 13.356c.589-1.232 1.804-1.929 3.161-1.929 1.661 0 3.089.982 3.089 2.75 0 2.643-3.875 3.232-3.929 4.625h2.268v-1.071H6.84zM32 23.429v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571v-3.429c0-.321.25-.571.571-.571h21.714c.304 0 .571.25.571.571zM6.857 7.375v1.768H.875V7.375h1.911c0-1.446.018-2.893.018-4.339v-.214h-.036c-.196.393-.554.661-.893.964L.607 2.429 3.036.161h1.893v7.214h1.929zM32 14.286v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571v-3.429c0-.321.25-.571.571-.571h21.714c.304 0 .571.25.571.571zm0-9.143v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571V5.143c0-.304.25-.571.571-.571h21.714c.304 0 .571.268.571.571z"
                                                />
                                              </svg>
                                            </ForwardRef(ListOl)>
                                          </Icon>
                                        </ListOl>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <EditorSubMenuButton
                                  editorHasFocus={false}
                                  icon={<Table />}
                                >
                                  <ForwardRef
                                    icon={<Table />}
                                  >
                                    <Whisper
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <TableMenu />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <OverlayTrigger
                                        placement="top"
                                        speaker={
                                          <Popover>
                                            <TableMenu />
                                          </Popover>
                                        }
                                        trigger="none"
                                      >
                                        <ForwardRef
                                          active={false}
                                          onMouseDown={[Function]}
                                        >
                                          <button
                                            className="icon-button"
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "border": "#00000000 1px solid",
                                              }
                                            }
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "minWidth": "15px",
                                                }
                                              }
                                            >
                                              <Table>
                                                <Icon
                                                  aria-label="table"
                                                  as={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    }
                                                  }
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <ForwardRef(Table)
                                                    aria-hidden={true}
                                                    aria-label="table"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    width="1em"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-label="table"
                                                      className="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable={false}
                                                      height="1em"
                                                      viewBox="0 0 30 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M9.143 24.571v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zM9.143 10.857V7.428a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm-9.143-13.714V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm2.285-5.714v19.429a2.866 2.866 0 01-2.857 2.857h-24A2.866 2.866 0 010 24.572V5.143a2.866 2.866 0 012.857-2.857h24a2.866 2.866 0 012.857 2.857z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(Table)>
                                                </Icon>
                                              </Table>
                                            </div>
                                          </button>
                                        </ForwardRef>
                                        <Component>
                                          <Portal
                                            containerInfo={<body />}
                                          >
                                            <Overlay
                                              childrenProps={
                                                Object {
                                                  "id": undefined,
                                                }
                                              }
                                              open={false}
                                              placement="top"
                                              rootClose={true}
                                              triggerTarget={
                                                Object {
                                                  "current": <button
                                                    class="icon-button"
                                                    style="border: 1px solid #00000000;"
                                                  >
                                                    <div
                                                      style="min-width: 15px;"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        aria-label="table"
                                                        class="rs-icon"
                                                        data-category="legacy"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        viewBox="0 0 30 32"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M9.143 24.571v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zM9.143 10.857V7.428a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm-9.143-13.714V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm2.285-5.714v19.429a2.866 2.866 0 01-2.857 2.857h-24A2.866 2.866 0 010 24.572V5.143a2.866 2.866 0 012.857-2.857h24a2.866 2.866 0 012.857 2.857z"
                                                        />
                                                      </svg>
                                                    </div>
                                                  </button>,
                                                }
                                              }
                                            />
                                          </Portal>
                                        </Component>
                                      </OverlayTrigger>
                                    </Whisper>
                                  </ForwardRef>
                                </EditorSubMenuButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <FormatIconButton
                                  format="bold"
                                  icon={<Bold />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Bold />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Bold>
                                          <Icon
                                            aria-label="bold"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Bold)
                                              aria-hidden={true}
                                              aria-label="bold"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="bold"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 25 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M9.911 27.161c.786.339 1.643.571 2.5.571 4.071 0 6.714-1.625 6.714-5.982 0-1.107-.143-2.268-.732-3.214-1.661-2.679-4.054-2.821-6.929-2.821-.536 0-1.304 0-1.804.179 0 1.893-.018 3.786-.018 5.661 0 1.232-.161 4.571.268 5.607zm-.25-13.322c.643.107 1.304.125 1.946.125 3.679 0 6.304-1.036 6.304-5.161 0-3.482-3.089-4.679-6.071-4.679-.786 0-1.554.107-2.321.232 0 1.804.143 3.607.143 5.411 0 .946-.018 1.893-.018 2.839 0 .411 0 .821.018 1.232zM0 29.714l.036-1.679c1.143-.286 2.304-.304 3.411-.768.625-1.054.536-2.911.536-4.107 0-.393.036-17.464-.393-18.304-.268-.518-2.893-.643-3.482-.714L.037 2.66c4.25-.071 8.5-.375 12.732-.375.804 0 1.625.018 2.429.018 4.036 0 8.482 1.929 8.482 6.571 0 3.196-2.429 4.393-4.946 5.536 3.393.768 6.411 3.071 6.411 6.821 0 6.143-5.589 8.179-10.821 8.179-1.571 0-3.143-.107-4.714-.107-3.196 0-6.429.286-9.607.411z"
                                                />
                                              </svg>
                                            </ForwardRef(Bold)>
                                          </Icon>
                                        </Bold>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="italic"
                                  icon={<Italic />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Italic />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Italic>
                                          <Icon
                                            aria-label="italic"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Italic)
                                              aria-hidden={true}
                                              aria-label="italic"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="italic"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 18 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M0 29.679l.304-1.518c1.143-.357 2.375-.5 3.446-1.054.411-.518.607-1.179.732-1.804.232-1.214 4.125-18.732 4.071-20.161v-.446c-.982-.536-2.179-.393-3.25-.571l.339-1.839c2.304.107 4.643.286 6.964.286 1.893 0 3.786-.179 5.679-.286a11.878 11.878 0 01-.339 1.589c-1.232.429-2.536.625-3.75 1.107-.393.964-.482 2.018-.661 3.036-.857 4.625-2 9.25-2.946 13.839-.179.857-1.054 4.411-.982 5.161l.018.321c1.089.25 2.196.375 3.304.554a10.142 10.142 0 01-.286 1.768c-.393 0-.768.054-1.161.054-1.018 0-2.071-.339-3.089-.357-1.232-.018-2.464-.036-3.679-.036-1.589 0-3.143.268-4.714.357z"
                                                />
                                              </svg>
                                            </ForwardRef(Italic)>
                                          </Icon>
                                        </Italic>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="underline"
                                  icon={<Underline />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Underline />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Underline>
                                          <Icon
                                            aria-label="underline"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Underline)
                                              aria-hidden={true}
                                              aria-label="underline"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="underline"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 27 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M.857 3.982c-.321-.018-.589-.018-.804-.071L-.001 2.34c.232-.018.464-.018.714-.018.625 0 1.304.018 2 .071 1.679.089 2.679.125 2.964.125a81.9 81.9 0 003-.054c.964-.036 1.839-.071 2.607-.089.75 0 1.268-.018 1.536-.036l-.018.25.036 1.143v.161c-.714.107-1.446.161-2.214.161-.714 0-1.179.143-1.411.446-.161.179-.232.964-.232 2.357 0 .429.018.768.018 1.036l.018 4.089.25 5c.071 1.446.357 2.643.911 3.607.411.696.982 1.25 1.714 1.643 1.071.571 2.125.839 3.161.839 1.214 0 2.357-.161 3.411-.5a5.546 5.546 0 001.768-.911c.554-.411.946-.786 1.161-1.143a7.58 7.58 0 00.946-2.036c.25-.875.375-2.232.375-4.089 0-3.196-.232-3.286-.5-7.321l-.071-1.054c-.054-.768-.179-1.304-.429-1.571-.393-.411-.857-.625-1.375-.607l-1.786.036-.25-.054.036-1.536h1.5l3.661.179c1.214.054 2.375-.054 3.5-.179l.321.036c.071.446.107.75.107.911s-.036.339-.071.554a6.923 6.923 0 01-1.5.232c-.839.125-1.321.214-1.411.304-.161.161-.268.393-.268.732 0 .232.036.589.054 1.036 0 0 .143.321.393 7.071.089 2.696-.089 4.518-.268 5.429s-.429 1.643-.732 2.179c-.464.786-1.143 1.518-2 2.196-.875.661-1.946 1.196-3.25 1.589s-2.821.589-4.554.589c-1.964 0-3.661-.268-5.071-.821s-2.482-1.286-3.196-2.179-1.214-2.054-1.482-3.482c-.196-.982-.286-2.393-.286-4.232V8.483c0-2.25-.107-3.518-.304-3.804-.286-.411-1.161-.661-2.625-.696zm26.572 25.161V28a.564.564 0 00-.571-.571H.572A.564.564 0 00.001 28v1.143c0 .321.25.571.571.571h26.286c.321 0 .571-.25.571-.571z"
                                                />
                                              </svg>
                                            </ForwardRef(Underline)>
                                          </Icon>
                                        </Underline>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="strikethrough"
                                  icon={<Strikethrough />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Strikethrough />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Strikethrough>
                                          <Icon
                                            aria-label="strikethrough"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Strikethrough)
                                              aria-hidden={true}
                                              aria-label="strikethrough"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="strikethrough"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.429 16c.321 0 .571.25.571.571v1.143c0 .321-.25.571-.571.571H.572a.564.564 0 01-.571-.571v-1.143c0-.321.25-.571.571-.571h30.857zM8.625 14.857a8.906 8.906 0 01-.911-1.429c-.571-1.161-.857-2.286-.857-3.357 0-2.179.804-4 2.393-5.518s3.929-2.268 7.018-2.268c.679 0 1.661.125 2.982.339.786.143 1.839.429 3.161.857.125.464.25 1.179.375 2.107.161 1.411.25 2.5.25 3.268 0 .25-.036.518-.089.804l-.214.054-1.5-.107-.25-.036c-.607-1.804-1.232-3.018-1.839-3.661-1.054-1.089-2.321-1.625-3.75-1.625-1.357 0-2.446.357-3.25 1.054s-1.196 1.571-1.196 2.607c0 .875.393 1.696 1.179 2.5s2.446 1.571 4.982 2.304c.857.25 1.875.643 3.089 1.179.643.304 1.214.607 1.696.929H8.626zm9.054 4.572h7.339c.089.5.125 1.054.125 1.643a9.983 9.983 0 01-.732 3.786c-.268.661-.679 1.268-1.268 1.857-.429.411-1.071.893-1.946 1.446-.893.536-1.786.946-2.732 1.179-.946.25-2.143.375-3.625.375-.982 0-2.161-.036-3.482-.411l-2.5-.714c-.696-.196-1.107-.357-1.286-.5a.538.538 0 01-.143-.393v-.232c0-.143.036-1.071-.036-2.786-.036-.893.036-1.518.036-1.875v-.786l1.821-.036c.661 1.518.964 2.429 1.161 2.75.429.696.911 1.25 1.429 1.679s1.143.768 1.875 1.018c.714.268 1.518.393 2.357.393.75 0 1.589-.161 2.482-.482.911-.304 1.643-.821 2.179-1.536.554-.714.839-1.482.839-2.304 0-1-.482-1.929-1.446-2.804-.393-.339-1.214-.768-2.446-1.268z"
                                                />
                                              </svg>
                                            </ForwardRef(Strikethrough)>
                                          </Icon>
                                        </Strikethrough>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="superscript"
                                  icon={<Superscript />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Superscript />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Superscript>
                                          <Icon
                                            aria-label="superscript"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Superscript)
                                              aria-hidden={true}
                                              aria-label="superscript"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="superscript"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 27 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M16.018 24.446v2.982h-4.429l-2.839-4.5-.429-.75a.944.944 0 01-.196-.375h-.054c-.036.125-.107.25-.161.375-.107.214-.268.5-.446.786l-2.768 4.464H.089v-2.982h2.286l3.518-5.196-3.304-4.857H.143v-3h4.929l2.482 4.071c.161.25.286.518.411.75.107.125.161.25.196.375h.054c.036-.125.107-.25.196-.375l.446-.75 2.5-4.071h4.589v3h-2.232l-3.286 4.768 3.643 5.286h1.946zm11.375-12.125V16h-9.179l-.054-.482a6.6 6.6 0 01-.071-.821c0-4.875 6.25-5.286 6.25-7.875 0-.929-.839-1.554-1.786-1.554-.679 0-1.286.321-1.732.696a5.742 5.742 0 00-.643.679L18.303 5a5.883 5.883 0 011.125-1.179 5.296 5.296 0 013.357-1.161c2.589 0 4.393 1.518 4.393 3.893 0 4.286-5.929 4.643-6.179 7.196h4.143V12.32h2.25z"
                                                />
                                              </svg>
                                            </ForwardRef(Superscript)>
                                          </Icon>
                                        </Superscript>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="subscript"
                                  icon={<Subscript />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Subscript />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Subscript>
                                          <Icon
                                            aria-label="subscript"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Subscript)
                                              aria-hidden={true}
                                              aria-label="subscript"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="subscript"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 28 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M16.018 24.446v2.982h-4.429l-2.839-4.5-.429-.75a.944.944 0 01-.196-.375h-.054c-.036.125-.107.25-.161.375-.107.214-.268.5-.446.786l-2.768 4.464H.089v-2.982h2.286l3.518-5.196-3.304-4.857H.143v-3h4.929l2.482 4.071c.161.25.286.518.411.75.107.125.161.25.196.375h.054c.036-.125.107-.25.196-.375l.446-.75 2.5-4.071h4.589v3h-2.232l-3.286 4.768 3.643 5.286h1.946zm11.411 3.875V32H18.25l-.071-.482c-.018-.268-.054-.589-.054-.821 0-4.875 6.25-5.286 6.25-7.875 0-.929-.839-1.554-1.786-1.554-.696 0-1.286.321-1.732.696a5.742 5.742 0 00-.643.679L18.339 21a5.883 5.883 0 011.125-1.179c.75-.607 1.839-1.161 3.357-1.161 2.589 0 4.393 1.518 4.393 3.893 0 4.268-5.929 4.625-6.179 7.196h4.143V28.32h2.25z"
                                                />
                                              </svg>
                                            </ForwardRef(Subscript)>
                                          </Icon>
                                        </Subscript>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <ForwardRef
                                  format="link"
                                  icon={<Link />}
                                >
                                  <Whisper
                                    placement="top"
                                    speaker={
                                      <Popover>
                                        <LinkMenu />
                                      </Popover>
                                    }
                                    trigger="none"
                                  >
                                    <OverlayTrigger
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <LinkMenu />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <ForwardRef
                                        active={false}
                                        onMouseDown={[Function]}
                                      >
                                        <button
                                          className="icon-button"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "border": "#00000000 1px solid",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "15px",
                                              }
                                            }
                                          >
                                            <Link>
                                              <Icon
                                                aria-label="link"
                                                as={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                data-category="legacy"
                                                fill="currentColor"
                                                height="1em"
                                                width="1em"
                                              >
                                                <ForwardRef(Link)
                                                  aria-hidden={true}
                                                  aria-label="link"
                                                  className="rs-icon"
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  focusable={false}
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-label="link"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    viewBox="0 0 30 32"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                    />
                                                  </svg>
                                                </ForwardRef(Link)>
                                              </Icon>
                                            </Link>
                                          </div>
                                        </button>
                                      </ForwardRef>
                                      <Component>
                                        <Portal
                                          containerInfo={<body />}
                                        >
                                          <Overlay
                                            childrenProps={
                                              Object {
                                                "id": undefined,
                                              }
                                            }
                                            placement="top"
                                            rootClose={true}
                                            triggerTarget={
                                              Object {
                                                "current": <button
                                                  class="icon-button"
                                                  style="border: 1px solid #00000000;"
                                                >
                                                  <div
                                                    style="min-width: 15px;"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      aria-label="link"
                                                      class="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      viewBox="0 0 30 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                      />
                                                    </svg>
                                                  </div>
                                                </button>,
                                              }
                                            }
                                          />
                                        </Portal>
                                      </Component>
                                    </OverlayTrigger>
                                  </Whisper>
                                </ForwardRef>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <ForwardRef
                                  icon={<SmileO />}
                                >
                                  <Whisper
                                    placement="top"
                                    speaker={
                                      <Popover>
                                        <EmojiPicker
                                          setEmoji={[Function]}
                                        />
                                      </Popover>
                                    }
                                    trigger="none"
                                  >
                                    <OverlayTrigger
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <EmojiPicker
                                            setEmoji={[Function]}
                                          />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <ForwardRef
                                        active={false}
                                        onMouseDown={[Function]}
                                      >
                                        <button
                                          className="icon-button"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "border": "#00000000 1px solid",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "15px",
                                              }
                                            }
                                          >
                                            <SmileO>
                                              <Icon
                                                aria-label="smile o"
                                                as={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                data-category="legacy"
                                                fill="currentColor"
                                                height="1em"
                                                width="1em"
                                              >
                                                <ForwardRef(SmileO)
                                                  aria-hidden={true}
                                                  aria-label="smile o"
                                                  className="rs-icon"
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  focusable={false}
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-label="smile o"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    viewBox="0 0 27 32"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M20.25 19.196C19.357 22.071 16.732 24 13.714 24s-5.643-1.929-6.536-4.804c-.196-.607.143-1.232.75-1.429.589-.196 1.232.143 1.429.75a4.543 4.543 0 004.357 3.196c2 0 3.768-1.286 4.357-3.196a1.15 1.15 0 011.446-.75c.589.196.929.821.732 1.429zm-8.821-7.767c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zm9.142 0c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zM25.143 16c0-6.304-5.125-11.429-11.429-11.429S2.285 9.696 2.285 16 7.41 27.429 13.714 27.429 25.143 22.304 25.143 16zm2.286 0c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SmileO)>
                                              </Icon>
                                            </SmileO>
                                          </div>
                                        </button>
                                      </ForwardRef>
                                      <Component>
                                        <Portal
                                          containerInfo={<body />}
                                        >
                                          <Overlay
                                            childrenProps={
                                              Object {
                                                "id": undefined,
                                              }
                                            }
                                            placement="top"
                                            rootClose={true}
                                            triggerTarget={
                                              Object {
                                                "current": <button
                                                  class="icon-button"
                                                  style="border: 1px solid #00000000;"
                                                >
                                                  <div
                                                    style="min-width: 15px;"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      aria-label="smile o"
                                                      class="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      viewBox="0 0 27 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M20.25 19.196C19.357 22.071 16.732 24 13.714 24s-5.643-1.929-6.536-4.804c-.196-.607.143-1.232.75-1.429.589-.196 1.232.143 1.429.75a4.543 4.543 0 004.357 3.196c2 0 3.768-1.286 4.357-3.196a1.15 1.15 0 011.446-.75c.589.196.929.821.732 1.429zm-8.821-7.767c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zm9.142 0c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zM25.143 16c0-6.304-5.125-11.429-11.429-11.429S2.285 9.696 2.285 16 7.41 27.429 13.714 27.429 25.143 22.304 25.143 16zm2.286 0c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                                      />
                                                    </svg>
                                                  </div>
                                                </button>,
                                              }
                                            }
                                          />
                                        </Portal>
                                      </Component>
                                    </OverlayTrigger>
                                  </Whisper>
                                </ForwardRef>
                              </div>
                            </div>
                          </div>
                        </Toolbar>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "color": "#cad5e4",
                            }
                          }
                        >
                          blocks.richText.startWriting
                        </div>
                        <Editable
                          onBlur={[Function]}
                          onKeyDown={[Function]}
                          readOnly={false}
                          renderElement={[Function]}
                          renderLeaf={[Function]}
                        >
                          <div
                            contentEditable={true}
                            data-gramm={false}
                            data-slate-editor={true}
                            data-slate-node="value"
                            onBeforeInput={[Function]}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onCopy={[Function]}
                            onCut={[Function]}
                            onDragOver={[Function]}
                            onDragStart={[Function]}
                            onDrop={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onPaste={[Function]}
                            role="textbox"
                            style={
                              Object {
                                "outline": "none",
                                "whiteSpace": "pre-wrap",
                                "wordWrap": "break-word",
                              }
                            }
                            suppressContentEditableWarning={true}
                          >
                            <Children
                              decorate={[Function]}
                              decorations={Array []}
                              node={
                                Object {
                                  "addMark": [Function],
                                  "apply": [Function],
                                  "children": Array [
                                    Object {
                                      "children": Array [
                                        Object {
                                          "text": "",
                                        },
                                      ],
                                      "type": "paragraph",
                                    },
                                  ],
                                  "deleteBackward": [Function],
                                  "deleteForward": [Function],
                                  "deleteFragment": [Function],
                                  "getFragment": [Function],
                                  "history": Object {
                                    "redos": Array [],
                                    "undos": Array [],
                                  },
                                  "insertBreak": [Function],
                                  "insertData": [Function],
                                  "insertFragment": [Function],
                                  "insertNode": [Function],
                                  "insertText": [Function],
                                  "isInline": [Function],
                                  "isVoid": [Function],
                                  "marks": null,
                                  "normalizeNode": [Function],
                                  "onChange": [Function],
                                  "operations": Array [],
                                  "redo": [Function],
                                  "removeMark": [Function],
                                  "selection": null,
                                  "setFragmentData": [Function],
                                  "undo": [Function],
                                }
                              }
                              renderElement={[Function]}
                              renderLeaf={[Function]}
                              selection={null}
                            >
                              <Element
                                decorate={[Function]}
                                decorations={Array []}
                                element={
                                  Object {
                                    "children": Array [
                                      Object {
                                        "text": "",
                                      },
                                    ],
                                    "type": "paragraph",
                                  }
                                }
                                key="8"
                                renderElement={[Function]}
                                renderLeaf={[Function]}
                                selection={null}
                              >
                                <p
                                  data-slate-node="element"
                                >
                                  <Children
                                    decorate={[Function]}
                                    decorations={Array []}
                                    node={
                                      Object {
                                        "children": Array [
                                          Object {
                                            "text": "",
                                          },
                                        ],
                                        "type": "paragraph",
                                      }
                                    }
                                    renderElement={[Function]}
                                    renderLeaf={[Function]}
                                    selection={null}
                                  >
                                    <Text
                                      decorations={Array []}
                                      isLast={true}
                                      key="9"
                                      parent={
                                        Object {
                                          "children": Array [
                                            Object {
                                              "text": "",
                                            },
                                          ],
                                          "type": "paragraph",
                                        }
                                      }
                                      renderLeaf={[Function]}
                                      text={
                                        Object {
                                          "text": "",
                                        }
                                      }
                                    >
                                      <span
                                        data-slate-node="text"
                                      >
                                        <Leaf
                                          isLast={true}
                                          key="9-0"
                                          leaf={
                                            Object {
                                              "text": "",
                                            }
                                          }
                                          parent={
                                            Object {
                                              "children": Array [
                                                Object {
                                                  "text": "",
                                                },
                                              ],
                                              "type": "paragraph",
                                            }
                                          }
                                          renderLeaf={[Function]}
                                          text={
                                            Object {
                                              "text": "",
                                            }
                                          }
                                        >
                                          <span
                                            data-slate-leaf={true}
                                          >
                                            <String
                                              isLast={true}
                                              leaf={
                                                Object {
                                                  "text": "",
                                                }
                                              }
                                              parent={
                                                Object {
                                                  "children": Array [
                                                    Object {
                                                      "text": "",
                                                    },
                                                  ],
                                                  "type": "paragraph",
                                                }
                                              }
                                              text={
                                                Object {
                                                  "text": "",
                                                }
                                              }
                                            >
                                              <ZeroWidthString
                                                isLineBreak={true}
                                              >
                                                <span
                                                  data-slate-length={0}
                                                  data-slate-zero-width="n"
                                                >
                                                  ﻿
                                                  <br />
                                                </span>
                                              </ZeroWidthString>
                                            </String>
                                          </span>
                                        </Leaf>
                                      </span>
                                    </Text>
                                  </Children>
                                </p>
                              </Element>
                            </Children>
                          </div>
                        </Editable>
                      </Slate>
                    </Memo(RichTextBlock)>
                  </div>
                </div>
              </div>
            </Panel>
          </div>
        </PanelGroup>
      </div>
    </ModalBody>
  </DrawerBody>
  <Drawer
    onClose={[Function]}
    open={false}
    size="sm"
  >
    <Modal
      animation={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      animationProps={
        Object {
          "placement": "right",
        }
      }
      className="rs-drawer-right"
      classPrefix="drawer"
      drawer={true}
      onClose={[Function]}
      open={false}
      size="sm"
    >
      <OverlayModal
        animationProps={
          Object {
            "placement": "right",
          }
        }
        backdrop={true}
        backdropClassName="rs-drawer-backdrop"
        backdropTransitionTimeout={150}
        className="rs-drawer-wrapper"
        containerClassName="rs-drawer-has-backdrop"
        dialogTransitionTimeout={300}
        onClick={[Function]}
        onClose={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExited={[Function]}
        open={false}
        transition={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
      />
    </Modal>
  </Drawer>
  <Drawer
    open={false}
    size="sm"
  >
    <Modal
      animation={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      animationProps={
        Object {
          "placement": "right",
        }
      }
      className="rs-drawer-right"
      classPrefix="drawer"
      drawer={true}
      open={false}
      size="sm"
    >
      <OverlayModal
        animationProps={
          Object {
            "placement": "right",
          }
        }
        backdrop={true}
        backdropClassName="rs-drawer-backdrop"
        backdropTransitionTimeout={150}
        className="rs-drawer-wrapper"
        containerClassName="rs-drawer-has-backdrop"
        dialogTransitionTimeout={300}
        onClick={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExited={[Function]}
        open={false}
        transition={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
      />
    </Modal>
  </Drawer>
</AuthorEditPanel>
`;

exports[`Author Edit Panel should fill the link field 1`] = `
<AuthorEditPanel>
  <DrawerHeader>
    <ModalHeader
      classPrefix="drawer-header"
    >
      <div
        className="rs-drawer-header"
      >
        <CloseButton
          className="rs-drawer-header-close"
        >
          <span
            aria-label="Close"
            className="rs-drawer-header-close rs-btn-close"
            role="button"
            title="Close"
          >
            <Close>
              <Icon
                aria-label="close"
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                data-category="application"
                fill="currentColor"
                height="1em"
                width="1em"
              >
                <ForwardRef(Close)
                  aria-hidden={true}
                  aria-label="close"
                  className="rs-icon"
                  data-category="application"
                  fill="currentColor"
                  focusable={false}
                  height="1em"
                  width="1em"
                >
                  <svg
                    aria-hidden={true}
                    aria-label="close"
                    className="rs-icon"
                    data-category="application"
                    fill="currentColor"
                    focusable={false}
                    height="1em"
                    viewBox="0 0 16 16"
                    width="1em"
                  >
                    <path
                      d="M2.784 2.089l.069.058 5.146 5.147 5.146-5.147a.5.5 0 01.765.638l-.058.069L8.705 8l5.147 5.146a.5.5 0 01-.638.765l-.069-.058-5.146-5.147-5.146 5.147a.5.5 0 01-.765-.638l.058-.069L7.293 8 2.146 2.854a.5.5 0 01.638-.765z"
                    />
                  </svg>
                </ForwardRef(Close)>
              </Icon>
            </Close>
          </span>
        </CloseButton>
        <DrawerTitle>
          <Modal.Title
            classPrefix="drawer-title"
          >
            <h4
              className="rs-drawer-title"
            >
              authors.panels.createAuthor
            </h4>
          </Modal.Title>
        </DrawerTitle>
        <DrawerActions>
          <ModalFooter
            classPrefix="drawer-actions"
          >
            <div
              className="rs-drawer-actions"
            >
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
              >
                <button
                  aria-disabled={false}
                  className="rs-btn rs-btn-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.create
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
              <Button
                appearance="subtle"
                onClick={[Function]}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.close
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
            </div>
          </ModalFooter>
        </DrawerActions>
      </div>
    </ModalHeader>
  </DrawerHeader>
  <DrawerBody>
    <ModalBody
      classPrefix="drawer-body"
    >
      <div
        className="rs-drawer-body"
        style={Object {}}
      >
        <PanelGroup>
          <div
            className="rs-panel-group"
          >
            <Panel>
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <Form
                    fluid={true}
                  >
                    <form
                      className="rs-form rs-form-vertical rs-form-fluid"
                      onSubmit={[Function]}
                    >
                      <FormGroup>
                        <div
                          className="rs-form-group"
                          role="group"
                        >
                          <FormControlLabel>
                            <label
                              className="rs-form-control-label"
                              id={null}
                            >
                              authors.panels.name
                            </label>
                          </FormControlLabel>
                          <FormControl
                            disabled={false}
                            name="authors.panels.name"
                            onChange={[Function]}
                            value=""
                          >
                            <div
                              className="rs-form-control rs-form-control-wrapper"
                            >
                              <Input
                                aria-describedby={null}
                                aria-labelledby={null}
                                disabled={false}
                                name="authors.panels.name"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <input
                                  aria-describedby={null}
                                  aria-labelledby={null}
                                  className="rs-input"
                                  disabled={false}
                                  name="authors.panels.name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </Input>
                              <FormErrorMessage
                                aria-relevant="all"
                                className="rs-form-control-message-wrapper"
                                id="undefined-error-message"
                                placement="bottomStart"
                                role="alert"
                                show={false}
                              />
                            </div>
                          </FormControl>
                        </div>
                      </FormGroup>
                      <FormGroup>
                        <div
                          className="rs-form-group"
                          role="group"
                        >
                          <FormControlLabel>
                            <label
                              className="rs-form-control-label"
                              id={null}
                            >
                              authors.panels.jobTitle
                            </label>
                          </FormControlLabel>
                          <FormControl
                            disabled={false}
                            name="authors.panels.jobTitle"
                            onChange={[Function]}
                            value=""
                          >
                            <div
                              className="rs-form-control rs-form-control-wrapper"
                            >
                              <Input
                                aria-describedby={null}
                                aria-labelledby={null}
                                disabled={false}
                                name="authors.panels.jobTitle"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <input
                                  aria-describedby={null}
                                  aria-labelledby={null}
                                  className="rs-input"
                                  disabled={false}
                                  name="authors.panels.jobTitle"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </Input>
                              <FormErrorMessage
                                aria-relevant="all"
                                className="rs-form-control-message-wrapper"
                                id="undefined-error-message"
                                placement="bottomStart"
                                role="alert"
                                show={false}
                              />
                            </div>
                          </FormControl>
                        </div>
                      </FormGroup>
                    </form>
                  </Form>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.image"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.image
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <ChooseEditImage
                    disabled={false}
                    header=""
                    left={0}
                    openChooseModalOpen={[Function]}
                    openEditModalOpen={[Function]}
                    removeImage={[Function]}
                    top={0}
                  >
                    <Panel
                      bodyFill={true}
                      header=""
                    >
                      <div
                        className="rs-panel"
                      >
                        <div
                          className="rs-panel-body rs-panel-body-fill"
                          role="region"
                        >
                          <PlaceholderInput
                            onAddClick={[Function]}
                          >
                            <div
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#f7f9fa",
                                  "display": "flex",
                                  "flexDirection": "column",
                                  "height": "100%",
                                  "justifyContent": "center",
                                  "maxHeight": 450,
                                  "width": "100%",
                                }
                              }
                            >
                              <IconButton
                                icon={<PlusCircle />}
                                onClick={[Function]}
                                size="sm"
                              >
                                <Button
                                  className="rs-btn-icon rs-btn-icon-placement-left"
                                  onClick={[Function]}
                                  size="sm"
                                >
                                  <button
                                    className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default rs-btn-sm"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <PlusCircle>
                                      <Icon
                                        aria-label="plus circle"
                                        as={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          }
                                        }
                                        data-category="legacy"
                                        fill="currentColor"
                                        height="1em"
                                        width="1em"
                                      >
                                        <ForwardRef(PlusCircle)
                                          aria-hidden={true}
                                          aria-label="plus circle"
                                          className="rs-icon"
                                          data-category="legacy"
                                          fill="currentColor"
                                          focusable={false}
                                          height="1em"
                                          width="1em"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-label="plus circle"
                                            className="rs-icon"
                                            data-category="legacy"
                                            fill="currentColor"
                                            focusable={false}
                                            height="1em"
                                            viewBox="0 0 27 32"
                                            width="1em"
                                          >
                                            <path
                                              d="M21.714 17.143v-2.286c0-.625-.518-1.143-1.143-1.143H16V9.143C16 8.518 15.482 8 14.857 8h-2.286c-.625 0-1.143.518-1.143 1.143v4.571H6.857c-.625 0-1.143.518-1.143 1.143v2.286c0 .625.518 1.143 1.143 1.143h4.571v4.571c0 .625.518 1.143 1.143 1.143h2.286c.625 0 1.143-.518 1.143-1.143v-4.571h4.571c.625 0 1.143-.518 1.143-1.143zM27.429 16c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                            />
                                          </svg>
                                        </ForwardRef(PlusCircle)>
                                      </Icon>
                                    </PlusCircle>
                                    <Ripple>
                                      <span
                                        className="rs-ripple-pond"
                                      >
                                        <Transition
                                          enteringClassName="rs-ripple-rippling"
                                          in={false}
                                          onEntered={[Function]}
                                          timeout={1000}
                                        >
                                          <span
                                            className="rs-ripple"
                                          />
                                        </Transition>
                                      </span>
                                    </Ripple>
                                  </button>
                                </Button>
                              </IconButton>
                            </div>
                          </PlaceholderInput>
                        </div>
                      </div>
                    </Panel>
                  </ChooseEditImage>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.links"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.links
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <ListInput
                    defaultValue={
                      Object {
                        "title": "",
                        "url": "",
                      }
                    }
                    onChange={[Function]}
                    value={
                      Array [
                        Object {
                          "id": "fakeNanoid1",
                          "value": Object {
                            "title": "",
                            "url": "",
                          },
                        },
                      ]
                    }
                  >
                    <div>
                      <Component
                        defaultValue={
                          Object {
                            "title": "",
                            "url": "",
                          }
                        }
                        onChange={[Function]}
                        onSortEnd={[Function]}
                        useDragHandle={true}
                        value={
                          Array [
                            Object {
                              "id": "fakeNanoid1",
                              "value": Object {
                                "title": "",
                                "url": "",
                              },
                            },
                          ]
                        }
                      >
                        <div>
                          <Component
                            index={0}
                            itemIndex={0}
                            key="fakeNanoid1"
                            onChange={[Function]}
                            onRemove={[Function]}
                            value={
                              Object {
                                "id": "fakeNanoid1",
                                "value": Object {
                                  "title": "",
                                  "url": "",
                                },
                              }
                            }
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                  "flexDirection": "row",
                                  "marginBottom": "10px",
                                }
                              }
                            >
                              <div
                                style={
                                  Object {
                                    "marginRight": "10px",
                                  }
                                }
                              >
                                <Component>
                                  <IconButton
                                    icon={<Th2 />}
                                  >
                                    <Button
                                      className="rs-btn-icon rs-btn-icon-placement-left"
                                    >
                                      <button
                                        className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default"
                                        type="button"
                                      >
                                        <Th2>
                                          <Icon
                                            aria-label="th 2"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Th2)
                                              aria-hidden={true}
                                              aria-label="th 2"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="th 2"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M0 0h8v8.005H0V0zM12 0h8v8.005h-8V0zM24 0h8v8.005h-8V0zM0 11.998h8v8.005H0v-8.005zM12 11.998h8v8.005h-8v-8.005zM24 11.998h8v8.005h-8v-8.005zM0 23.995h8V32H0v-8.005zM12 23.995h8V32h-8v-8.005zM24 23.995h8V32h-8v-8.005z"
                                                />
                                              </svg>
                                            </ForwardRef(Th2)>
                                          </Icon>
                                        </Th2>
                                        <Ripple>
                                          <span
                                            className="rs-ripple-pond"
                                          >
                                            <Transition
                                              enteringClassName="rs-ripple-rippling"
                                              in={false}
                                              onEntered={[Function]}
                                              timeout={1000}
                                            >
                                              <span
                                                className="rs-ripple"
                                              />
                                            </Transition>
                                          </span>
                                        </Ripple>
                                      </button>
                                    </Button>
                                  </IconButton>
                                </Component>
                              </div>
                              <Panel
                                bodyFill={true}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <div
                                  className="rs-panel"
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <div
                                    className="rs-panel-body rs-panel-body-fill"
                                    role="region"
                                  >
                                    <div
                                      style={
                                        Object {
                                          "minHeight": "100%",
                                        }
                                      }
                                    >
                                      <div
                                        style={
                                          Object {
                                            "display": "flex",
                                            "flexDirection": "row",
                                          }
                                        }
                                      >
                                        <Input
                                          onChange={[Function]}
                                          placeholder="authors.panels.title"
                                          style={
                                            Object {
                                              "marginRight": "10px",
                                              "width": "30%",
                                            }
                                          }
                                          value=""
                                        >
                                          <input
                                            className="rs-input"
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="authors.panels.title"
                                            style={
                                              Object {
                                                "marginRight": "10px",
                                                "width": "30%",
                                              }
                                            }
                                            type="text"
                                            value="abcd"
                                          />
                                        </Input>
                                        <InputGroup
                                          inside={true}
                                        >
                                          <div
                                            className="rs-input-group rs-input-group-inside"
                                          >
                                            <InputGroupAddon>
                                              <span
                                                className="rs-input-group-addon"
                                              >
                                                <Link>
                                                  <Icon
                                                    aria-label="link"
                                                    as={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      }
                                                    }
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    height="1em"
                                                    width="1em"
                                                  >
                                                    <ForwardRef(Link)
                                                      aria-hidden={true}
                                                      aria-label="link"
                                                      className="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable={false}
                                                      height="1em"
                                                      width="1em"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-label="link"
                                                        className="rs-icon"
                                                        data-category="legacy"
                                                        fill="currentColor"
                                                        focusable={false}
                                                        height="1em"
                                                        viewBox="0 0 30 32"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(Link)>
                                                  </Icon>
                                                </Link>
                                              </span>
                                            </InputGroupAddon>
                                            <Input
                                              onChange={[Function]}
                                              placeholder="authors.panels.link"
                                              style={
                                                Object {
                                                  "width": "70%",
                                                }
                                              }
                                              value=""
                                            >
                                              <input
                                                className="rs-input"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="authors.panels.link"
                                                style={
                                                  Object {
                                                    "width": "70%",
                                                  }
                                                }
                                                type="text"
                                                value=""
                                              />
                                            </Input>
                                          </div>
                                        </InputGroup>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </Panel>
                              <div
                                style={
                                  Object {
                                    "marginLeft": "10px",
                                  }
                                }
                              >
                                <IconButton
                                  icon={<Trash />}
                                  onClick={[Function]}
                                >
                                  <Button
                                    className="rs-btn-icon rs-btn-icon-placement-left"
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <Trash>
                                        <Icon
                                          aria-label="trash"
                                          as={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            }
                                          }
                                          data-category="legacy"
                                          fill="currentColor"
                                          height="1em"
                                          width="1em"
                                        >
                                          <ForwardRef(Trash)
                                            aria-hidden={true}
                                            aria-label="trash"
                                            className="rs-icon"
                                            data-category="legacy"
                                            fill="currentColor"
                                            focusable={false}
                                            height="1em"
                                            width="1em"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-label="trash"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              viewBox="0 0 25 32"
                                              width="1em"
                                            >
                                              <path
                                                d="M9.143 24.571V12a.564.564 0 00-.571-.571H7.429a.564.564 0 00-.571.571v12.571c0 .321.25.571.571.571h1.143c.321 0 .571-.25.571-.571zm4.571 0V12a.564.564 0 00-.571-.571H12a.564.564 0 00-.571.571v12.571c0 .321.25.571.571.571h1.143c.321 0 .571-.25.571-.571zm4.572 0V12a.564.564 0 00-.571-.571h-1.143a.564.564 0 00-.571.571v12.571c0 .321.25.571.571.571h1.143c.321 0 .571-.25.571-.571zM8.571 6.857h8l-.857-2.089a.684.684 0 00-.304-.196H9.749a.608.608 0 00-.304.196zm16.572.572v1.143c0 .321-.25.571-.571.571h-1.714v16.929c0 1.964-1.286 3.643-2.857 3.643H5.144c-1.571 0-2.857-1.607-2.857-3.571v-17H.573a.564.564 0 01-.571-.571V7.43c0-.321.25-.571.571-.571h5.518l1.25-2.982c.357-.875 1.429-1.589 2.375-1.589h5.714c.946 0 2.018.714 2.375 1.589l1.25 2.982h5.518c.321 0 .571.25.571.571z"
                                              />
                                            </svg>
                                          </ForwardRef(Trash)>
                                        </Icon>
                                      </Trash>
                                      <Ripple>
                                        <span
                                          className="rs-ripple-pond"
                                        >
                                          <Transition
                                            enteringClassName="rs-ripple-rippling"
                                            in={false}
                                            onEntered={[Function]}
                                            timeout={1000}
                                          >
                                            <span
                                              className="rs-ripple"
                                            />
                                          </Transition>
                                        </span>
                                      </Ripple>
                                    </button>
                                  </Button>
                                </IconButton>
                              </div>
                            </div>
                          </Component>
                          <IconButton
                            icon={<PlusCircle />}
                            onClick={[Function]}
                          >
                            <Button
                              className="rs-btn-icon rs-btn-icon-placement-left"
                              onClick={[Function]}
                            >
                              <button
                                className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default"
                                onClick={[Function]}
                                type="button"
                              >
                                <PlusCircle>
                                  <Icon
                                    aria-label="plus circle"
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      }
                                    }
                                    data-category="legacy"
                                    fill="currentColor"
                                    height="1em"
                                    width="1em"
                                  >
                                    <ForwardRef(PlusCircle)
                                      aria-hidden={true}
                                      aria-label="plus circle"
                                      className="rs-icon"
                                      data-category="legacy"
                                      fill="currentColor"
                                      focusable={false}
                                      height="1em"
                                      width="1em"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-label="plus circle"
                                        className="rs-icon"
                                        data-category="legacy"
                                        fill="currentColor"
                                        focusable={false}
                                        height="1em"
                                        viewBox="0 0 27 32"
                                        width="1em"
                                      >
                                        <path
                                          d="M21.714 17.143v-2.286c0-.625-.518-1.143-1.143-1.143H16V9.143C16 8.518 15.482 8 14.857 8h-2.286c-.625 0-1.143.518-1.143 1.143v4.571H6.857c-.625 0-1.143.518-1.143 1.143v2.286c0 .625.518 1.143 1.143 1.143h4.571v4.571c0 .625.518 1.143 1.143 1.143h2.286c.625 0 1.143-.518 1.143-1.143v-4.571h4.571c.625 0 1.143-.518 1.143-1.143zM27.429 16c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                        />
                                      </svg>
                                    </ForwardRef(PlusCircle)>
                                  </Icon>
                                </PlusCircle>
                                <Ripple>
                                  <span
                                    className="rs-ripple-pond"
                                  >
                                    <Transition
                                      enteringClassName="rs-ripple-rippling"
                                      in={false}
                                      onEntered={[Function]}
                                      timeout={1000}
                                    >
                                      <span
                                        className="rs-ripple"
                                      />
                                    </Transition>
                                  </span>
                                </Ripple>
                              </button>
                            </Button>
                          </IconButton>
                        </div>
                      </Component>
                    </div>
                  </ListInput>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.bioInformation"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.bioInformation
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <div
                    className="richTextFrame"
                  >
                    <Memo(RichTextBlock)
                      onChange={[Function]}
                      value={
                        Array [
                          Object {
                            "children": Array [
                              Object {
                                "text": "",
                              },
                            ],
                            "type": "paragraph",
                          },
                        ]
                      }
                    >
                      <Slate
                        editor={
                          Object {
                            "addMark": [Function],
                            "apply": [Function],
                            "children": Array [
                              Object {
                                "children": Array [
                                  Object {
                                    "text": "",
                                  },
                                ],
                                "type": "paragraph",
                              },
                            ],
                            "deleteBackward": [Function],
                            "deleteForward": [Function],
                            "deleteFragment": [Function],
                            "getFragment": [Function],
                            "history": Object {
                              "redos": Array [],
                              "undos": Array [],
                            },
                            "insertBreak": [Function],
                            "insertData": [Function],
                            "insertFragment": [Function],
                            "insertNode": [Function],
                            "insertText": [Function],
                            "isInline": [Function],
                            "isVoid": [Function],
                            "marks": null,
                            "normalizeNode": [Function],
                            "onChange": [Function],
                            "operations": Array [],
                            "redo": [Function],
                            "removeMark": [Function],
                            "selection": null,
                            "setFragmentData": [Function],
                            "undo": [Function],
                          }
                        }
                        onChange={[Function]}
                        value={
                          Array [
                            Object {
                              "children": Array [
                                Object {
                                  "text": "",
                                },
                              ],
                              "type": "paragraph",
                            },
                          ]
                        }
                      >
                        <Toolbar
                          fadeOut={true}
                          onMouseDown={[Function]}
                        >
                          <div
                            onMouseDown={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "display": "flex",
                                "justifyContent": "center",
                                "marginBottom": 30,
                                "pointerEvents": "none",
                                "position": "sticky",
                                "zIndex": 1,
                              }
                            }
                          >
                            <div
                              style={
                                Object {
                                  "backgroundColor": "white",
                                  "borderRadius": 6,
                                  "padding": 5,
                                  "pointerEvents": "auto",
                                  "transitionDuration": "100ms",
                                  "transitionProperty": "opacity",
                                }
                              }
                            >
                              <div
                                style={
                                  Object {
                                    "display": "flex",
                                    "opacity": 0.5,
                                    "transitionDuration": "100ms",
                                    "transitionProperty": "opacity",
                                  }
                                }
                              >
                                <FormatButton
                                  format="heading-one"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H1Icon>
                                        <svg
                                          className="bi bi-type-h1"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M8.637 13V3.669H7.379V7.62H2.758V3.67H1.5V13h1.258V8.728h4.62V13h1.259zm5.329 0V3.669h-1.244L10.5 5.316v1.265l2.16-1.565h.062V13h1.244z"
                                          />
                                        </svg>
                                      </H1Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <FormatButton
                                  format="heading-two"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H2Icon>
                                        <svg
                                          className="bi bi-type-h2"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7.638 13V3.669H6.38V7.62H1.759V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.022-6.733v-.048c0-.889.63-1.668 1.716-1.668.957 0 1.675.608 1.675 1.572 0 .855-.554 1.504-1.067 2.085l-3.513 3.999V13H15.5v-1.094h-4.245v-.075l2.481-2.844c.875-.998 1.586-1.784 1.586-2.953 0-1.463-1.155-2.556-2.919-2.556-1.941 0-2.966 1.326-2.966 2.74v.049h1.223z"
                                          />
                                        </svg>
                                      </H2Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <FormatButton
                                  format="heading-three"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H3Icon>
                                        <svg
                                          className="bi bi-type-h3"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7.637 13V3.669H6.379V7.62H1.758V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.625-4.272h1.018c1.142 0 1.935.67 1.949 1.674.013 1.005-.78 1.737-2.01 1.73-1.08-.007-1.853-.588-1.935-1.32H9.108c.069 1.327 1.224 2.386 3.083 2.386 1.935 0 3.343-1.155 3.309-2.789-.027-1.51-1.251-2.16-2.037-2.249v-.068c.704-.123 1.764-.91 1.723-2.229-.035-1.353-1.176-2.4-2.954-2.385-1.873.006-2.857 1.162-2.898 2.358h1.196c.062-.69.711-1.299 1.696-1.299.998 0 1.695.622 1.695 1.525.007.922-.718 1.592-1.695 1.592h-.964v1.074z"
                                          />
                                        </svg>
                                      </H3Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <FormatIconButton
                                  format="unordered-list"
                                  icon={<ListUl />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<ListUl />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <ListUl>
                                          <Icon
                                            aria-label="list ul"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(ListUl)
                                              aria-hidden={true}
                                              aria-label="list ul"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="list ul"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M6.857 25.143a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zm0-9.143a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zM32 23.429v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571v-3.429c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571zM6.857 6.857a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zM32 14.286v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571v-3.429c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571zm0-9.143v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571V5.143c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571z"
                                                />
                                              </svg>
                                            </ForwardRef(ListUl)>
                                          </Icon>
                                        </ListUl>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="ordered-list"
                                  icon={<ListOl />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<ListOl />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <ListOl>
                                          <Icon
                                            aria-label="list ol"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(ListOl)
                                              aria-hidden={true}
                                              aria-label="list ol"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="list ol"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M6.804 28.929C6.804 30.893 5.268 32 3.411 32c-1.125 0-2.268-.375-3.071-1.179l1.018-1.571c.482.446 1.214.804 1.893.804.625 0 1.286-.304 1.286-1.018 0-1-1.143-1.054-1.875-1l-.464-1c.643-.821 1.232-1.732 2-2.429v-.018c-.571 0-1.161.036-1.732.036v.946H.573v-2.714h5.946v1.571l-1.696 2.054c1.196.286 1.982 1.214 1.982 2.446zm.035-11.197v2.839H.375a5.853 5.853 0 01-.107-.964c0-3.304 4.036-3.804 4.036-5.304 0-.607-.375-.929-.964-.929-.625 0-1.143.536-1.446 1.036L.376 13.356c.589-1.232 1.804-1.929 3.161-1.929 1.661 0 3.089.982 3.089 2.75 0 2.643-3.875 3.232-3.929 4.625h2.268v-1.071H6.84zM32 23.429v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571v-3.429c0-.321.25-.571.571-.571h21.714c.304 0 .571.25.571.571zM6.857 7.375v1.768H.875V7.375h1.911c0-1.446.018-2.893.018-4.339v-.214h-.036c-.196.393-.554.661-.893.964L.607 2.429 3.036.161h1.893v7.214h1.929zM32 14.286v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571v-3.429c0-.321.25-.571.571-.571h21.714c.304 0 .571.25.571.571zm0-9.143v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571V5.143c0-.304.25-.571.571-.571h21.714c.304 0 .571.268.571.571z"
                                                />
                                              </svg>
                                            </ForwardRef(ListOl)>
                                          </Icon>
                                        </ListOl>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <EditorSubMenuButton
                                  editorHasFocus={false}
                                  icon={<Table />}
                                >
                                  <ForwardRef
                                    icon={<Table />}
                                  >
                                    <Whisper
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <TableMenu />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <OverlayTrigger
                                        placement="top"
                                        speaker={
                                          <Popover>
                                            <TableMenu />
                                          </Popover>
                                        }
                                        trigger="none"
                                      >
                                        <ForwardRef
                                          active={false}
                                          onMouseDown={[Function]}
                                        >
                                          <button
                                            className="icon-button"
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "border": "#00000000 1px solid",
                                              }
                                            }
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "minWidth": "15px",
                                                }
                                              }
                                            >
                                              <Table>
                                                <Icon
                                                  aria-label="table"
                                                  as={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    }
                                                  }
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <ForwardRef(Table)
                                                    aria-hidden={true}
                                                    aria-label="table"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    width="1em"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-label="table"
                                                      className="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable={false}
                                                      height="1em"
                                                      viewBox="0 0 30 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M9.143 24.571v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zM9.143 10.857V7.428a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm-9.143-13.714V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm2.285-5.714v19.429a2.866 2.866 0 01-2.857 2.857h-24A2.866 2.866 0 010 24.572V5.143a2.866 2.866 0 012.857-2.857h24a2.866 2.866 0 012.857 2.857z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(Table)>
                                                </Icon>
                                              </Table>
                                            </div>
                                          </button>
                                        </ForwardRef>
                                        <Component>
                                          <Portal
                                            containerInfo={<body />}
                                          >
                                            <Overlay
                                              childrenProps={
                                                Object {
                                                  "id": undefined,
                                                }
                                              }
                                              open={false}
                                              placement="top"
                                              rootClose={true}
                                              triggerTarget={
                                                Object {
                                                  "current": <button
                                                    class="icon-button"
                                                    style="border: 1px solid #00000000;"
                                                  >
                                                    <div
                                                      style="min-width: 15px;"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        aria-label="table"
                                                        class="rs-icon"
                                                        data-category="legacy"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        viewBox="0 0 30 32"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M9.143 24.571v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zM9.143 10.857V7.428a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm-9.143-13.714V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm2.285-5.714v19.429a2.866 2.866 0 01-2.857 2.857h-24A2.866 2.866 0 010 24.572V5.143a2.866 2.866 0 012.857-2.857h24a2.866 2.866 0 012.857 2.857z"
                                                        />
                                                      </svg>
                                                    </div>
                                                  </button>,
                                                }
                                              }
                                            />
                                          </Portal>
                                        </Component>
                                      </OverlayTrigger>
                                    </Whisper>
                                  </ForwardRef>
                                </EditorSubMenuButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <FormatIconButton
                                  format="bold"
                                  icon={<Bold />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Bold />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Bold>
                                          <Icon
                                            aria-label="bold"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Bold)
                                              aria-hidden={true}
                                              aria-label="bold"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="bold"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 25 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M9.911 27.161c.786.339 1.643.571 2.5.571 4.071 0 6.714-1.625 6.714-5.982 0-1.107-.143-2.268-.732-3.214-1.661-2.679-4.054-2.821-6.929-2.821-.536 0-1.304 0-1.804.179 0 1.893-.018 3.786-.018 5.661 0 1.232-.161 4.571.268 5.607zm-.25-13.322c.643.107 1.304.125 1.946.125 3.679 0 6.304-1.036 6.304-5.161 0-3.482-3.089-4.679-6.071-4.679-.786 0-1.554.107-2.321.232 0 1.804.143 3.607.143 5.411 0 .946-.018 1.893-.018 2.839 0 .411 0 .821.018 1.232zM0 29.714l.036-1.679c1.143-.286 2.304-.304 3.411-.768.625-1.054.536-2.911.536-4.107 0-.393.036-17.464-.393-18.304-.268-.518-2.893-.643-3.482-.714L.037 2.66c4.25-.071 8.5-.375 12.732-.375.804 0 1.625.018 2.429.018 4.036 0 8.482 1.929 8.482 6.571 0 3.196-2.429 4.393-4.946 5.536 3.393.768 6.411 3.071 6.411 6.821 0 6.143-5.589 8.179-10.821 8.179-1.571 0-3.143-.107-4.714-.107-3.196 0-6.429.286-9.607.411z"
                                                />
                                              </svg>
                                            </ForwardRef(Bold)>
                                          </Icon>
                                        </Bold>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="italic"
                                  icon={<Italic />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Italic />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Italic>
                                          <Icon
                                            aria-label="italic"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Italic)
                                              aria-hidden={true}
                                              aria-label="italic"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="italic"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 18 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M0 29.679l.304-1.518c1.143-.357 2.375-.5 3.446-1.054.411-.518.607-1.179.732-1.804.232-1.214 4.125-18.732 4.071-20.161v-.446c-.982-.536-2.179-.393-3.25-.571l.339-1.839c2.304.107 4.643.286 6.964.286 1.893 0 3.786-.179 5.679-.286a11.878 11.878 0 01-.339 1.589c-1.232.429-2.536.625-3.75 1.107-.393.964-.482 2.018-.661 3.036-.857 4.625-2 9.25-2.946 13.839-.179.857-1.054 4.411-.982 5.161l.018.321c1.089.25 2.196.375 3.304.554a10.142 10.142 0 01-.286 1.768c-.393 0-.768.054-1.161.054-1.018 0-2.071-.339-3.089-.357-1.232-.018-2.464-.036-3.679-.036-1.589 0-3.143.268-4.714.357z"
                                                />
                                              </svg>
                                            </ForwardRef(Italic)>
                                          </Icon>
                                        </Italic>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="underline"
                                  icon={<Underline />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Underline />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Underline>
                                          <Icon
                                            aria-label="underline"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Underline)
                                              aria-hidden={true}
                                              aria-label="underline"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="underline"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 27 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M.857 3.982c-.321-.018-.589-.018-.804-.071L-.001 2.34c.232-.018.464-.018.714-.018.625 0 1.304.018 2 .071 1.679.089 2.679.125 2.964.125a81.9 81.9 0 003-.054c.964-.036 1.839-.071 2.607-.089.75 0 1.268-.018 1.536-.036l-.018.25.036 1.143v.161c-.714.107-1.446.161-2.214.161-.714 0-1.179.143-1.411.446-.161.179-.232.964-.232 2.357 0 .429.018.768.018 1.036l.018 4.089.25 5c.071 1.446.357 2.643.911 3.607.411.696.982 1.25 1.714 1.643 1.071.571 2.125.839 3.161.839 1.214 0 2.357-.161 3.411-.5a5.546 5.546 0 001.768-.911c.554-.411.946-.786 1.161-1.143a7.58 7.58 0 00.946-2.036c.25-.875.375-2.232.375-4.089 0-3.196-.232-3.286-.5-7.321l-.071-1.054c-.054-.768-.179-1.304-.429-1.571-.393-.411-.857-.625-1.375-.607l-1.786.036-.25-.054.036-1.536h1.5l3.661.179c1.214.054 2.375-.054 3.5-.179l.321.036c.071.446.107.75.107.911s-.036.339-.071.554a6.923 6.923 0 01-1.5.232c-.839.125-1.321.214-1.411.304-.161.161-.268.393-.268.732 0 .232.036.589.054 1.036 0 0 .143.321.393 7.071.089 2.696-.089 4.518-.268 5.429s-.429 1.643-.732 2.179c-.464.786-1.143 1.518-2 2.196-.875.661-1.946 1.196-3.25 1.589s-2.821.589-4.554.589c-1.964 0-3.661-.268-5.071-.821s-2.482-1.286-3.196-2.179-1.214-2.054-1.482-3.482c-.196-.982-.286-2.393-.286-4.232V8.483c0-2.25-.107-3.518-.304-3.804-.286-.411-1.161-.661-2.625-.696zm26.572 25.161V28a.564.564 0 00-.571-.571H.572A.564.564 0 00.001 28v1.143c0 .321.25.571.571.571h26.286c.321 0 .571-.25.571-.571z"
                                                />
                                              </svg>
                                            </ForwardRef(Underline)>
                                          </Icon>
                                        </Underline>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="strikethrough"
                                  icon={<Strikethrough />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Strikethrough />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Strikethrough>
                                          <Icon
                                            aria-label="strikethrough"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Strikethrough)
                                              aria-hidden={true}
                                              aria-label="strikethrough"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="strikethrough"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.429 16c.321 0 .571.25.571.571v1.143c0 .321-.25.571-.571.571H.572a.564.564 0 01-.571-.571v-1.143c0-.321.25-.571.571-.571h30.857zM8.625 14.857a8.906 8.906 0 01-.911-1.429c-.571-1.161-.857-2.286-.857-3.357 0-2.179.804-4 2.393-5.518s3.929-2.268 7.018-2.268c.679 0 1.661.125 2.982.339.786.143 1.839.429 3.161.857.125.464.25 1.179.375 2.107.161 1.411.25 2.5.25 3.268 0 .25-.036.518-.089.804l-.214.054-1.5-.107-.25-.036c-.607-1.804-1.232-3.018-1.839-3.661-1.054-1.089-2.321-1.625-3.75-1.625-1.357 0-2.446.357-3.25 1.054s-1.196 1.571-1.196 2.607c0 .875.393 1.696 1.179 2.5s2.446 1.571 4.982 2.304c.857.25 1.875.643 3.089 1.179.643.304 1.214.607 1.696.929H8.626zm9.054 4.572h7.339c.089.5.125 1.054.125 1.643a9.983 9.983 0 01-.732 3.786c-.268.661-.679 1.268-1.268 1.857-.429.411-1.071.893-1.946 1.446-.893.536-1.786.946-2.732 1.179-.946.25-2.143.375-3.625.375-.982 0-2.161-.036-3.482-.411l-2.5-.714c-.696-.196-1.107-.357-1.286-.5a.538.538 0 01-.143-.393v-.232c0-.143.036-1.071-.036-2.786-.036-.893.036-1.518.036-1.875v-.786l1.821-.036c.661 1.518.964 2.429 1.161 2.75.429.696.911 1.25 1.429 1.679s1.143.768 1.875 1.018c.714.268 1.518.393 2.357.393.75 0 1.589-.161 2.482-.482.911-.304 1.643-.821 2.179-1.536.554-.714.839-1.482.839-2.304 0-1-.482-1.929-1.446-2.804-.393-.339-1.214-.768-2.446-1.268z"
                                                />
                                              </svg>
                                            </ForwardRef(Strikethrough)>
                                          </Icon>
                                        </Strikethrough>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="superscript"
                                  icon={<Superscript />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Superscript />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Superscript>
                                          <Icon
                                            aria-label="superscript"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Superscript)
                                              aria-hidden={true}
                                              aria-label="superscript"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="superscript"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 27 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M16.018 24.446v2.982h-4.429l-2.839-4.5-.429-.75a.944.944 0 01-.196-.375h-.054c-.036.125-.107.25-.161.375-.107.214-.268.5-.446.786l-2.768 4.464H.089v-2.982h2.286l3.518-5.196-3.304-4.857H.143v-3h4.929l2.482 4.071c.161.25.286.518.411.75.107.125.161.25.196.375h.054c.036-.125.107-.25.196-.375l.446-.75 2.5-4.071h4.589v3h-2.232l-3.286 4.768 3.643 5.286h1.946zm11.375-12.125V16h-9.179l-.054-.482a6.6 6.6 0 01-.071-.821c0-4.875 6.25-5.286 6.25-7.875 0-.929-.839-1.554-1.786-1.554-.679 0-1.286.321-1.732.696a5.742 5.742 0 00-.643.679L18.303 5a5.883 5.883 0 011.125-1.179 5.296 5.296 0 013.357-1.161c2.589 0 4.393 1.518 4.393 3.893 0 4.286-5.929 4.643-6.179 7.196h4.143V12.32h2.25z"
                                                />
                                              </svg>
                                            </ForwardRef(Superscript)>
                                          </Icon>
                                        </Superscript>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="subscript"
                                  icon={<Subscript />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Subscript />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Subscript>
                                          <Icon
                                            aria-label="subscript"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Subscript)
                                              aria-hidden={true}
                                              aria-label="subscript"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="subscript"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 28 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M16.018 24.446v2.982h-4.429l-2.839-4.5-.429-.75a.944.944 0 01-.196-.375h-.054c-.036.125-.107.25-.161.375-.107.214-.268.5-.446.786l-2.768 4.464H.089v-2.982h2.286l3.518-5.196-3.304-4.857H.143v-3h4.929l2.482 4.071c.161.25.286.518.411.75.107.125.161.25.196.375h.054c.036-.125.107-.25.196-.375l.446-.75 2.5-4.071h4.589v3h-2.232l-3.286 4.768 3.643 5.286h1.946zm11.411 3.875V32H18.25l-.071-.482c-.018-.268-.054-.589-.054-.821 0-4.875 6.25-5.286 6.25-7.875 0-.929-.839-1.554-1.786-1.554-.696 0-1.286.321-1.732.696a5.742 5.742 0 00-.643.679L18.339 21a5.883 5.883 0 011.125-1.179c.75-.607 1.839-1.161 3.357-1.161 2.589 0 4.393 1.518 4.393 3.893 0 4.268-5.929 4.625-6.179 7.196h4.143V28.32h2.25z"
                                                />
                                              </svg>
                                            </ForwardRef(Subscript)>
                                          </Icon>
                                        </Subscript>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <ForwardRef
                                  format="link"
                                  icon={<Link />}
                                >
                                  <Whisper
                                    placement="top"
                                    speaker={
                                      <Popover>
                                        <LinkMenu />
                                      </Popover>
                                    }
                                    trigger="none"
                                  >
                                    <OverlayTrigger
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <LinkMenu />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <ForwardRef
                                        active={false}
                                        onMouseDown={[Function]}
                                      >
                                        <button
                                          className="icon-button"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "border": "#00000000 1px solid",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "15px",
                                              }
                                            }
                                          >
                                            <Link>
                                              <Icon
                                                aria-label="link"
                                                as={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                data-category="legacy"
                                                fill="currentColor"
                                                height="1em"
                                                width="1em"
                                              >
                                                <ForwardRef(Link)
                                                  aria-hidden={true}
                                                  aria-label="link"
                                                  className="rs-icon"
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  focusable={false}
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-label="link"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    viewBox="0 0 30 32"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                    />
                                                  </svg>
                                                </ForwardRef(Link)>
                                              </Icon>
                                            </Link>
                                          </div>
                                        </button>
                                      </ForwardRef>
                                      <Component>
                                        <Portal
                                          containerInfo={<body />}
                                        >
                                          <Overlay
                                            childrenProps={
                                              Object {
                                                "id": undefined,
                                              }
                                            }
                                            placement="top"
                                            rootClose={true}
                                            triggerTarget={
                                              Object {
                                                "current": <button
                                                  class="icon-button"
                                                  style="border: 1px solid #00000000;"
                                                >
                                                  <div
                                                    style="min-width: 15px;"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      aria-label="link"
                                                      class="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      viewBox="0 0 30 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                      />
                                                    </svg>
                                                  </div>
                                                </button>,
                                              }
                                            }
                                          />
                                        </Portal>
                                      </Component>
                                    </OverlayTrigger>
                                  </Whisper>
                                </ForwardRef>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <ForwardRef
                                  icon={<SmileO />}
                                >
                                  <Whisper
                                    placement="top"
                                    speaker={
                                      <Popover>
                                        <EmojiPicker
                                          setEmoji={[Function]}
                                        />
                                      </Popover>
                                    }
                                    trigger="none"
                                  >
                                    <OverlayTrigger
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <EmojiPicker
                                            setEmoji={[Function]}
                                          />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <ForwardRef
                                        active={false}
                                        onMouseDown={[Function]}
                                      >
                                        <button
                                          className="icon-button"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "border": "#00000000 1px solid",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "15px",
                                              }
                                            }
                                          >
                                            <SmileO>
                                              <Icon
                                                aria-label="smile o"
                                                as={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                data-category="legacy"
                                                fill="currentColor"
                                                height="1em"
                                                width="1em"
                                              >
                                                <ForwardRef(SmileO)
                                                  aria-hidden={true}
                                                  aria-label="smile o"
                                                  className="rs-icon"
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  focusable={false}
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-label="smile o"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    viewBox="0 0 27 32"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M20.25 19.196C19.357 22.071 16.732 24 13.714 24s-5.643-1.929-6.536-4.804c-.196-.607.143-1.232.75-1.429.589-.196 1.232.143 1.429.75a4.543 4.543 0 004.357 3.196c2 0 3.768-1.286 4.357-3.196a1.15 1.15 0 011.446-.75c.589.196.929.821.732 1.429zm-8.821-7.767c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zm9.142 0c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zM25.143 16c0-6.304-5.125-11.429-11.429-11.429S2.285 9.696 2.285 16 7.41 27.429 13.714 27.429 25.143 22.304 25.143 16zm2.286 0c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SmileO)>
                                              </Icon>
                                            </SmileO>
                                          </div>
                                        </button>
                                      </ForwardRef>
                                      <Component>
                                        <Portal
                                          containerInfo={<body />}
                                        >
                                          <Overlay
                                            childrenProps={
                                              Object {
                                                "id": undefined,
                                              }
                                            }
                                            placement="top"
                                            rootClose={true}
                                            triggerTarget={
                                              Object {
                                                "current": <button
                                                  class="icon-button"
                                                  style="border: 1px solid #00000000;"
                                                >
                                                  <div
                                                    style="min-width: 15px;"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      aria-label="smile o"
                                                      class="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      viewBox="0 0 27 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M20.25 19.196C19.357 22.071 16.732 24 13.714 24s-5.643-1.929-6.536-4.804c-.196-.607.143-1.232.75-1.429.589-.196 1.232.143 1.429.75a4.543 4.543 0 004.357 3.196c2 0 3.768-1.286 4.357-3.196a1.15 1.15 0 011.446-.75c.589.196.929.821.732 1.429zm-8.821-7.767c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zm9.142 0c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zM25.143 16c0-6.304-5.125-11.429-11.429-11.429S2.285 9.696 2.285 16 7.41 27.429 13.714 27.429 25.143 22.304 25.143 16zm2.286 0c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                                      />
                                                    </svg>
                                                  </div>
                                                </button>,
                                              }
                                            }
                                          />
                                        </Portal>
                                      </Component>
                                    </OverlayTrigger>
                                  </Whisper>
                                </ForwardRef>
                              </div>
                            </div>
                          </div>
                        </Toolbar>
                        <Editable
                          onBlur={[Function]}
                          onKeyDown={[Function]}
                          readOnly={false}
                          renderElement={[Function]}
                          renderLeaf={[Function]}
                        >
                          <div
                            contentEditable={true}
                            data-gramm={false}
                            data-slate-editor={true}
                            data-slate-node="value"
                            onBeforeInput={[Function]}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onCopy={[Function]}
                            onCut={[Function]}
                            onDragOver={[Function]}
                            onDragStart={[Function]}
                            onDrop={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onPaste={[Function]}
                            role="textbox"
                            style={
                              Object {
                                "outline": "none",
                                "whiteSpace": "pre-wrap",
                                "wordWrap": "break-word",
                              }
                            }
                            suppressContentEditableWarning={true}
                          >
                            <Children
                              decorate={[Function]}
                              decorations={Array []}
                              node={
                                Object {
                                  "addMark": [Function],
                                  "apply": [Function],
                                  "children": Array [
                                    Object {
                                      "children": Array [
                                        Object {
                                          "text": "",
                                        },
                                      ],
                                      "type": "paragraph",
                                    },
                                  ],
                                  "deleteBackward": [Function],
                                  "deleteForward": [Function],
                                  "deleteFragment": [Function],
                                  "getFragment": [Function],
                                  "history": Object {
                                    "redos": Array [],
                                    "undos": Array [],
                                  },
                                  "insertBreak": [Function],
                                  "insertData": [Function],
                                  "insertFragment": [Function],
                                  "insertNode": [Function],
                                  "insertText": [Function],
                                  "isInline": [Function],
                                  "isVoid": [Function],
                                  "marks": null,
                                  "normalizeNode": [Function],
                                  "onChange": [Function],
                                  "operations": Array [],
                                  "redo": [Function],
                                  "removeMark": [Function],
                                  "selection": null,
                                  "setFragmentData": [Function],
                                  "undo": [Function],
                                }
                              }
                              renderElement={[Function]}
                              renderLeaf={[Function]}
                              selection={null}
                            >
                              <Element
                                decorate={[Function]}
                                decorations={Array []}
                                element={
                                  Object {
                                    "children": Array [
                                      Object {
                                        "text": "",
                                      },
                                    ],
                                    "type": "paragraph",
                                  }
                                }
                                key="6"
                                renderElement={[Function]}
                                renderLeaf={[Function]}
                                selection={null}
                              >
                                <p
                                  data-slate-node="element"
                                >
                                  <Children
                                    decorate={[Function]}
                                    decorations={Array []}
                                    node={
                                      Object {
                                        "children": Array [
                                          Object {
                                            "text": "",
                                          },
                                        ],
                                        "type": "paragraph",
                                      }
                                    }
                                    renderElement={[Function]}
                                    renderLeaf={[Function]}
                                    selection={null}
                                  >
                                    <Text
                                      decorations={Array []}
                                      isLast={true}
                                      key="7"
                                      parent={
                                        Object {
                                          "children": Array [
                                            Object {
                                              "text": "",
                                            },
                                          ],
                                          "type": "paragraph",
                                        }
                                      }
                                      renderLeaf={[Function]}
                                      text={
                                        Object {
                                          "text": "",
                                        }
                                      }
                                    >
                                      <span
                                        data-slate-node="text"
                                      >
                                        <Leaf
                                          isLast={true}
                                          key="7-0"
                                          leaf={
                                            Object {
                                              "text": "",
                                            }
                                          }
                                          parent={
                                            Object {
                                              "children": Array [
                                                Object {
                                                  "text": "",
                                                },
                                              ],
                                              "type": "paragraph",
                                            }
                                          }
                                          renderLeaf={[Function]}
                                          text={
                                            Object {
                                              "text": "",
                                            }
                                          }
                                        >
                                          <span
                                            data-slate-leaf={true}
                                          >
                                            <String
                                              isLast={true}
                                              leaf={
                                                Object {
                                                  "text": "",
                                                }
                                              }
                                              parent={
                                                Object {
                                                  "children": Array [
                                                    Object {
                                                      "text": "",
                                                    },
                                                  ],
                                                  "type": "paragraph",
                                                }
                                              }
                                              text={
                                                Object {
                                                  "text": "",
                                                }
                                              }
                                            >
                                              <ZeroWidthString
                                                isLineBreak={true}
                                              >
                                                <span
                                                  data-slate-length={0}
                                                  data-slate-zero-width="n"
                                                >
                                                  ﻿
                                                  <br />
                                                </span>
                                              </ZeroWidthString>
                                            </String>
                                          </span>
                                        </Leaf>
                                      </span>
                                    </Text>
                                  </Children>
                                </p>
                              </Element>
                            </Children>
                          </div>
                        </Editable>
                      </Slate>
                    </Memo(RichTextBlock)>
                  </div>
                </div>
              </div>
            </Panel>
          </div>
        </PanelGroup>
      </div>
    </ModalBody>
  </DrawerBody>
  <Drawer
    onClose={[Function]}
    open={false}
    size="sm"
  >
    <Modal
      animation={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      animationProps={
        Object {
          "placement": "right",
        }
      }
      className="rs-drawer-right"
      classPrefix="drawer"
      drawer={true}
      onClose={[Function]}
      open={false}
      size="sm"
    >
      <OverlayModal
        animationProps={
          Object {
            "placement": "right",
          }
        }
        backdrop={true}
        backdropClassName="rs-drawer-backdrop"
        backdropTransitionTimeout={150}
        className="rs-drawer-wrapper"
        containerClassName="rs-drawer-has-backdrop"
        dialogTransitionTimeout={300}
        onClick={[Function]}
        onClose={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExited={[Function]}
        open={false}
        transition={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
      />
    </Modal>
  </Drawer>
  <Drawer
    open={false}
    size="sm"
  >
    <Modal
      animation={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      animationProps={
        Object {
          "placement": "right",
        }
      }
      className="rs-drawer-right"
      classPrefix="drawer"
      drawer={true}
      open={false}
      size="sm"
    >
      <OverlayModal
        animationProps={
          Object {
            "placement": "right",
          }
        }
        backdrop={true}
        backdropClassName="rs-drawer-backdrop"
        backdropTransitionTimeout={150}
        className="rs-drawer-wrapper"
        containerClassName="rs-drawer-has-backdrop"
        dialogTransitionTimeout={300}
        onClick={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExited={[Function]}
        open={false}
        transition={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
      />
    </Modal>
  </Drawer>
</AuthorEditPanel>
`;

exports[`Author Edit Panel should render 1`] = `
<AuthorEditPanel>
  <DrawerHeader>
    <ModalHeader
      classPrefix="drawer-header"
    >
      <div
        className="rs-drawer-header"
      >
        <CloseButton
          className="rs-drawer-header-close"
        >
          <span
            aria-label="Close"
            className="rs-drawer-header-close rs-btn-close"
            role="button"
            title="Close"
          >
            <Close>
              <Icon
                aria-label="close"
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                data-category="application"
                fill="currentColor"
                height="1em"
                width="1em"
              >
                <ForwardRef(Close)
                  aria-hidden={true}
                  aria-label="close"
                  className="rs-icon"
                  data-category="application"
                  fill="currentColor"
                  focusable={false}
                  height="1em"
                  width="1em"
                >
                  <svg
                    aria-hidden={true}
                    aria-label="close"
                    className="rs-icon"
                    data-category="application"
                    fill="currentColor"
                    focusable={false}
                    height="1em"
                    viewBox="0 0 16 16"
                    width="1em"
                  >
                    <path
                      d="M2.784 2.089l.069.058 5.146 5.147 5.146-5.147a.5.5 0 01.765.638l-.058.069L8.705 8l5.147 5.146a.5.5 0 01-.638.765l-.069-.058-5.146-5.147-5.146 5.147a.5.5 0 01-.765-.638l.058-.069L7.293 8 2.146 2.854a.5.5 0 01.638-.765z"
                    />
                  </svg>
                </ForwardRef(Close)>
              </Icon>
            </Close>
          </span>
        </CloseButton>
        <DrawerTitle>
          <Modal.Title
            classPrefix="drawer-title"
          >
            <h4
              className="rs-drawer-title"
            >
              authors.panels.createAuthor
            </h4>
          </Modal.Title>
        </DrawerTitle>
        <DrawerActions>
          <ModalFooter
            classPrefix="drawer-actions"
          >
            <div
              className="rs-drawer-actions"
            >
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
              >
                <button
                  aria-disabled={false}
                  className="rs-btn rs-btn-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.create
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
              <Button
                appearance="subtle"
                onClick={[Function]}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.close
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
            </div>
          </ModalFooter>
        </DrawerActions>
      </div>
    </ModalHeader>
  </DrawerHeader>
  <DrawerBody>
    <ModalBody
      classPrefix="drawer-body"
    >
      <div
        className="rs-drawer-body"
        style={Object {}}
      >
        <PanelGroup>
          <div
            className="rs-panel-group"
          >
            <Panel>
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <Form
                    fluid={true}
                  >
                    <form
                      className="rs-form rs-form-vertical rs-form-fluid"
                      onSubmit={[Function]}
                    >
                      <FormGroup>
                        <div
                          className="rs-form-group"
                          role="group"
                        >
                          <FormControlLabel>
                            <label
                              className="rs-form-control-label"
                              id={null}
                            >
                              authors.panels.name
                            </label>
                          </FormControlLabel>
                          <FormControl
                            disabled={false}
                            name="authors.panels.name"
                            onChange={[Function]}
                            value=""
                          >
                            <div
                              className="rs-form-control rs-form-control-wrapper"
                            >
                              <Input
                                aria-describedby={null}
                                aria-labelledby={null}
                                disabled={false}
                                name="authors.panels.name"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <input
                                  aria-describedby={null}
                                  aria-labelledby={null}
                                  className="rs-input"
                                  disabled={false}
                                  name="authors.panels.name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </Input>
                              <FormErrorMessage
                                aria-relevant="all"
                                className="rs-form-control-message-wrapper"
                                id="undefined-error-message"
                                placement="bottomStart"
                                role="alert"
                                show={false}
                              />
                            </div>
                          </FormControl>
                        </div>
                      </FormGroup>
                      <FormGroup>
                        <div
                          className="rs-form-group"
                          role="group"
                        >
                          <FormControlLabel>
                            <label
                              className="rs-form-control-label"
                              id={null}
                            >
                              authors.panels.jobTitle
                            </label>
                          </FormControlLabel>
                          <FormControl
                            disabled={false}
                            name="authors.panels.jobTitle"
                            onChange={[Function]}
                            value=""
                          >
                            <div
                              className="rs-form-control rs-form-control-wrapper"
                            >
                              <Input
                                aria-describedby={null}
                                aria-labelledby={null}
                                disabled={false}
                                name="authors.panels.jobTitle"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <input
                                  aria-describedby={null}
                                  aria-labelledby={null}
                                  className="rs-input"
                                  disabled={false}
                                  name="authors.panels.jobTitle"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </Input>
                              <FormErrorMessage
                                aria-relevant="all"
                                className="rs-form-control-message-wrapper"
                                id="undefined-error-message"
                                placement="bottomStart"
                                role="alert"
                                show={false}
                              />
                            </div>
                          </FormControl>
                        </div>
                      </FormGroup>
                    </form>
                  </Form>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.image"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.image
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <ChooseEditImage
                    disabled={false}
                    header=""
                    left={0}
                    openChooseModalOpen={[Function]}
                    openEditModalOpen={[Function]}
                    removeImage={[Function]}
                    top={0}
                  >
                    <Panel
                      bodyFill={true}
                      header=""
                    >
                      <div
                        className="rs-panel"
                      >
                        <div
                          className="rs-panel-body rs-panel-body-fill"
                          role="region"
                        >
                          <PlaceholderInput
                            onAddClick={[Function]}
                          >
                            <div
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#f7f9fa",
                                  "display": "flex",
                                  "flexDirection": "column",
                                  "height": "100%",
                                  "justifyContent": "center",
                                  "maxHeight": 450,
                                  "width": "100%",
                                }
                              }
                            >
                              <IconButton
                                icon={<PlusCircle />}
                                onClick={[Function]}
                                size="sm"
                              >
                                <Button
                                  className="rs-btn-icon rs-btn-icon-placement-left"
                                  onClick={[Function]}
                                  size="sm"
                                >
                                  <button
                                    className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default rs-btn-sm"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <PlusCircle>
                                      <Icon
                                        aria-label="plus circle"
                                        as={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          }
                                        }
                                        data-category="legacy"
                                        fill="currentColor"
                                        height="1em"
                                        width="1em"
                                      >
                                        <ForwardRef(PlusCircle)
                                          aria-hidden={true}
                                          aria-label="plus circle"
                                          className="rs-icon"
                                          data-category="legacy"
                                          fill="currentColor"
                                          focusable={false}
                                          height="1em"
                                          width="1em"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-label="plus circle"
                                            className="rs-icon"
                                            data-category="legacy"
                                            fill="currentColor"
                                            focusable={false}
                                            height="1em"
                                            viewBox="0 0 27 32"
                                            width="1em"
                                          >
                                            <path
                                              d="M21.714 17.143v-2.286c0-.625-.518-1.143-1.143-1.143H16V9.143C16 8.518 15.482 8 14.857 8h-2.286c-.625 0-1.143.518-1.143 1.143v4.571H6.857c-.625 0-1.143.518-1.143 1.143v2.286c0 .625.518 1.143 1.143 1.143h4.571v4.571c0 .625.518 1.143 1.143 1.143h2.286c.625 0 1.143-.518 1.143-1.143v-4.571h4.571c.625 0 1.143-.518 1.143-1.143zM27.429 16c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                            />
                                          </svg>
                                        </ForwardRef(PlusCircle)>
                                      </Icon>
                                    </PlusCircle>
                                    <Ripple>
                                      <span
                                        className="rs-ripple-pond"
                                      >
                                        <Transition
                                          enteringClassName="rs-ripple-rippling"
                                          in={false}
                                          onEntered={[Function]}
                                          timeout={1000}
                                        >
                                          <span
                                            className="rs-ripple"
                                          />
                                        </Transition>
                                      </span>
                                    </Ripple>
                                  </button>
                                </Button>
                              </IconButton>
                            </div>
                          </PlaceholderInput>
                        </div>
                      </div>
                    </Panel>
                  </ChooseEditImage>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.links"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.links
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <ListInput
                    defaultValue={
                      Object {
                        "title": "",
                        "url": "",
                      }
                    }
                    onChange={[Function]}
                    value={
                      Array [
                        Object {
                          "id": "fakeNanoid1",
                          "value": Object {
                            "title": "",
                            "url": "",
                          },
                        },
                      ]
                    }
                  >
                    <div>
                      <Component
                        defaultValue={
                          Object {
                            "title": "",
                            "url": "",
                          }
                        }
                        onChange={[Function]}
                        onSortEnd={[Function]}
                        useDragHandle={true}
                        value={
                          Array [
                            Object {
                              "id": "fakeNanoid1",
                              "value": Object {
                                "title": "",
                                "url": "",
                              },
                            },
                          ]
                        }
                      >
                        <div>
                          <Component
                            index={0}
                            itemIndex={0}
                            key="fakeNanoid1"
                            onChange={[Function]}
                            onRemove={[Function]}
                            value={
                              Object {
                                "id": "fakeNanoid1",
                                "value": Object {
                                  "title": "",
                                  "url": "",
                                },
                              }
                            }
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                  "flexDirection": "row",
                                  "marginBottom": "10px",
                                }
                              }
                            >
                              <div
                                style={
                                  Object {
                                    "marginRight": "10px",
                                  }
                                }
                              >
                                <Component>
                                  <IconButton
                                    icon={<Th2 />}
                                  >
                                    <Button
                                      className="rs-btn-icon rs-btn-icon-placement-left"
                                    >
                                      <button
                                        className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default"
                                        type="button"
                                      >
                                        <Th2>
                                          <Icon
                                            aria-label="th 2"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Th2)
                                              aria-hidden={true}
                                              aria-label="th 2"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="th 2"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M0 0h8v8.005H0V0zM12 0h8v8.005h-8V0zM24 0h8v8.005h-8V0zM0 11.998h8v8.005H0v-8.005zM12 11.998h8v8.005h-8v-8.005zM24 11.998h8v8.005h-8v-8.005zM0 23.995h8V32H0v-8.005zM12 23.995h8V32h-8v-8.005zM24 23.995h8V32h-8v-8.005z"
                                                />
                                              </svg>
                                            </ForwardRef(Th2)>
                                          </Icon>
                                        </Th2>
                                        <Ripple>
                                          <span
                                            className="rs-ripple-pond"
                                          >
                                            <Transition
                                              enteringClassName="rs-ripple-rippling"
                                              in={false}
                                              onEntered={[Function]}
                                              timeout={1000}
                                            >
                                              <span
                                                className="rs-ripple"
                                              />
                                            </Transition>
                                          </span>
                                        </Ripple>
                                      </button>
                                    </Button>
                                  </IconButton>
                                </Component>
                              </div>
                              <Panel
                                bodyFill={true}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <div
                                  className="rs-panel"
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <div
                                    className="rs-panel-body rs-panel-body-fill"
                                    role="region"
                                  >
                                    <div
                                      style={
                                        Object {
                                          "minHeight": "100%",
                                        }
                                      }
                                    >
                                      <div
                                        style={
                                          Object {
                                            "display": "flex",
                                            "flexDirection": "row",
                                          }
                                        }
                                      >
                                        <Input
                                          onChange={[Function]}
                                          placeholder="authors.panels.title"
                                          style={
                                            Object {
                                              "marginRight": "10px",
                                              "width": "30%",
                                            }
                                          }
                                          value=""
                                        >
                                          <input
                                            className="rs-input"
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="authors.panels.title"
                                            style={
                                              Object {
                                                "marginRight": "10px",
                                                "width": "30%",
                                              }
                                            }
                                            type="text"
                                            value=""
                                          />
                                        </Input>
                                        <InputGroup
                                          inside={true}
                                        >
                                          <div
                                            className="rs-input-group rs-input-group-inside"
                                          >
                                            <InputGroupAddon>
                                              <span
                                                className="rs-input-group-addon"
                                              >
                                                <Link>
                                                  <Icon
                                                    aria-label="link"
                                                    as={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      }
                                                    }
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    height="1em"
                                                    width="1em"
                                                  >
                                                    <ForwardRef(Link)
                                                      aria-hidden={true}
                                                      aria-label="link"
                                                      className="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable={false}
                                                      height="1em"
                                                      width="1em"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-label="link"
                                                        className="rs-icon"
                                                        data-category="legacy"
                                                        fill="currentColor"
                                                        focusable={false}
                                                        height="1em"
                                                        viewBox="0 0 30 32"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(Link)>
                                                  </Icon>
                                                </Link>
                                              </span>
                                            </InputGroupAddon>
                                            <Input
                                              onChange={[Function]}
                                              placeholder="authors.panels.link"
                                              style={
                                                Object {
                                                  "width": "70%",
                                                }
                                              }
                                              value=""
                                            >
                                              <input
                                                className="rs-input"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="authors.panels.link"
                                                style={
                                                  Object {
                                                    "width": "70%",
                                                  }
                                                }
                                                type="text"
                                                value=""
                                              />
                                            </Input>
                                          </div>
                                        </InputGroup>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </Panel>
                              <div
                                style={
                                  Object {
                                    "marginLeft": "10px",
                                  }
                                }
                              >
                                <IconButton
                                  icon={<Trash />}
                                  onClick={[Function]}
                                >
                                  <Button
                                    className="rs-btn-icon rs-btn-icon-placement-left"
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <Trash>
                                        <Icon
                                          aria-label="trash"
                                          as={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            }
                                          }
                                          data-category="legacy"
                                          fill="currentColor"
                                          height="1em"
                                          width="1em"
                                        >
                                          <ForwardRef(Trash)
                                            aria-hidden={true}
                                            aria-label="trash"
                                            className="rs-icon"
                                            data-category="legacy"
                                            fill="currentColor"
                                            focusable={false}
                                            height="1em"
                                            width="1em"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-label="trash"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              viewBox="0 0 25 32"
                                              width="1em"
                                            >
                                              <path
                                                d="M9.143 24.571V12a.564.564 0 00-.571-.571H7.429a.564.564 0 00-.571.571v12.571c0 .321.25.571.571.571h1.143c.321 0 .571-.25.571-.571zm4.571 0V12a.564.564 0 00-.571-.571H12a.564.564 0 00-.571.571v12.571c0 .321.25.571.571.571h1.143c.321 0 .571-.25.571-.571zm4.572 0V12a.564.564 0 00-.571-.571h-1.143a.564.564 0 00-.571.571v12.571c0 .321.25.571.571.571h1.143c.321 0 .571-.25.571-.571zM8.571 6.857h8l-.857-2.089a.684.684 0 00-.304-.196H9.749a.608.608 0 00-.304.196zm16.572.572v1.143c0 .321-.25.571-.571.571h-1.714v16.929c0 1.964-1.286 3.643-2.857 3.643H5.144c-1.571 0-2.857-1.607-2.857-3.571v-17H.573a.564.564 0 01-.571-.571V7.43c0-.321.25-.571.571-.571h5.518l1.25-2.982c.357-.875 1.429-1.589 2.375-1.589h5.714c.946 0 2.018.714 2.375 1.589l1.25 2.982h5.518c.321 0 .571.25.571.571z"
                                              />
                                            </svg>
                                          </ForwardRef(Trash)>
                                        </Icon>
                                      </Trash>
                                      <Ripple>
                                        <span
                                          className="rs-ripple-pond"
                                        >
                                          <Transition
                                            enteringClassName="rs-ripple-rippling"
                                            in={false}
                                            onEntered={[Function]}
                                            timeout={1000}
                                          >
                                            <span
                                              className="rs-ripple"
                                            />
                                          </Transition>
                                        </span>
                                      </Ripple>
                                    </button>
                                  </Button>
                                </IconButton>
                              </div>
                            </div>
                          </Component>
                          <IconButton
                            icon={<PlusCircle />}
                            onClick={[Function]}
                          >
                            <Button
                              className="rs-btn-icon rs-btn-icon-placement-left"
                              onClick={[Function]}
                            >
                              <button
                                className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default"
                                onClick={[Function]}
                                type="button"
                              >
                                <PlusCircle>
                                  <Icon
                                    aria-label="plus circle"
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      }
                                    }
                                    data-category="legacy"
                                    fill="currentColor"
                                    height="1em"
                                    width="1em"
                                  >
                                    <ForwardRef(PlusCircle)
                                      aria-hidden={true}
                                      aria-label="plus circle"
                                      className="rs-icon"
                                      data-category="legacy"
                                      fill="currentColor"
                                      focusable={false}
                                      height="1em"
                                      width="1em"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-label="plus circle"
                                        className="rs-icon"
                                        data-category="legacy"
                                        fill="currentColor"
                                        focusable={false}
                                        height="1em"
                                        viewBox="0 0 27 32"
                                        width="1em"
                                      >
                                        <path
                                          d="M21.714 17.143v-2.286c0-.625-.518-1.143-1.143-1.143H16V9.143C16 8.518 15.482 8 14.857 8h-2.286c-.625 0-1.143.518-1.143 1.143v4.571H6.857c-.625 0-1.143.518-1.143 1.143v2.286c0 .625.518 1.143 1.143 1.143h4.571v4.571c0 .625.518 1.143 1.143 1.143h2.286c.625 0 1.143-.518 1.143-1.143v-4.571h4.571c.625 0 1.143-.518 1.143-1.143zM27.429 16c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                        />
                                      </svg>
                                    </ForwardRef(PlusCircle)>
                                  </Icon>
                                </PlusCircle>
                                <Ripple>
                                  <span
                                    className="rs-ripple-pond"
                                  >
                                    <Transition
                                      enteringClassName="rs-ripple-rippling"
                                      in={false}
                                      onEntered={[Function]}
                                      timeout={1000}
                                    >
                                      <span
                                        className="rs-ripple"
                                      />
                                    </Transition>
                                  </span>
                                </Ripple>
                              </button>
                            </Button>
                          </IconButton>
                        </div>
                      </Component>
                    </div>
                  </ListInput>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.bioInformation"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.bioInformation
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <div
                    className="richTextFrame"
                  >
                    <Memo(RichTextBlock)
                      onChange={[Function]}
                      value={
                        Array [
                          Object {
                            "children": Array [
                              Object {
                                "text": "",
                              },
                            ],
                            "type": "paragraph",
                          },
                        ]
                      }
                    >
                      <Slate
                        editor={
                          Object {
                            "addMark": [Function],
                            "apply": [Function],
                            "children": Array [
                              Object {
                                "children": Array [
                                  Object {
                                    "text": "",
                                  },
                                ],
                                "type": "paragraph",
                              },
                            ],
                            "deleteBackward": [Function],
                            "deleteForward": [Function],
                            "deleteFragment": [Function],
                            "getFragment": [Function],
                            "history": Object {
                              "redos": Array [],
                              "undos": Array [],
                            },
                            "insertBreak": [Function],
                            "insertData": [Function],
                            "insertFragment": [Function],
                            "insertNode": [Function],
                            "insertText": [Function],
                            "isInline": [Function],
                            "isVoid": [Function],
                            "marks": null,
                            "normalizeNode": [Function],
                            "onChange": [Function],
                            "operations": Array [],
                            "redo": [Function],
                            "removeMark": [Function],
                            "selection": null,
                            "setFragmentData": [Function],
                            "undo": [Function],
                          }
                        }
                        onChange={[Function]}
                        value={
                          Array [
                            Object {
                              "children": Array [
                                Object {
                                  "text": "",
                                },
                              ],
                              "type": "paragraph",
                            },
                          ]
                        }
                      >
                        <Toolbar
                          fadeOut={true}
                          onMouseDown={[Function]}
                        >
                          <div
                            onMouseDown={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "display": "flex",
                                "justifyContent": "center",
                                "marginBottom": 30,
                                "pointerEvents": "none",
                                "position": "sticky",
                                "zIndex": 1,
                              }
                            }
                          >
                            <div
                              style={
                                Object {
                                  "backgroundColor": "white",
                                  "borderRadius": 6,
                                  "padding": 5,
                                  "pointerEvents": "auto",
                                  "transitionDuration": "100ms",
                                  "transitionProperty": "opacity",
                                }
                              }
                            >
                              <div
                                style={
                                  Object {
                                    "display": "flex",
                                    "opacity": 0.5,
                                    "transitionDuration": "100ms",
                                    "transitionProperty": "opacity",
                                  }
                                }
                              >
                                <FormatButton
                                  format="heading-one"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H1Icon>
                                        <svg
                                          className="bi bi-type-h1"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M8.637 13V3.669H7.379V7.62H2.758V3.67H1.5V13h1.258V8.728h4.62V13h1.259zm5.329 0V3.669h-1.244L10.5 5.316v1.265l2.16-1.565h.062V13h1.244z"
                                          />
                                        </svg>
                                      </H1Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <FormatButton
                                  format="heading-two"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H2Icon>
                                        <svg
                                          className="bi bi-type-h2"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7.638 13V3.669H6.38V7.62H1.759V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.022-6.733v-.048c0-.889.63-1.668 1.716-1.668.957 0 1.675.608 1.675 1.572 0 .855-.554 1.504-1.067 2.085l-3.513 3.999V13H15.5v-1.094h-4.245v-.075l2.481-2.844c.875-.998 1.586-1.784 1.586-2.953 0-1.463-1.155-2.556-2.919-2.556-1.941 0-2.966 1.326-2.966 2.74v.049h1.223z"
                                          />
                                        </svg>
                                      </H2Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <FormatButton
                                  format="heading-three"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H3Icon>
                                        <svg
                                          className="bi bi-type-h3"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7.637 13V3.669H6.379V7.62H1.758V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.625-4.272h1.018c1.142 0 1.935.67 1.949 1.674.013 1.005-.78 1.737-2.01 1.73-1.08-.007-1.853-.588-1.935-1.32H9.108c.069 1.327 1.224 2.386 3.083 2.386 1.935 0 3.343-1.155 3.309-2.789-.027-1.51-1.251-2.16-2.037-2.249v-.068c.704-.123 1.764-.91 1.723-2.229-.035-1.353-1.176-2.4-2.954-2.385-1.873.006-2.857 1.162-2.898 2.358h1.196c.062-.69.711-1.299 1.696-1.299.998 0 1.695.622 1.695 1.525.007.922-.718 1.592-1.695 1.592h-.964v1.074z"
                                          />
                                        </svg>
                                      </H3Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <FormatIconButton
                                  format="unordered-list"
                                  icon={<ListUl />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<ListUl />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <ListUl>
                                          <Icon
                                            aria-label="list ul"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(ListUl)
                                              aria-hidden={true}
                                              aria-label="list ul"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="list ul"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M6.857 25.143a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zm0-9.143a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zM32 23.429v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571v-3.429c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571zM6.857 6.857a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zM32 14.286v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571v-3.429c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571zm0-9.143v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571V5.143c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571z"
                                                />
                                              </svg>
                                            </ForwardRef(ListUl)>
                                          </Icon>
                                        </ListUl>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="ordered-list"
                                  icon={<ListOl />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<ListOl />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <ListOl>
                                          <Icon
                                            aria-label="list ol"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(ListOl)
                                              aria-hidden={true}
                                              aria-label="list ol"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="list ol"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M6.804 28.929C6.804 30.893 5.268 32 3.411 32c-1.125 0-2.268-.375-3.071-1.179l1.018-1.571c.482.446 1.214.804 1.893.804.625 0 1.286-.304 1.286-1.018 0-1-1.143-1.054-1.875-1l-.464-1c.643-.821 1.232-1.732 2-2.429v-.018c-.571 0-1.161.036-1.732.036v.946H.573v-2.714h5.946v1.571l-1.696 2.054c1.196.286 1.982 1.214 1.982 2.446zm.035-11.197v2.839H.375a5.853 5.853 0 01-.107-.964c0-3.304 4.036-3.804 4.036-5.304 0-.607-.375-.929-.964-.929-.625 0-1.143.536-1.446 1.036L.376 13.356c.589-1.232 1.804-1.929 3.161-1.929 1.661 0 3.089.982 3.089 2.75 0 2.643-3.875 3.232-3.929 4.625h2.268v-1.071H6.84zM32 23.429v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571v-3.429c0-.321.25-.571.571-.571h21.714c.304 0 .571.25.571.571zM6.857 7.375v1.768H.875V7.375h1.911c0-1.446.018-2.893.018-4.339v-.214h-.036c-.196.393-.554.661-.893.964L.607 2.429 3.036.161h1.893v7.214h1.929zM32 14.286v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571v-3.429c0-.321.25-.571.571-.571h21.714c.304 0 .571.25.571.571zm0-9.143v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571V5.143c0-.304.25-.571.571-.571h21.714c.304 0 .571.268.571.571z"
                                                />
                                              </svg>
                                            </ForwardRef(ListOl)>
                                          </Icon>
                                        </ListOl>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <EditorSubMenuButton
                                  editorHasFocus={false}
                                  icon={<Table />}
                                >
                                  <ForwardRef
                                    icon={<Table />}
                                  >
                                    <Whisper
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <TableMenu />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <OverlayTrigger
                                        placement="top"
                                        speaker={
                                          <Popover>
                                            <TableMenu />
                                          </Popover>
                                        }
                                        trigger="none"
                                      >
                                        <ForwardRef
                                          active={false}
                                          onMouseDown={[Function]}
                                        >
                                          <button
                                            className="icon-button"
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "border": "#00000000 1px solid",
                                              }
                                            }
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "minWidth": "15px",
                                                }
                                              }
                                            >
                                              <Table>
                                                <Icon
                                                  aria-label="table"
                                                  as={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    }
                                                  }
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <ForwardRef(Table)
                                                    aria-hidden={true}
                                                    aria-label="table"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    width="1em"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-label="table"
                                                      className="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable={false}
                                                      height="1em"
                                                      viewBox="0 0 30 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M9.143 24.571v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zM9.143 10.857V7.428a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm-9.143-13.714V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm2.285-5.714v19.429a2.866 2.866 0 01-2.857 2.857h-24A2.866 2.866 0 010 24.572V5.143a2.866 2.866 0 012.857-2.857h24a2.866 2.866 0 012.857 2.857z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(Table)>
                                                </Icon>
                                              </Table>
                                            </div>
                                          </button>
                                        </ForwardRef>
                                        <Component>
                                          <Portal
                                            containerInfo={<body />}
                                          >
                                            <Overlay
                                              childrenProps={
                                                Object {
                                                  "id": undefined,
                                                }
                                              }
                                              open={false}
                                              placement="top"
                                              rootClose={true}
                                              triggerTarget={
                                                Object {
                                                  "current": <button
                                                    class="icon-button"
                                                    style="border: 1px solid #00000000;"
                                                  >
                                                    <div
                                                      style="min-width: 15px;"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        aria-label="table"
                                                        class="rs-icon"
                                                        data-category="legacy"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        viewBox="0 0 30 32"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M9.143 24.571v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zM9.143 10.857V7.428a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm-9.143-13.714V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm2.285-5.714v19.429a2.866 2.866 0 01-2.857 2.857h-24A2.866 2.866 0 010 24.572V5.143a2.866 2.866 0 012.857-2.857h24a2.866 2.866 0 012.857 2.857z"
                                                        />
                                                      </svg>
                                                    </div>
                                                  </button>,
                                                }
                                              }
                                            />
                                          </Portal>
                                        </Component>
                                      </OverlayTrigger>
                                    </Whisper>
                                  </ForwardRef>
                                </EditorSubMenuButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <FormatIconButton
                                  format="bold"
                                  icon={<Bold />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Bold />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Bold>
                                          <Icon
                                            aria-label="bold"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Bold)
                                              aria-hidden={true}
                                              aria-label="bold"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="bold"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 25 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M9.911 27.161c.786.339 1.643.571 2.5.571 4.071 0 6.714-1.625 6.714-5.982 0-1.107-.143-2.268-.732-3.214-1.661-2.679-4.054-2.821-6.929-2.821-.536 0-1.304 0-1.804.179 0 1.893-.018 3.786-.018 5.661 0 1.232-.161 4.571.268 5.607zm-.25-13.322c.643.107 1.304.125 1.946.125 3.679 0 6.304-1.036 6.304-5.161 0-3.482-3.089-4.679-6.071-4.679-.786 0-1.554.107-2.321.232 0 1.804.143 3.607.143 5.411 0 .946-.018 1.893-.018 2.839 0 .411 0 .821.018 1.232zM0 29.714l.036-1.679c1.143-.286 2.304-.304 3.411-.768.625-1.054.536-2.911.536-4.107 0-.393.036-17.464-.393-18.304-.268-.518-2.893-.643-3.482-.714L.037 2.66c4.25-.071 8.5-.375 12.732-.375.804 0 1.625.018 2.429.018 4.036 0 8.482 1.929 8.482 6.571 0 3.196-2.429 4.393-4.946 5.536 3.393.768 6.411 3.071 6.411 6.821 0 6.143-5.589 8.179-10.821 8.179-1.571 0-3.143-.107-4.714-.107-3.196 0-6.429.286-9.607.411z"
                                                />
                                              </svg>
                                            </ForwardRef(Bold)>
                                          </Icon>
                                        </Bold>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="italic"
                                  icon={<Italic />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Italic />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Italic>
                                          <Icon
                                            aria-label="italic"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Italic)
                                              aria-hidden={true}
                                              aria-label="italic"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="italic"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 18 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M0 29.679l.304-1.518c1.143-.357 2.375-.5 3.446-1.054.411-.518.607-1.179.732-1.804.232-1.214 4.125-18.732 4.071-20.161v-.446c-.982-.536-2.179-.393-3.25-.571l.339-1.839c2.304.107 4.643.286 6.964.286 1.893 0 3.786-.179 5.679-.286a11.878 11.878 0 01-.339 1.589c-1.232.429-2.536.625-3.75 1.107-.393.964-.482 2.018-.661 3.036-.857 4.625-2 9.25-2.946 13.839-.179.857-1.054 4.411-.982 5.161l.018.321c1.089.25 2.196.375 3.304.554a10.142 10.142 0 01-.286 1.768c-.393 0-.768.054-1.161.054-1.018 0-2.071-.339-3.089-.357-1.232-.018-2.464-.036-3.679-.036-1.589 0-3.143.268-4.714.357z"
                                                />
                                              </svg>
                                            </ForwardRef(Italic)>
                                          </Icon>
                                        </Italic>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="underline"
                                  icon={<Underline />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Underline />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Underline>
                                          <Icon
                                            aria-label="underline"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Underline)
                                              aria-hidden={true}
                                              aria-label="underline"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="underline"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 27 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M.857 3.982c-.321-.018-.589-.018-.804-.071L-.001 2.34c.232-.018.464-.018.714-.018.625 0 1.304.018 2 .071 1.679.089 2.679.125 2.964.125a81.9 81.9 0 003-.054c.964-.036 1.839-.071 2.607-.089.75 0 1.268-.018 1.536-.036l-.018.25.036 1.143v.161c-.714.107-1.446.161-2.214.161-.714 0-1.179.143-1.411.446-.161.179-.232.964-.232 2.357 0 .429.018.768.018 1.036l.018 4.089.25 5c.071 1.446.357 2.643.911 3.607.411.696.982 1.25 1.714 1.643 1.071.571 2.125.839 3.161.839 1.214 0 2.357-.161 3.411-.5a5.546 5.546 0 001.768-.911c.554-.411.946-.786 1.161-1.143a7.58 7.58 0 00.946-2.036c.25-.875.375-2.232.375-4.089 0-3.196-.232-3.286-.5-7.321l-.071-1.054c-.054-.768-.179-1.304-.429-1.571-.393-.411-.857-.625-1.375-.607l-1.786.036-.25-.054.036-1.536h1.5l3.661.179c1.214.054 2.375-.054 3.5-.179l.321.036c.071.446.107.75.107.911s-.036.339-.071.554a6.923 6.923 0 01-1.5.232c-.839.125-1.321.214-1.411.304-.161.161-.268.393-.268.732 0 .232.036.589.054 1.036 0 0 .143.321.393 7.071.089 2.696-.089 4.518-.268 5.429s-.429 1.643-.732 2.179c-.464.786-1.143 1.518-2 2.196-.875.661-1.946 1.196-3.25 1.589s-2.821.589-4.554.589c-1.964 0-3.661-.268-5.071-.821s-2.482-1.286-3.196-2.179-1.214-2.054-1.482-3.482c-.196-.982-.286-2.393-.286-4.232V8.483c0-2.25-.107-3.518-.304-3.804-.286-.411-1.161-.661-2.625-.696zm26.572 25.161V28a.564.564 0 00-.571-.571H.572A.564.564 0 00.001 28v1.143c0 .321.25.571.571.571h26.286c.321 0 .571-.25.571-.571z"
                                                />
                                              </svg>
                                            </ForwardRef(Underline)>
                                          </Icon>
                                        </Underline>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="strikethrough"
                                  icon={<Strikethrough />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Strikethrough />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Strikethrough>
                                          <Icon
                                            aria-label="strikethrough"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Strikethrough)
                                              aria-hidden={true}
                                              aria-label="strikethrough"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="strikethrough"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.429 16c.321 0 .571.25.571.571v1.143c0 .321-.25.571-.571.571H.572a.564.564 0 01-.571-.571v-1.143c0-.321.25-.571.571-.571h30.857zM8.625 14.857a8.906 8.906 0 01-.911-1.429c-.571-1.161-.857-2.286-.857-3.357 0-2.179.804-4 2.393-5.518s3.929-2.268 7.018-2.268c.679 0 1.661.125 2.982.339.786.143 1.839.429 3.161.857.125.464.25 1.179.375 2.107.161 1.411.25 2.5.25 3.268 0 .25-.036.518-.089.804l-.214.054-1.5-.107-.25-.036c-.607-1.804-1.232-3.018-1.839-3.661-1.054-1.089-2.321-1.625-3.75-1.625-1.357 0-2.446.357-3.25 1.054s-1.196 1.571-1.196 2.607c0 .875.393 1.696 1.179 2.5s2.446 1.571 4.982 2.304c.857.25 1.875.643 3.089 1.179.643.304 1.214.607 1.696.929H8.626zm9.054 4.572h7.339c.089.5.125 1.054.125 1.643a9.983 9.983 0 01-.732 3.786c-.268.661-.679 1.268-1.268 1.857-.429.411-1.071.893-1.946 1.446-.893.536-1.786.946-2.732 1.179-.946.25-2.143.375-3.625.375-.982 0-2.161-.036-3.482-.411l-2.5-.714c-.696-.196-1.107-.357-1.286-.5a.538.538 0 01-.143-.393v-.232c0-.143.036-1.071-.036-2.786-.036-.893.036-1.518.036-1.875v-.786l1.821-.036c.661 1.518.964 2.429 1.161 2.75.429.696.911 1.25 1.429 1.679s1.143.768 1.875 1.018c.714.268 1.518.393 2.357.393.75 0 1.589-.161 2.482-.482.911-.304 1.643-.821 2.179-1.536.554-.714.839-1.482.839-2.304 0-1-.482-1.929-1.446-2.804-.393-.339-1.214-.768-2.446-1.268z"
                                                />
                                              </svg>
                                            </ForwardRef(Strikethrough)>
                                          </Icon>
                                        </Strikethrough>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="superscript"
                                  icon={<Superscript />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Superscript />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Superscript>
                                          <Icon
                                            aria-label="superscript"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Superscript)
                                              aria-hidden={true}
                                              aria-label="superscript"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="superscript"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 27 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M16.018 24.446v2.982h-4.429l-2.839-4.5-.429-.75a.944.944 0 01-.196-.375h-.054c-.036.125-.107.25-.161.375-.107.214-.268.5-.446.786l-2.768 4.464H.089v-2.982h2.286l3.518-5.196-3.304-4.857H.143v-3h4.929l2.482 4.071c.161.25.286.518.411.75.107.125.161.25.196.375h.054c.036-.125.107-.25.196-.375l.446-.75 2.5-4.071h4.589v3h-2.232l-3.286 4.768 3.643 5.286h1.946zm11.375-12.125V16h-9.179l-.054-.482a6.6 6.6 0 01-.071-.821c0-4.875 6.25-5.286 6.25-7.875 0-.929-.839-1.554-1.786-1.554-.679 0-1.286.321-1.732.696a5.742 5.742 0 00-.643.679L18.303 5a5.883 5.883 0 011.125-1.179 5.296 5.296 0 013.357-1.161c2.589 0 4.393 1.518 4.393 3.893 0 4.286-5.929 4.643-6.179 7.196h4.143V12.32h2.25z"
                                                />
                                              </svg>
                                            </ForwardRef(Superscript)>
                                          </Icon>
                                        </Superscript>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="subscript"
                                  icon={<Subscript />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Subscript />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Subscript>
                                          <Icon
                                            aria-label="subscript"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Subscript)
                                              aria-hidden={true}
                                              aria-label="subscript"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="subscript"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 28 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M16.018 24.446v2.982h-4.429l-2.839-4.5-.429-.75a.944.944 0 01-.196-.375h-.054c-.036.125-.107.25-.161.375-.107.214-.268.5-.446.786l-2.768 4.464H.089v-2.982h2.286l3.518-5.196-3.304-4.857H.143v-3h4.929l2.482 4.071c.161.25.286.518.411.75.107.125.161.25.196.375h.054c.036-.125.107-.25.196-.375l.446-.75 2.5-4.071h4.589v3h-2.232l-3.286 4.768 3.643 5.286h1.946zm11.411 3.875V32H18.25l-.071-.482c-.018-.268-.054-.589-.054-.821 0-4.875 6.25-5.286 6.25-7.875 0-.929-.839-1.554-1.786-1.554-.696 0-1.286.321-1.732.696a5.742 5.742 0 00-.643.679L18.339 21a5.883 5.883 0 011.125-1.179c.75-.607 1.839-1.161 3.357-1.161 2.589 0 4.393 1.518 4.393 3.893 0 4.268-5.929 4.625-6.179 7.196h4.143V28.32h2.25z"
                                                />
                                              </svg>
                                            </ForwardRef(Subscript)>
                                          </Icon>
                                        </Subscript>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <ForwardRef
                                  format="link"
                                  icon={<Link />}
                                >
                                  <Whisper
                                    placement="top"
                                    speaker={
                                      <Popover>
                                        <LinkMenu />
                                      </Popover>
                                    }
                                    trigger="none"
                                  >
                                    <OverlayTrigger
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <LinkMenu />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <ForwardRef
                                        active={false}
                                        onMouseDown={[Function]}
                                      >
                                        <button
                                          className="icon-button"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "border": "#00000000 1px solid",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "15px",
                                              }
                                            }
                                          >
                                            <Link>
                                              <Icon
                                                aria-label="link"
                                                as={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                data-category="legacy"
                                                fill="currentColor"
                                                height="1em"
                                                width="1em"
                                              >
                                                <ForwardRef(Link)
                                                  aria-hidden={true}
                                                  aria-label="link"
                                                  className="rs-icon"
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  focusable={false}
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-label="link"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    viewBox="0 0 30 32"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                    />
                                                  </svg>
                                                </ForwardRef(Link)>
                                              </Icon>
                                            </Link>
                                          </div>
                                        </button>
                                      </ForwardRef>
                                      <Component>
                                        <Portal
                                          containerInfo={<body />}
                                        >
                                          <Overlay
                                            childrenProps={
                                              Object {
                                                "id": undefined,
                                              }
                                            }
                                            placement="top"
                                            rootClose={true}
                                            triggerTarget={
                                              Object {
                                                "current": <button
                                                  class="icon-button"
                                                  style="border: 1px solid #00000000;"
                                                >
                                                  <div
                                                    style="min-width: 15px;"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      aria-label="link"
                                                      class="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      viewBox="0 0 30 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                      />
                                                    </svg>
                                                  </div>
                                                </button>,
                                              }
                                            }
                                          />
                                        </Portal>
                                      </Component>
                                    </OverlayTrigger>
                                  </Whisper>
                                </ForwardRef>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <ForwardRef
                                  icon={<SmileO />}
                                >
                                  <Whisper
                                    placement="top"
                                    speaker={
                                      <Popover>
                                        <EmojiPicker
                                          setEmoji={[Function]}
                                        />
                                      </Popover>
                                    }
                                    trigger="none"
                                  >
                                    <OverlayTrigger
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <EmojiPicker
                                            setEmoji={[Function]}
                                          />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <ForwardRef
                                        active={false}
                                        onMouseDown={[Function]}
                                      >
                                        <button
                                          className="icon-button"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "border": "#00000000 1px solid",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "15px",
                                              }
                                            }
                                          >
                                            <SmileO>
                                              <Icon
                                                aria-label="smile o"
                                                as={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                data-category="legacy"
                                                fill="currentColor"
                                                height="1em"
                                                width="1em"
                                              >
                                                <ForwardRef(SmileO)
                                                  aria-hidden={true}
                                                  aria-label="smile o"
                                                  className="rs-icon"
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  focusable={false}
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-label="smile o"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    viewBox="0 0 27 32"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M20.25 19.196C19.357 22.071 16.732 24 13.714 24s-5.643-1.929-6.536-4.804c-.196-.607.143-1.232.75-1.429.589-.196 1.232.143 1.429.75a4.543 4.543 0 004.357 3.196c2 0 3.768-1.286 4.357-3.196a1.15 1.15 0 011.446-.75c.589.196.929.821.732 1.429zm-8.821-7.767c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zm9.142 0c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zM25.143 16c0-6.304-5.125-11.429-11.429-11.429S2.285 9.696 2.285 16 7.41 27.429 13.714 27.429 25.143 22.304 25.143 16zm2.286 0c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SmileO)>
                                              </Icon>
                                            </SmileO>
                                          </div>
                                        </button>
                                      </ForwardRef>
                                      <Component>
                                        <Portal
                                          containerInfo={<body />}
                                        >
                                          <Overlay
                                            childrenProps={
                                              Object {
                                                "id": undefined,
                                              }
                                            }
                                            placement="top"
                                            rootClose={true}
                                            triggerTarget={
                                              Object {
                                                "current": <button
                                                  class="icon-button"
                                                  style="border: 1px solid #00000000;"
                                                >
                                                  <div
                                                    style="min-width: 15px;"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      aria-label="smile o"
                                                      class="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      viewBox="0 0 27 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M20.25 19.196C19.357 22.071 16.732 24 13.714 24s-5.643-1.929-6.536-4.804c-.196-.607.143-1.232.75-1.429.589-.196 1.232.143 1.429.75a4.543 4.543 0 004.357 3.196c2 0 3.768-1.286 4.357-3.196a1.15 1.15 0 011.446-.75c.589.196.929.821.732 1.429zm-8.821-7.767c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zm9.142 0c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zM25.143 16c0-6.304-5.125-11.429-11.429-11.429S2.285 9.696 2.285 16 7.41 27.429 13.714 27.429 25.143 22.304 25.143 16zm2.286 0c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                                      />
                                                    </svg>
                                                  </div>
                                                </button>,
                                              }
                                            }
                                          />
                                        </Portal>
                                      </Component>
                                    </OverlayTrigger>
                                  </Whisper>
                                </ForwardRef>
                              </div>
                            </div>
                          </div>
                        </Toolbar>
                        <Editable
                          onBlur={[Function]}
                          onKeyDown={[Function]}
                          readOnly={false}
                          renderElement={[Function]}
                          renderLeaf={[Function]}
                        >
                          <div
                            contentEditable={true}
                            data-gramm={false}
                            data-slate-editor={true}
                            data-slate-node="value"
                            onBeforeInput={[Function]}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onCopy={[Function]}
                            onCut={[Function]}
                            onDragOver={[Function]}
                            onDragStart={[Function]}
                            onDrop={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onPaste={[Function]}
                            role="textbox"
                            style={
                              Object {
                                "outline": "none",
                                "whiteSpace": "pre-wrap",
                                "wordWrap": "break-word",
                              }
                            }
                            suppressContentEditableWarning={true}
                          >
                            <Children
                              decorate={[Function]}
                              decorations={Array []}
                              node={
                                Object {
                                  "addMark": [Function],
                                  "apply": [Function],
                                  "children": Array [
                                    Object {
                                      "children": Array [
                                        Object {
                                          "text": "",
                                        },
                                      ],
                                      "type": "paragraph",
                                    },
                                  ],
                                  "deleteBackward": [Function],
                                  "deleteForward": [Function],
                                  "deleteFragment": [Function],
                                  "getFragment": [Function],
                                  "history": Object {
                                    "redos": Array [],
                                    "undos": Array [],
                                  },
                                  "insertBreak": [Function],
                                  "insertData": [Function],
                                  "insertFragment": [Function],
                                  "insertNode": [Function],
                                  "insertText": [Function],
                                  "isInline": [Function],
                                  "isVoid": [Function],
                                  "marks": null,
                                  "normalizeNode": [Function],
                                  "onChange": [Function],
                                  "operations": Array [],
                                  "redo": [Function],
                                  "removeMark": [Function],
                                  "selection": null,
                                  "setFragmentData": [Function],
                                  "undo": [Function],
                                }
                              }
                              renderElement={[Function]}
                              renderLeaf={[Function]}
                              selection={null}
                            >
                              <Element
                                decorate={[Function]}
                                decorations={Array []}
                                element={
                                  Object {
                                    "children": Array [
                                      Object {
                                        "text": "",
                                      },
                                    ],
                                    "type": "paragraph",
                                  }
                                }
                                key="0"
                                renderElement={[Function]}
                                renderLeaf={[Function]}
                                selection={null}
                              >
                                <p
                                  data-slate-node="element"
                                >
                                  <Children
                                    decorate={[Function]}
                                    decorations={Array []}
                                    node={
                                      Object {
                                        "children": Array [
                                          Object {
                                            "text": "",
                                          },
                                        ],
                                        "type": "paragraph",
                                      }
                                    }
                                    renderElement={[Function]}
                                    renderLeaf={[Function]}
                                    selection={null}
                                  >
                                    <Text
                                      decorations={Array []}
                                      isLast={true}
                                      key="1"
                                      parent={
                                        Object {
                                          "children": Array [
                                            Object {
                                              "text": "",
                                            },
                                          ],
                                          "type": "paragraph",
                                        }
                                      }
                                      renderLeaf={[Function]}
                                      text={
                                        Object {
                                          "text": "",
                                        }
                                      }
                                    >
                                      <span
                                        data-slate-node="text"
                                      >
                                        <Leaf
                                          isLast={true}
                                          key="1-0"
                                          leaf={
                                            Object {
                                              "text": "",
                                            }
                                          }
                                          parent={
                                            Object {
                                              "children": Array [
                                                Object {
                                                  "text": "",
                                                },
                                              ],
                                              "type": "paragraph",
                                            }
                                          }
                                          renderLeaf={[Function]}
                                          text={
                                            Object {
                                              "text": "",
                                            }
                                          }
                                        >
                                          <span
                                            data-slate-leaf={true}
                                          >
                                            <String
                                              isLast={true}
                                              leaf={
                                                Object {
                                                  "text": "",
                                                }
                                              }
                                              parent={
                                                Object {
                                                  "children": Array [
                                                    Object {
                                                      "text": "",
                                                    },
                                                  ],
                                                  "type": "paragraph",
                                                }
                                              }
                                              text={
                                                Object {
                                                  "text": "",
                                                }
                                              }
                                            >
                                              <ZeroWidthString
                                                isLineBreak={true}
                                              >
                                                <span
                                                  data-slate-length={0}
                                                  data-slate-zero-width="n"
                                                >
                                                  ﻿
                                                  <br />
                                                </span>
                                              </ZeroWidthString>
                                            </String>
                                          </span>
                                        </Leaf>
                                      </span>
                                    </Text>
                                  </Children>
                                </p>
                              </Element>
                            </Children>
                          </div>
                        </Editable>
                      </Slate>
                    </Memo(RichTextBlock)>
                  </div>
                </div>
              </div>
            </Panel>
          </div>
        </PanelGroup>
      </div>
    </ModalBody>
  </DrawerBody>
  <Drawer
    onClose={[Function]}
    open={false}
    size="sm"
  >
    <Modal
      animation={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      animationProps={
        Object {
          "placement": "right",
        }
      }
      className="rs-drawer-right"
      classPrefix="drawer"
      drawer={true}
      onClose={[Function]}
      open={false}
      size="sm"
    >
      <OverlayModal
        animationProps={
          Object {
            "placement": "right",
          }
        }
        backdrop={true}
        backdropClassName="rs-drawer-backdrop"
        backdropTransitionTimeout={150}
        className="rs-drawer-wrapper"
        containerClassName="rs-drawer-has-backdrop"
        dialogTransitionTimeout={300}
        onClick={[Function]}
        onClose={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExited={[Function]}
        open={false}
        transition={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
      />
    </Modal>
  </Drawer>
  <Drawer
    open={false}
    size="sm"
  >
    <Modal
      animation={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      animationProps={
        Object {
          "placement": "right",
        }
      }
      className="rs-drawer-right"
      classPrefix="drawer"
      drawer={true}
      open={false}
      size="sm"
    >
      <OverlayModal
        animationProps={
          Object {
            "placement": "right",
          }
        }
        backdrop={true}
        backdropClassName="rs-drawer-backdrop"
        backdropTransitionTimeout={150}
        className="rs-drawer-wrapper"
        containerClassName="rs-drawer-has-backdrop"
        dialogTransitionTimeout={300}
        onClick={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExited={[Function]}
        open={false}
        transition={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
      />
    </Modal>
  </Drawer>
</AuthorEditPanel>
`;

exports[`Author Edit Panel should render with ID 1`] = `
<AuthorEditPanel
  id="fakeId2"
>
  <DrawerHeader>
    <ModalHeader
      classPrefix="drawer-header"
    >
      <div
        className="rs-drawer-header"
      >
        <CloseButton
          className="rs-drawer-header-close"
        >
          <span
            aria-label="Close"
            className="rs-drawer-header-close rs-btn-close"
            role="button"
            title="Close"
          >
            <Close>
              <Icon
                aria-label="close"
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                data-category="application"
                fill="currentColor"
                height="1em"
                width="1em"
              >
                <ForwardRef(Close)
                  aria-hidden={true}
                  aria-label="close"
                  className="rs-icon"
                  data-category="application"
                  fill="currentColor"
                  focusable={false}
                  height="1em"
                  width="1em"
                >
                  <svg
                    aria-hidden={true}
                    aria-label="close"
                    className="rs-icon"
                    data-category="application"
                    fill="currentColor"
                    focusable={false}
                    height="1em"
                    viewBox="0 0 16 16"
                    width="1em"
                  >
                    <path
                      d="M2.784 2.089l.069.058 5.146 5.147 5.146-5.147a.5.5 0 01.765.638l-.058.069L8.705 8l5.147 5.146a.5.5 0 01-.638.765l-.069-.058-5.146-5.147-5.146 5.147a.5.5 0 01-.765-.638l.058-.069L7.293 8 2.146 2.854a.5.5 0 01.638-.765z"
                    />
                  </svg>
                </ForwardRef(Close)>
              </Icon>
            </Close>
          </span>
        </CloseButton>
        <DrawerTitle>
          <Modal.Title
            classPrefix="drawer-title"
          >
            <h4
              className="rs-drawer-title"
            >
              authors.panels.editAuthor
            </h4>
          </Modal.Title>
        </DrawerTitle>
        <DrawerActions>
          <ModalFooter
            classPrefix="drawer-actions"
          >
            <div
              className="rs-drawer-actions"
            >
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
              >
                <button
                  aria-disabled={false}
                  className="rs-btn rs-btn-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.save
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
              <Button
                appearance="subtle"
                onClick={[Function]}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  authors.panels.close
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
            </div>
          </ModalFooter>
        </DrawerActions>
      </div>
    </ModalHeader>
  </DrawerHeader>
  <DrawerBody>
    <ModalBody
      classPrefix="drawer-body"
    >
      <div
        className="rs-drawer-body"
        style={Object {}}
      >
        <PanelGroup>
          <div
            className="rs-panel-group"
          >
            <Panel>
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <Form
                    fluid={true}
                  >
                    <form
                      className="rs-form rs-form-vertical rs-form-fluid"
                      onSubmit={[Function]}
                    >
                      <FormGroup>
                        <div
                          className="rs-form-group"
                          role="group"
                        >
                          <FormControlLabel>
                            <label
                              className="rs-form-control-label"
                              id={null}
                            >
                              authors.panels.name
                            </label>
                          </FormControlLabel>
                          <FormControl
                            disabled={false}
                            name="authors.panels.name"
                            onChange={[Function]}
                            value="Douglas Cole"
                          >
                            <div
                              className="rs-form-control rs-form-control-wrapper"
                            >
                              <Input
                                aria-describedby={null}
                                aria-labelledby={null}
                                disabled={false}
                                name="authors.panels.name"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value="Douglas Cole"
                              >
                                <input
                                  aria-describedby={null}
                                  aria-labelledby={null}
                                  className="rs-input"
                                  disabled={false}
                                  name="authors.panels.name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value="Douglas Cole"
                                />
                              </Input>
                              <FormErrorMessage
                                aria-relevant="all"
                                className="rs-form-control-message-wrapper"
                                id="undefined-error-message"
                                placement="bottomStart"
                                role="alert"
                                show={false}
                              />
                            </div>
                          </FormControl>
                        </div>
                      </FormGroup>
                      <FormGroup>
                        <div
                          className="rs-form-group"
                          role="group"
                        >
                          <FormControlLabel>
                            <label
                              className="rs-form-control-label"
                              id={null}
                            >
                              authors.panels.jobTitle
                            </label>
                          </FormControlLabel>
                          <FormControl
                            disabled={false}
                            name="authors.panels.jobTitle"
                            onChange={[Function]}
                            value=""
                          >
                            <div
                              className="rs-form-control rs-form-control-wrapper"
                            >
                              <Input
                                aria-describedby={null}
                                aria-labelledby={null}
                                disabled={false}
                                name="authors.panels.jobTitle"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <input
                                  aria-describedby={null}
                                  aria-labelledby={null}
                                  className="rs-input"
                                  disabled={false}
                                  name="authors.panels.jobTitle"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </Input>
                              <FormErrorMessage
                                aria-relevant="all"
                                className="rs-form-control-message-wrapper"
                                id="undefined-error-message"
                                placement="bottomStart"
                                role="alert"
                                show={false}
                              />
                            </div>
                          </FormControl>
                        </div>
                      </FormGroup>
                    </form>
                  </Form>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.image"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.image
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <ChooseEditImage
                    disabled={false}
                    header=""
                    image={null}
                    left={0}
                    openChooseModalOpen={[Function]}
                    openEditModalOpen={[Function]}
                    removeImage={[Function]}
                    top={0}
                  >
                    <Panel
                      bodyFill={true}
                      header=""
                    >
                      <div
                        className="rs-panel"
                      >
                        <div
                          className="rs-panel-body rs-panel-body-fill"
                          role="region"
                        >
                          <PlaceholderInput
                            onAddClick={[Function]}
                          >
                            <div
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#f7f9fa",
                                  "display": "flex",
                                  "flexDirection": "column",
                                  "height": "100%",
                                  "justifyContent": "center",
                                  "maxHeight": 450,
                                  "width": "100%",
                                }
                              }
                            >
                              <IconButton
                                icon={<PlusCircle />}
                                onClick={[Function]}
                                size="sm"
                              >
                                <Button
                                  className="rs-btn-icon rs-btn-icon-placement-left"
                                  onClick={[Function]}
                                  size="sm"
                                >
                                  <button
                                    className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default rs-btn-sm"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <PlusCircle>
                                      <Icon
                                        aria-label="plus circle"
                                        as={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          }
                                        }
                                        data-category="legacy"
                                        fill="currentColor"
                                        height="1em"
                                        width="1em"
                                      >
                                        <ForwardRef(PlusCircle)
                                          aria-hidden={true}
                                          aria-label="plus circle"
                                          className="rs-icon"
                                          data-category="legacy"
                                          fill="currentColor"
                                          focusable={false}
                                          height="1em"
                                          width="1em"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-label="plus circle"
                                            className="rs-icon"
                                            data-category="legacy"
                                            fill="currentColor"
                                            focusable={false}
                                            height="1em"
                                            viewBox="0 0 27 32"
                                            width="1em"
                                          >
                                            <path
                                              d="M21.714 17.143v-2.286c0-.625-.518-1.143-1.143-1.143H16V9.143C16 8.518 15.482 8 14.857 8h-2.286c-.625 0-1.143.518-1.143 1.143v4.571H6.857c-.625 0-1.143.518-1.143 1.143v2.286c0 .625.518 1.143 1.143 1.143h4.571v4.571c0 .625.518 1.143 1.143 1.143h2.286c.625 0 1.143-.518 1.143-1.143v-4.571h4.571c.625 0 1.143-.518 1.143-1.143zM27.429 16c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                            />
                                          </svg>
                                        </ForwardRef(PlusCircle)>
                                      </Icon>
                                    </PlusCircle>
                                    <Ripple>
                                      <span
                                        className="rs-ripple-pond"
                                      >
                                        <Transition
                                          enteringClassName="rs-ripple-rippling"
                                          in={false}
                                          onEntered={[Function]}
                                          timeout={1000}
                                        >
                                          <span
                                            className="rs-ripple"
                                          />
                                        </Transition>
                                      </span>
                                    </Ripple>
                                  </button>
                                </Button>
                              </IconButton>
                            </div>
                          </PlaceholderInput>
                        </div>
                      </div>
                    </Panel>
                  </ChooseEditImage>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.links"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.links
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <ListInput
                    defaultValue={
                      Object {
                        "title": "",
                        "url": "",
                      }
                    }
                    onChange={[Function]}
                    value={Array []}
                  >
                    <div>
                      <Component
                        defaultValue={
                          Object {
                            "title": "",
                            "url": "",
                          }
                        }
                        onChange={[Function]}
                        onSortEnd={[Function]}
                        useDragHandle={true}
                        value={Array []}
                      >
                        <div>
                          <IconButton
                            icon={<PlusCircle />}
                            onClick={[Function]}
                          >
                            <Button
                              className="rs-btn-icon rs-btn-icon-placement-left"
                              onClick={[Function]}
                            >
                              <button
                                className="rs-btn-icon rs-btn-icon-placement-left rs-btn rs-btn-default"
                                onClick={[Function]}
                                type="button"
                              >
                                <PlusCircle>
                                  <Icon
                                    aria-label="plus circle"
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      }
                                    }
                                    data-category="legacy"
                                    fill="currentColor"
                                    height="1em"
                                    width="1em"
                                  >
                                    <ForwardRef(PlusCircle)
                                      aria-hidden={true}
                                      aria-label="plus circle"
                                      className="rs-icon"
                                      data-category="legacy"
                                      fill="currentColor"
                                      focusable={false}
                                      height="1em"
                                      width="1em"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-label="plus circle"
                                        className="rs-icon"
                                        data-category="legacy"
                                        fill="currentColor"
                                        focusable={false}
                                        height="1em"
                                        viewBox="0 0 27 32"
                                        width="1em"
                                      >
                                        <path
                                          d="M21.714 17.143v-2.286c0-.625-.518-1.143-1.143-1.143H16V9.143C16 8.518 15.482 8 14.857 8h-2.286c-.625 0-1.143.518-1.143 1.143v4.571H6.857c-.625 0-1.143.518-1.143 1.143v2.286c0 .625.518 1.143 1.143 1.143h4.571v4.571c0 .625.518 1.143 1.143 1.143h2.286c.625 0 1.143-.518 1.143-1.143v-4.571h4.571c.625 0 1.143-.518 1.143-1.143zM27.429 16c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                        />
                                      </svg>
                                    </ForwardRef(PlusCircle)>
                                  </Icon>
                                </PlusCircle>
                                <Ripple>
                                  <span
                                    className="rs-ripple-pond"
                                  >
                                    <Transition
                                      enteringClassName="rs-ripple-rippling"
                                      in={false}
                                      onEntered={[Function]}
                                      timeout={1000}
                                    >
                                      <span
                                        className="rs-ripple"
                                      />
                                    </Transition>
                                  </span>
                                </Ripple>
                              </button>
                            </Button>
                          </IconButton>
                        </div>
                      </Component>
                    </div>
                  </ListInput>
                </div>
              </div>
            </Panel>
            <Panel
              header="authors.panels.bioInformation"
            >
              <div
                className="rs-panel"
              >
                <div
                  className="rs-panel-header"
                  tabIndex={-1}
                >
                  authors.panels.bioInformation
                </div>
                <div
                  className="rs-panel-body"
                  role="region"
                >
                  <div
                    className="richTextFrame"
                  >
                    <Memo(RichTextBlock)
                      onChange={[Function]}
                      value={
                        Array [
                          Object {
                            "children": Array [
                              Object {
                                "text": "",
                              },
                            ],
                            "type": "paragraph",
                          },
                        ]
                      }
                    >
                      <Slate
                        editor={
                          Object {
                            "addMark": [Function],
                            "apply": [Function],
                            "children": Array [
                              Object {
                                "children": Array [
                                  Object {
                                    "text": "",
                                  },
                                ],
                                "type": "paragraph",
                              },
                            ],
                            "deleteBackward": [Function],
                            "deleteForward": [Function],
                            "deleteFragment": [Function],
                            "getFragment": [Function],
                            "history": Object {
                              "redos": Array [],
                              "undos": Array [],
                            },
                            "insertBreak": [Function],
                            "insertData": [Function],
                            "insertFragment": [Function],
                            "insertNode": [Function],
                            "insertText": [Function],
                            "isInline": [Function],
                            "isVoid": [Function],
                            "marks": null,
                            "normalizeNode": [Function],
                            "onChange": [Function],
                            "operations": Array [],
                            "redo": [Function],
                            "removeMark": [Function],
                            "selection": null,
                            "setFragmentData": [Function],
                            "undo": [Function],
                          }
                        }
                        onChange={[Function]}
                        value={
                          Array [
                            Object {
                              "children": Array [
                                Object {
                                  "text": "",
                                },
                              ],
                              "type": "paragraph",
                            },
                          ]
                        }
                      >
                        <Toolbar
                          fadeOut={true}
                          onMouseDown={[Function]}
                        >
                          <div
                            onMouseDown={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "display": "flex",
                                "justifyContent": "center",
                                "marginBottom": 30,
                                "pointerEvents": "none",
                                "position": "sticky",
                                "zIndex": 1,
                              }
                            }
                          >
                            <div
                              style={
                                Object {
                                  "backgroundColor": "white",
                                  "borderRadius": 6,
                                  "padding": 5,
                                  "pointerEvents": "auto",
                                  "transitionDuration": "100ms",
                                  "transitionProperty": "opacity",
                                }
                              }
                            >
                              <div
                                style={
                                  Object {
                                    "display": "flex",
                                    "opacity": 0.5,
                                    "transitionDuration": "100ms",
                                    "transitionProperty": "opacity",
                                  }
                                }
                              >
                                <FormatButton
                                  format="heading-one"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H1Icon>
                                        <svg
                                          className="bi bi-type-h1"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M8.637 13V3.669H7.379V7.62H2.758V3.67H1.5V13h1.258V8.728h4.62V13h1.259zm5.329 0V3.669h-1.244L10.5 5.316v1.265l2.16-1.565h.062V13h1.244z"
                                          />
                                        </svg>
                                      </H1Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <FormatButton
                                  format="heading-two"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H2Icon>
                                        <svg
                                          className="bi bi-type-h2"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7.638 13V3.669H6.38V7.62H1.759V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.022-6.733v-.048c0-.889.63-1.668 1.716-1.668.957 0 1.675.608 1.675 1.572 0 .855-.554 1.504-1.067 2.085l-3.513 3.999V13H15.5v-1.094h-4.245v-.075l2.481-2.844c.875-.998 1.586-1.784 1.586-2.953 0-1.463-1.155-2.556-2.919-2.556-1.941 0-2.966 1.326-2.966 2.74v.049h1.223z"
                                          />
                                        </svg>
                                      </H2Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <FormatButton
                                  format="heading-three"
                                >
                                  <ForwardRef
                                    active={false}
                                    onMouseDown={[Function]}
                                  >
                                    <button
                                      className="icon-button"
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "border": "#00000000 1px solid",
                                        }
                                      }
                                    >
                                      <H3Icon>
                                        <svg
                                          className="bi bi-type-h3"
                                          fill="currentColor"
                                          height="1em"
                                          viewBox="0 0 16 16"
                                          width="1em"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7.637 13V3.669H6.379V7.62H1.758V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.625-4.272h1.018c1.142 0 1.935.67 1.949 1.674.013 1.005-.78 1.737-2.01 1.73-1.08-.007-1.853-.588-1.935-1.32H9.108c.069 1.327 1.224 2.386 3.083 2.386 1.935 0 3.343-1.155 3.309-2.789-.027-1.51-1.251-2.16-2.037-2.249v-.068c.704-.123 1.764-.91 1.723-2.229-.035-1.353-1.176-2.4-2.954-2.385-1.873.006-2.857 1.162-2.898 2.358h1.196c.062-.69.711-1.299 1.696-1.299.998 0 1.695.622 1.695 1.525.007.922-.718 1.592-1.695 1.592h-.964v1.074z"
                                          />
                                        </svg>
                                      </H3Icon>
                                    </button>
                                  </ForwardRef>
                                </FormatButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <FormatIconButton
                                  format="unordered-list"
                                  icon={<ListUl />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<ListUl />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <ListUl>
                                          <Icon
                                            aria-label="list ul"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(ListUl)
                                              aria-hidden={true}
                                              aria-label="list ul"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="list ul"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M6.857 25.143a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zm0-9.143a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zM32 23.429v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571v-3.429c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571zM6.857 6.857a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zM32 14.286v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571v-3.429c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571zm0-9.143v3.429a.587.587 0 01-.571.571H9.715a.587.587 0 01-.571-.571V5.143c0-.304.268-.571.571-.571h21.714c.304 0 .571.268.571.571z"
                                                />
                                              </svg>
                                            </ForwardRef(ListUl)>
                                          </Icon>
                                        </ListUl>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="ordered-list"
                                  icon={<ListOl />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<ListOl />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <ListOl>
                                          <Icon
                                            aria-label="list ol"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(ListOl)
                                              aria-hidden={true}
                                              aria-label="list ol"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="list ol"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M6.804 28.929C6.804 30.893 5.268 32 3.411 32c-1.125 0-2.268-.375-3.071-1.179l1.018-1.571c.482.446 1.214.804 1.893.804.625 0 1.286-.304 1.286-1.018 0-1-1.143-1.054-1.875-1l-.464-1c.643-.821 1.232-1.732 2-2.429v-.018c-.571 0-1.161.036-1.732.036v.946H.573v-2.714h5.946v1.571l-1.696 2.054c1.196.286 1.982 1.214 1.982 2.446zm.035-11.197v2.839H.375a5.853 5.853 0 01-.107-.964c0-3.304 4.036-3.804 4.036-5.304 0-.607-.375-.929-.964-.929-.625 0-1.143.536-1.446 1.036L.376 13.356c.589-1.232 1.804-1.929 3.161-1.929 1.661 0 3.089.982 3.089 2.75 0 2.643-3.875 3.232-3.929 4.625h2.268v-1.071H6.84zM32 23.429v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571v-3.429c0-.321.25-.571.571-.571h21.714c.304 0 .571.25.571.571zM6.857 7.375v1.768H.875V7.375h1.911c0-1.446.018-2.893.018-4.339v-.214h-.036c-.196.393-.554.661-.893.964L.607 2.429 3.036.161h1.893v7.214h1.929zM32 14.286v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571v-3.429c0-.321.25-.571.571-.571h21.714c.304 0 .571.25.571.571zm0-9.143v3.429a.587.587 0 01-.571.571H9.715a.575.575 0 01-.571-.571V5.143c0-.304.25-.571.571-.571h21.714c.304 0 .571.268.571.571z"
                                                />
                                              </svg>
                                            </ForwardRef(ListOl)>
                                          </Icon>
                                        </ListOl>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <EditorSubMenuButton
                                  editorHasFocus={false}
                                  icon={<Table />}
                                >
                                  <ForwardRef
                                    icon={<Table />}
                                  >
                                    <Whisper
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <TableMenu />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <OverlayTrigger
                                        placement="top"
                                        speaker={
                                          <Popover>
                                            <TableMenu />
                                          </Popover>
                                        }
                                        trigger="none"
                                      >
                                        <ForwardRef
                                          active={false}
                                          onMouseDown={[Function]}
                                        >
                                          <button
                                            className="icon-button"
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "border": "#00000000 1px solid",
                                              }
                                            }
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "minWidth": "15px",
                                                }
                                              }
                                            >
                                              <Table>
                                                <Icon
                                                  aria-label="table"
                                                  as={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    }
                                                  }
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <ForwardRef(Table)
                                                    aria-hidden={true}
                                                    aria-label="table"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    width="1em"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-label="table"
                                                      className="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable={false}
                                                      height="1em"
                                                      viewBox="0 0 30 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M9.143 24.571v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zM9.143 10.857V7.428a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm-9.143-13.714V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm2.285-5.714v19.429a2.866 2.866 0 01-2.857 2.857h-24A2.866 2.866 0 010 24.572V5.143a2.866 2.866 0 012.857-2.857h24a2.866 2.866 0 012.857 2.857z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(Table)>
                                                </Icon>
                                              </Table>
                                            </div>
                                          </button>
                                        </ForwardRef>
                                        <Component>
                                          <Portal
                                            containerInfo={<body />}
                                          >
                                            <Overlay
                                              childrenProps={
                                                Object {
                                                  "id": undefined,
                                                }
                                              }
                                              open={false}
                                              placement="top"
                                              rootClose={true}
                                              triggerTarget={
                                                Object {
                                                  "current": <button
                                                    class="icon-button"
                                                    style="border: 1px solid #00000000;"
                                                  >
                                                    <div
                                                      style="min-width: 15px;"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        aria-label="table"
                                                        class="rs-icon"
                                                        data-category="legacy"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        viewBox="0 0 30 32"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M9.143 24.571v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857v-3.429a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zM9.143 10.857V7.428a.564.564 0 00-.571-.571H2.858a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm-9.143-13.714V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm9.143 6.857v-3.429a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm0-6.857V7.428a.564.564 0 00-.571-.571h-5.714a.564.564 0 00-.571.571v3.429c0 .321.25.571.571.571h5.714c.321 0 .571-.25.571-.571zm2.285-5.714v19.429a2.866 2.866 0 01-2.857 2.857h-24A2.866 2.866 0 010 24.572V5.143a2.866 2.866 0 012.857-2.857h24a2.866 2.866 0 012.857 2.857z"
                                                        />
                                                      </svg>
                                                    </div>
                                                  </button>,
                                                }
                                              }
                                            />
                                          </Portal>
                                        </Component>
                                      </OverlayTrigger>
                                    </Whisper>
                                  </ForwardRef>
                                </EditorSubMenuButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <FormatIconButton
                                  format="bold"
                                  icon={<Bold />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Bold />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Bold>
                                          <Icon
                                            aria-label="bold"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Bold)
                                              aria-hidden={true}
                                              aria-label="bold"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="bold"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 25 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M9.911 27.161c.786.339 1.643.571 2.5.571 4.071 0 6.714-1.625 6.714-5.982 0-1.107-.143-2.268-.732-3.214-1.661-2.679-4.054-2.821-6.929-2.821-.536 0-1.304 0-1.804.179 0 1.893-.018 3.786-.018 5.661 0 1.232-.161 4.571.268 5.607zm-.25-13.322c.643.107 1.304.125 1.946.125 3.679 0 6.304-1.036 6.304-5.161 0-3.482-3.089-4.679-6.071-4.679-.786 0-1.554.107-2.321.232 0 1.804.143 3.607.143 5.411 0 .946-.018 1.893-.018 2.839 0 .411 0 .821.018 1.232zM0 29.714l.036-1.679c1.143-.286 2.304-.304 3.411-.768.625-1.054.536-2.911.536-4.107 0-.393.036-17.464-.393-18.304-.268-.518-2.893-.643-3.482-.714L.037 2.66c4.25-.071 8.5-.375 12.732-.375.804 0 1.625.018 2.429.018 4.036 0 8.482 1.929 8.482 6.571 0 3.196-2.429 4.393-4.946 5.536 3.393.768 6.411 3.071 6.411 6.821 0 6.143-5.589 8.179-10.821 8.179-1.571 0-3.143-.107-4.714-.107-3.196 0-6.429.286-9.607.411z"
                                                />
                                              </svg>
                                            </ForwardRef(Bold)>
                                          </Icon>
                                        </Bold>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="italic"
                                  icon={<Italic />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Italic />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Italic>
                                          <Icon
                                            aria-label="italic"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Italic)
                                              aria-hidden={true}
                                              aria-label="italic"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="italic"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 18 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M0 29.679l.304-1.518c1.143-.357 2.375-.5 3.446-1.054.411-.518.607-1.179.732-1.804.232-1.214 4.125-18.732 4.071-20.161v-.446c-.982-.536-2.179-.393-3.25-.571l.339-1.839c2.304.107 4.643.286 6.964.286 1.893 0 3.786-.179 5.679-.286a11.878 11.878 0 01-.339 1.589c-1.232.429-2.536.625-3.75 1.107-.393.964-.482 2.018-.661 3.036-.857 4.625-2 9.25-2.946 13.839-.179.857-1.054 4.411-.982 5.161l.018.321c1.089.25 2.196.375 3.304.554a10.142 10.142 0 01-.286 1.768c-.393 0-.768.054-1.161.054-1.018 0-2.071-.339-3.089-.357-1.232-.018-2.464-.036-3.679-.036-1.589 0-3.143.268-4.714.357z"
                                                />
                                              </svg>
                                            </ForwardRef(Italic)>
                                          </Icon>
                                        </Italic>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="underline"
                                  icon={<Underline />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Underline />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Underline>
                                          <Icon
                                            aria-label="underline"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Underline)
                                              aria-hidden={true}
                                              aria-label="underline"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="underline"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 27 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M.857 3.982c-.321-.018-.589-.018-.804-.071L-.001 2.34c.232-.018.464-.018.714-.018.625 0 1.304.018 2 .071 1.679.089 2.679.125 2.964.125a81.9 81.9 0 003-.054c.964-.036 1.839-.071 2.607-.089.75 0 1.268-.018 1.536-.036l-.018.25.036 1.143v.161c-.714.107-1.446.161-2.214.161-.714 0-1.179.143-1.411.446-.161.179-.232.964-.232 2.357 0 .429.018.768.018 1.036l.018 4.089.25 5c.071 1.446.357 2.643.911 3.607.411.696.982 1.25 1.714 1.643 1.071.571 2.125.839 3.161.839 1.214 0 2.357-.161 3.411-.5a5.546 5.546 0 001.768-.911c.554-.411.946-.786 1.161-1.143a7.58 7.58 0 00.946-2.036c.25-.875.375-2.232.375-4.089 0-3.196-.232-3.286-.5-7.321l-.071-1.054c-.054-.768-.179-1.304-.429-1.571-.393-.411-.857-.625-1.375-.607l-1.786.036-.25-.054.036-1.536h1.5l3.661.179c1.214.054 2.375-.054 3.5-.179l.321.036c.071.446.107.75.107.911s-.036.339-.071.554a6.923 6.923 0 01-1.5.232c-.839.125-1.321.214-1.411.304-.161.161-.268.393-.268.732 0 .232.036.589.054 1.036 0 0 .143.321.393 7.071.089 2.696-.089 4.518-.268 5.429s-.429 1.643-.732 2.179c-.464.786-1.143 1.518-2 2.196-.875.661-1.946 1.196-3.25 1.589s-2.821.589-4.554.589c-1.964 0-3.661-.268-5.071-.821s-2.482-1.286-3.196-2.179-1.214-2.054-1.482-3.482c-.196-.982-.286-2.393-.286-4.232V8.483c0-2.25-.107-3.518-.304-3.804-.286-.411-1.161-.661-2.625-.696zm26.572 25.161V28a.564.564 0 00-.571-.571H.572A.564.564 0 00.001 28v1.143c0 .321.25.571.571.571h26.286c.321 0 .571-.25.571-.571z"
                                                />
                                              </svg>
                                            </ForwardRef(Underline)>
                                          </Icon>
                                        </Underline>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="strikethrough"
                                  icon={<Strikethrough />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Strikethrough />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Strikethrough>
                                          <Icon
                                            aria-label="strikethrough"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Strikethrough)
                                              aria-hidden={true}
                                              aria-label="strikethrough"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="strikethrough"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 32 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.429 16c.321 0 .571.25.571.571v1.143c0 .321-.25.571-.571.571H.572a.564.564 0 01-.571-.571v-1.143c0-.321.25-.571.571-.571h30.857zM8.625 14.857a8.906 8.906 0 01-.911-1.429c-.571-1.161-.857-2.286-.857-3.357 0-2.179.804-4 2.393-5.518s3.929-2.268 7.018-2.268c.679 0 1.661.125 2.982.339.786.143 1.839.429 3.161.857.125.464.25 1.179.375 2.107.161 1.411.25 2.5.25 3.268 0 .25-.036.518-.089.804l-.214.054-1.5-.107-.25-.036c-.607-1.804-1.232-3.018-1.839-3.661-1.054-1.089-2.321-1.625-3.75-1.625-1.357 0-2.446.357-3.25 1.054s-1.196 1.571-1.196 2.607c0 .875.393 1.696 1.179 2.5s2.446 1.571 4.982 2.304c.857.25 1.875.643 3.089 1.179.643.304 1.214.607 1.696.929H8.626zm9.054 4.572h7.339c.089.5.125 1.054.125 1.643a9.983 9.983 0 01-.732 3.786c-.268.661-.679 1.268-1.268 1.857-.429.411-1.071.893-1.946 1.446-.893.536-1.786.946-2.732 1.179-.946.25-2.143.375-3.625.375-.982 0-2.161-.036-3.482-.411l-2.5-.714c-.696-.196-1.107-.357-1.286-.5a.538.538 0 01-.143-.393v-.232c0-.143.036-1.071-.036-2.786-.036-.893.036-1.518.036-1.875v-.786l1.821-.036c.661 1.518.964 2.429 1.161 2.75.429.696.911 1.25 1.429 1.679s1.143.768 1.875 1.018c.714.268 1.518.393 2.357.393.75 0 1.589-.161 2.482-.482.911-.304 1.643-.821 2.179-1.536.554-.714.839-1.482.839-2.304 0-1-.482-1.929-1.446-2.804-.393-.339-1.214-.768-2.446-1.268z"
                                                />
                                              </svg>
                                            </ForwardRef(Strikethrough)>
                                          </Icon>
                                        </Strikethrough>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="superscript"
                                  icon={<Superscript />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Superscript />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Superscript>
                                          <Icon
                                            aria-label="superscript"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Superscript)
                                              aria-hidden={true}
                                              aria-label="superscript"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="superscript"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 27 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M16.018 24.446v2.982h-4.429l-2.839-4.5-.429-.75a.944.944 0 01-.196-.375h-.054c-.036.125-.107.25-.161.375-.107.214-.268.5-.446.786l-2.768 4.464H.089v-2.982h2.286l3.518-5.196-3.304-4.857H.143v-3h4.929l2.482 4.071c.161.25.286.518.411.75.107.125.161.25.196.375h.054c.036-.125.107-.25.196-.375l.446-.75 2.5-4.071h4.589v3h-2.232l-3.286 4.768 3.643 5.286h1.946zm11.375-12.125V16h-9.179l-.054-.482a6.6 6.6 0 01-.071-.821c0-4.875 6.25-5.286 6.25-7.875 0-.929-.839-1.554-1.786-1.554-.679 0-1.286.321-1.732.696a5.742 5.742 0 00-.643.679L18.303 5a5.883 5.883 0 011.125-1.179 5.296 5.296 0 013.357-1.161c2.589 0 4.393 1.518 4.393 3.893 0 4.286-5.929 4.643-6.179 7.196h4.143V12.32h2.25z"
                                                />
                                              </svg>
                                            </ForwardRef(Superscript)>
                                          </Icon>
                                        </Superscript>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <FormatIconButton
                                  format="subscript"
                                  icon={<Subscript />}
                                >
                                  <ToolbarIconButton
                                    active={false}
                                    icon={<Subscript />}
                                    onMouseDown={[Function]}
                                  >
                                    <ForwardRef
                                      active={false}
                                      onMouseDown={[Function]}
                                    >
                                      <button
                                        className="icon-button"
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "border": "#00000000 1px solid",
                                          }
                                        }
                                      >
                                        <Subscript>
                                          <Icon
                                            aria-label="subscript"
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              }
                                            }
                                            data-category="legacy"
                                            fill="currentColor"
                                            height="1em"
                                            width="1em"
                                          >
                                            <ForwardRef(Subscript)
                                              aria-hidden={true}
                                              aria-label="subscript"
                                              className="rs-icon"
                                              data-category="legacy"
                                              fill="currentColor"
                                              focusable={false}
                                              height="1em"
                                              width="1em"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-label="subscript"
                                                className="rs-icon"
                                                data-category="legacy"
                                                fill="currentColor"
                                                focusable={false}
                                                height="1em"
                                                viewBox="0 0 28 32"
                                                width="1em"
                                              >
                                                <path
                                                  d="M16.018 24.446v2.982h-4.429l-2.839-4.5-.429-.75a.944.944 0 01-.196-.375h-.054c-.036.125-.107.25-.161.375-.107.214-.268.5-.446.786l-2.768 4.464H.089v-2.982h2.286l3.518-5.196-3.304-4.857H.143v-3h4.929l2.482 4.071c.161.25.286.518.411.75.107.125.161.25.196.375h.054c.036-.125.107-.25.196-.375l.446-.75 2.5-4.071h4.589v3h-2.232l-3.286 4.768 3.643 5.286h1.946zm11.411 3.875V32H18.25l-.071-.482c-.018-.268-.054-.589-.054-.821 0-4.875 6.25-5.286 6.25-7.875 0-.929-.839-1.554-1.786-1.554-.696 0-1.286.321-1.732.696a5.742 5.742 0 00-.643.679L18.339 21a5.883 5.883 0 011.125-1.179c.75-.607 1.839-1.161 3.357-1.161 2.589 0 4.393 1.518 4.393 3.893 0 4.268-5.929 4.625-6.179 7.196h4.143V28.32h2.25z"
                                                />
                                              </svg>
                                            </ForwardRef(Subscript)>
                                          </Icon>
                                        </Subscript>
                                      </button>
                                    </ForwardRef>
                                  </ToolbarIconButton>
                                </FormatIconButton>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <ForwardRef
                                  format="link"
                                  icon={<Link />}
                                >
                                  <Whisper
                                    placement="top"
                                    speaker={
                                      <Popover>
                                        <LinkMenu />
                                      </Popover>
                                    }
                                    trigger="none"
                                  >
                                    <OverlayTrigger
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <LinkMenu />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <ForwardRef
                                        active={false}
                                        onMouseDown={[Function]}
                                      >
                                        <button
                                          className="icon-button"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "border": "#00000000 1px solid",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "15px",
                                              }
                                            }
                                          >
                                            <Link>
                                              <Icon
                                                aria-label="link"
                                                as={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                data-category="legacy"
                                                fill="currentColor"
                                                height="1em"
                                                width="1em"
                                              >
                                                <ForwardRef(Link)
                                                  aria-hidden={true}
                                                  aria-label="link"
                                                  className="rs-icon"
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  focusable={false}
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-label="link"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    viewBox="0 0 30 32"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                    />
                                                  </svg>
                                                </ForwardRef(Link)>
                                              </Icon>
                                            </Link>
                                          </div>
                                        </button>
                                      </ForwardRef>
                                      <Component>
                                        <Portal
                                          containerInfo={<body />}
                                        >
                                          <Overlay
                                            childrenProps={
                                              Object {
                                                "id": undefined,
                                              }
                                            }
                                            placement="top"
                                            rootClose={true}
                                            triggerTarget={
                                              Object {
                                                "current": <button
                                                  class="icon-button"
                                                  style="border: 1px solid #00000000;"
                                                >
                                                  <div
                                                    style="min-width: 15px;"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      aria-label="link"
                                                      class="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      viewBox="0 0 30 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M26 21.714c0-.464-.179-.893-.5-1.214l-3.714-3.714a1.733 1.733 0 00-1.214-.5c-.518 0-.929.196-1.286.571.589.589 1.286 1.089 1.286 2 0 .946-.768 1.714-1.714 1.714-.911 0-1.411-.696-2-1.286-.375.357-.589.768-.589 1.304 0 .446.179.893.5 1.214l3.679 3.696c.321.321.768.482 1.214.482s.893-.161 1.214-.464l2.625-2.607c.321-.321.5-.75.5-1.196zM13.446 9.125c0-.446-.179-.893-.5-1.214L9.267 4.215c-.321-.321-.768-.5-1.214-.5s-.893.179-1.214.482L4.214 6.804a1.702 1.702 0 000 2.41l3.714 3.714c.321.321.768.482 1.214.482.518 0 .929-.179 1.286-.554-.589-.589-1.286-1.089-1.286-2 0-.946.768-1.714 1.714-1.714.911 0 1.411.696 2 1.286.375-.357.589-.768.589-1.304zm15.983 12.589a5.11 5.11 0 01-1.518 3.625l-2.625 2.607a5.106 5.106 0 01-3.625 1.482 5.077 5.077 0 01-3.643-1.518l-3.679-3.696a5.106 5.106 0 01-1.482-3.625c0-1.411.571-2.75 1.571-3.732l-1.571-1.571a5.187 5.187 0 01-3.714 1.571 5.165 5.165 0 01-3.643-1.5l-3.714-3.714A5.09 5.09 0 01.286 8a5.11 5.11 0 011.518-3.625l2.625-2.607A5.106 5.106 0 018.054.286c1.375 0 2.679.536 3.643 1.518L15.376 5.5a5.106 5.106 0 011.482 3.625c0 1.411-.571 2.75-1.571 3.732l1.571 1.571a5.187 5.187 0 013.714-1.571c1.357 0 2.679.536 3.643 1.5l3.714 3.714a5.09 5.09 0 011.5 3.643z"
                                                      />
                                                    </svg>
                                                  </div>
                                                </button>,
                                              }
                                            }
                                          />
                                        </Portal>
                                      </Component>
                                    </OverlayTrigger>
                                  </Whisper>
                                </ForwardRef>
                                <ToolbarDivider>
                                  <Divider
                                    style={
                                      Object {
                                        "height": "1.5em",
                                      }
                                    }
                                    vertical={true}
                                  >
                                    <div
                                      aria-orientation="vertical"
                                      className="rs-divider rs-divider-vertical"
                                      role="separator"
                                      style={
                                        Object {
                                          "height": "1.5em",
                                        }
                                      }
                                    />
                                  </Divider>
                                </ToolbarDivider>
                                <ForwardRef
                                  icon={<SmileO />}
                                >
                                  <Whisper
                                    placement="top"
                                    speaker={
                                      <Popover>
                                        <EmojiPicker
                                          setEmoji={[Function]}
                                        />
                                      </Popover>
                                    }
                                    trigger="none"
                                  >
                                    <OverlayTrigger
                                      placement="top"
                                      speaker={
                                        <Popover>
                                          <EmojiPicker
                                            setEmoji={[Function]}
                                          />
                                        </Popover>
                                      }
                                      trigger="none"
                                    >
                                      <ForwardRef
                                        active={false}
                                        onMouseDown={[Function]}
                                      >
                                        <button
                                          className="icon-button"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "border": "#00000000 1px solid",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "15px",
                                              }
                                            }
                                          >
                                            <SmileO>
                                              <Icon
                                                aria-label="smile o"
                                                as={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                data-category="legacy"
                                                fill="currentColor"
                                                height="1em"
                                                width="1em"
                                              >
                                                <ForwardRef(SmileO)
                                                  aria-hidden={true}
                                                  aria-label="smile o"
                                                  className="rs-icon"
                                                  data-category="legacy"
                                                  fill="currentColor"
                                                  focusable={false}
                                                  height="1em"
                                                  width="1em"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-label="smile o"
                                                    className="rs-icon"
                                                    data-category="legacy"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="1em"
                                                    viewBox="0 0 27 32"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M20.25 19.196C19.357 22.071 16.732 24 13.714 24s-5.643-1.929-6.536-4.804c-.196-.607.143-1.232.75-1.429.589-.196 1.232.143 1.429.75a4.543 4.543 0 004.357 3.196c2 0 3.768-1.286 4.357-3.196a1.15 1.15 0 011.446-.75c.589.196.929.821.732 1.429zm-8.821-7.767c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zm9.142 0c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zM25.143 16c0-6.304-5.125-11.429-11.429-11.429S2.285 9.696 2.285 16 7.41 27.429 13.714 27.429 25.143 22.304 25.143 16zm2.286 0c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SmileO)>
                                              </Icon>
                                            </SmileO>
                                          </div>
                                        </button>
                                      </ForwardRef>
                                      <Component>
                                        <Portal
                                          containerInfo={<body />}
                                        >
                                          <Overlay
                                            childrenProps={
                                              Object {
                                                "id": undefined,
                                              }
                                            }
                                            placement="top"
                                            rootClose={true}
                                            triggerTarget={
                                              Object {
                                                "current": <button
                                                  class="icon-button"
                                                  style="border: 1px solid #00000000;"
                                                >
                                                  <div
                                                    style="min-width: 15px;"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      aria-label="smile o"
                                                      class="rs-icon"
                                                      data-category="legacy"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      viewBox="0 0 27 32"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M20.25 19.196C19.357 22.071 16.732 24 13.714 24s-5.643-1.929-6.536-4.804c-.196-.607.143-1.232.75-1.429.589-.196 1.232.143 1.429.75a4.543 4.543 0 004.357 3.196c2 0 3.768-1.286 4.357-3.196a1.15 1.15 0 011.446-.75c.589.196.929.821.732 1.429zm-8.821-7.767c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zm9.142 0c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zM25.143 16c0-6.304-5.125-11.429-11.429-11.429S2.285 9.696 2.285 16 7.41 27.429 13.714 27.429 25.143 22.304 25.143 16zm2.286 0c0 7.571-6.143 13.714-13.714 13.714S.001 23.571.001 16 6.144 2.286 13.715 2.286 27.429 8.429 27.429 16z"
                                                      />
                                                    </svg>
                                                  </div>
                                                </button>,
                                              }
                                            }
                                          />
                                        </Portal>
                                      </Component>
                                    </OverlayTrigger>
                                  </Whisper>
                                </ForwardRef>
                              </div>
                            </div>
                          </div>
                        </Toolbar>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "color": "#cad5e4",
                            }
                          }
                        >
                          blocks.richText.startWriting
                        </div>
                        <Editable
                          onBlur={[Function]}
                          onKeyDown={[Function]}
                          readOnly={false}
                          renderElement={[Function]}
                          renderLeaf={[Function]}
                        >
                          <div
                            contentEditable={true}
                            data-gramm={false}
                            data-slate-editor={true}
                            data-slate-node="value"
                            onBeforeInput={[Function]}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onCopy={[Function]}
                            onCut={[Function]}
                            onDragOver={[Function]}
                            onDragStart={[Function]}
                            onDrop={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onPaste={[Function]}
                            role="textbox"
                            style={
                              Object {
                                "outline": "none",
                                "whiteSpace": "pre-wrap",
                                "wordWrap": "break-word",
                              }
                            }
                            suppressContentEditableWarning={true}
                          >
                            <Children
                              decorate={[Function]}
                              decorations={Array []}
                              node={
                                Object {
                                  "addMark": [Function],
                                  "apply": [Function],
                                  "children": Array [
                                    Object {
                                      "children": Array [
                                        Object {
                                          "text": "",
                                        },
                                      ],
                                      "type": "paragraph",
                                    },
                                  ],
                                  "deleteBackward": [Function],
                                  "deleteForward": [Function],
                                  "deleteFragment": [Function],
                                  "getFragment": [Function],
                                  "history": Object {
                                    "redos": Array [],
                                    "undos": Array [],
                                  },
                                  "insertBreak": [Function],
                                  "insertData": [Function],
                                  "insertFragment": [Function],
                                  "insertNode": [Function],
                                  "insertText": [Function],
                                  "isInline": [Function],
                                  "isVoid": [Function],
                                  "marks": null,
                                  "normalizeNode": [Function],
                                  "onChange": [Function],
                                  "operations": Array [],
                                  "redo": [Function],
                                  "removeMark": [Function],
                                  "selection": null,
                                  "setFragmentData": [Function],
                                  "undo": [Function],
                                }
                              }
                              renderElement={[Function]}
                              renderLeaf={[Function]}
                              selection={null}
                            >
                              <Element
                                decorate={[Function]}
                                decorations={Array []}
                                element={
                                  Object {
                                    "children": Array [
                                      Object {
                                        "text": "",
                                      },
                                    ],
                                    "type": "paragraph",
                                  }
                                }
                                key="4"
                                renderElement={[Function]}
                                renderLeaf={[Function]}
                                selection={null}
                              >
                                <p
                                  data-slate-node="element"
                                >
                                  <Children
                                    decorate={[Function]}
                                    decorations={Array []}
                                    node={
                                      Object {
                                        "children": Array [
                                          Object {
                                            "text": "",
                                          },
                                        ],
                                        "type": "paragraph",
                                      }
                                    }
                                    renderElement={[Function]}
                                    renderLeaf={[Function]}
                                    selection={null}
                                  >
                                    <Text
                                      decorations={Array []}
                                      isLast={true}
                                      key="5"
                                      parent={
                                        Object {
                                          "children": Array [
                                            Object {
                                              "text": "",
                                            },
                                          ],
                                          "type": "paragraph",
                                        }
                                      }
                                      renderLeaf={[Function]}
                                      text={
                                        Object {
                                          "text": "",
                                        }
                                      }
                                    >
                                      <span
                                        data-slate-node="text"
                                      >
                                        <Leaf
                                          isLast={true}
                                          key="5-0"
                                          leaf={
                                            Object {
                                              "text": "",
                                            }
                                          }
                                          parent={
                                            Object {
                                              "children": Array [
                                                Object {
                                                  "text": "",
                                                },
                                              ],
                                              "type": "paragraph",
                                            }
                                          }
                                          renderLeaf={[Function]}
                                          text={
                                            Object {
                                              "text": "",
                                            }
                                          }
                                        >
                                          <span
                                            data-slate-leaf={true}
                                          >
                                            <String
                                              isLast={true}
                                              leaf={
                                                Object {
                                                  "text": "",
                                                }
                                              }
                                              parent={
                                                Object {
                                                  "children": Array [
                                                    Object {
                                                      "text": "",
                                                    },
                                                  ],
                                                  "type": "paragraph",
                                                }
                                              }
                                              text={
                                                Object {
                                                  "text": "",
                                                }
                                              }
                                            >
                                              <ZeroWidthString
                                                isLineBreak={true}
                                              >
                                                <span
                                                  data-slate-length={0}
                                                  data-slate-zero-width="n"
                                                >
                                                  ﻿
                                                  <br />
                                                </span>
                                              </ZeroWidthString>
                                            </String>
                                          </span>
                                        </Leaf>
                                      </span>
                                    </Text>
                                  </Children>
                                </p>
                              </Element>
                            </Children>
                          </div>
                        </Editable>
                      </Slate>
                    </Memo(RichTextBlock)>
                  </div>
                </div>
              </div>
            </Panel>
          </div>
        </PanelGroup>
      </div>
    </ModalBody>
  </DrawerBody>
  <Drawer
    onClose={[Function]}
    open={false}
    size="sm"
  >
    <Modal
      animation={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      animationProps={
        Object {
          "placement": "right",
        }
      }
      className="rs-drawer-right"
      classPrefix="drawer"
      drawer={true}
      onClose={[Function]}
      open={false}
      size="sm"
    >
      <OverlayModal
        animationProps={
          Object {
            "placement": "right",
          }
        }
        backdrop={true}
        backdropClassName="rs-drawer-backdrop"
        backdropTransitionTimeout={150}
        className="rs-drawer-wrapper"
        containerClassName="rs-drawer-has-backdrop"
        dialogTransitionTimeout={300}
        onClick={[Function]}
        onClose={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExited={[Function]}
        open={false}
        transition={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
      />
    </Modal>
  </Drawer>
  <Drawer
    open={false}
    size="sm"
  >
    <Modal
      animation={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      animationProps={
        Object {
          "placement": "right",
        }
      }
      className="rs-drawer-right"
      classPrefix="drawer"
      drawer={true}
      open={false}
      size="sm"
    >
      <OverlayModal
        animationProps={
          Object {
            "placement": "right",
          }
        }
        backdrop={true}
        backdropClassName="rs-drawer-backdrop"
        backdropTransitionTimeout={150}
        className="rs-drawer-wrapper"
        containerClassName="rs-drawer-has-backdrop"
        dialogTransitionTimeout={300}
        onClick={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExited={[Function]}
        open={false}
        transition={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
      />
    </Modal>
  </Drawer>
</AuthorEditPanel>
`;
