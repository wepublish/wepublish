// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Peer Edit Panel should be able to generate a new peering 1`] = `
<PeerEditPanel
  hostURL="localhost:4000"
>
  <DrawerHeader>
    <ModalHeader
      classPrefix="drawer-header"
    >
      <div
        className="rs-drawer-header"
      >
        <CloseButton
          className="rs-drawer-header-close"
        >
          <span
            aria-label="Close"
            className="rs-drawer-header-close rs-btn-close"
            role="button"
            title="Close"
          >
            <Close>
              <Icon
                aria-label="close"
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                data-category="application"
                fill="currentColor"
                height="1em"
                width="1em"
              >
                <ForwardRef(Close)
                  aria-hidden={true}
                  aria-label="close"
                  className="rs-icon"
                  data-category="application"
                  fill="currentColor"
                  focusable={false}
                  height="1em"
                  width="1em"
                >
                  <svg
                    aria-hidden={true}
                    aria-label="close"
                    className="rs-icon"
                    data-category="application"
                    fill="currentColor"
                    focusable={false}
                    height="1em"
                    viewBox="0 0 16 16"
                    width="1em"
                  >
                    <path
                      d="M2.784 2.089l.069.058 5.146 5.147 5.146-5.147a.5.5 0 01.765.638l-.058.069L8.705 8l5.147 5.146a.5.5 0 01-.638.765l-.069-.058-5.146-5.147-5.146 5.147a.5.5 0 01-.765-.638l.058-.069L7.293 8 2.146 2.854a.5.5 0 01.638-.765z"
                    />
                  </svg>
                </ForwardRef(Close)>
              </Icon>
            </Close>
          </span>
        </CloseButton>
        <DrawerTitle>
          <Modal.Title
            classPrefix="drawer-title"
          >
            <h4
              className="rs-drawer-title"
            >
              peerList.panels.createPeer
            </h4>
          </Modal.Title>
        </DrawerTitle>
        <DrawerActions>
          <ModalFooter
            classPrefix="drawer-actions"
          >
            <div
              className="rs-drawer-actions"
            >
              <Button
                appearance="primary"
                disabled={true}
                onClick={[Function]}
              >
                <button
                  aria-disabled={true}
                  className="rs-btn rs-btn-primary rs-btn-disabled"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                >
                  peerList.panels.create
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
              <Button
                appearance="subtle"
                onClick={[Function]}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  peerList.panels.close
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
            </div>
          </ModalFooter>
        </DrawerActions>
      </div>
    </ModalHeader>
  </DrawerHeader>
  <DrawerBody>
    <ModalBody
      classPrefix="drawer-body"
    >
      <div
        className="rs-drawer-body"
        style={Object {}}
      >
        <Panel>
          <div
            className="rs-panel"
          >
            <div
              className="rs-panel-body"
              role="region"
            >
              <Form
                fluid={true}
              >
                <form
                  className="rs-form rs-form-vertical rs-form-fluid"
                  onSubmit={[Function]}
                >
                  <FormGroup>
                    <div
                      className="rs-form-group"
                      role="group"
                    >
                      <FormControlLabel>
                        <label
                          className="rs-form-control-label"
                          id={null}
                        >
                          peerList.panels.name
                        </label>
                      </FormControlLabel>
                      <FormControl
                        name="peerList.panels.name"
                        onChange={[Function]}
                        value="something peer name"
                      >
                        <div
                          className="rs-form-control rs-form-control-wrapper"
                        >
                          <Input
                            aria-describedby={null}
                            aria-labelledby={null}
                            name="peerList.panels.name"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value="something peer name"
                          >
                            <input
                              aria-describedby={null}
                              aria-labelledby={null}
                              className="rs-input"
                              name="peerList.panels.name"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                              value="something peer name"
                            />
                          </Input>
                          <FormErrorMessage
                            aria-relevant="all"
                            className="rs-form-control-message-wrapper"
                            id="undefined-error-message"
                            placement="bottomStart"
                            role="alert"
                            show={false}
                          />
                        </div>
                      </FormControl>
                    </div>
                  </FormGroup>
                  <FormGroup>
                    <div
                      className="rs-form-group"
                      role="group"
                    >
                      <FormControlLabel>
                        <label
                          className="rs-form-control-label"
                          id={null}
                        >
                          peerList.panels.URL
                        </label>
                      </FormControlLabel>
                      <FormControl
                        name="peerList.panels.URL"
                        onChange={[Function]}
                        value="https://host-url.ch/"
                      >
                        <div
                          className="rs-form-control rs-form-control-wrapper"
                        >
                          <Input
                            aria-describedby={null}
                            aria-labelledby={null}
                            name="peerList.panels.URL"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value="https://host-url.ch/"
                          >
                            <input
                              aria-describedby={null}
                              aria-labelledby={null}
                              className="rs-input"
                              name="peerList.panels.URL"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                              value="https://host-url.ch/"
                            />
                          </Input>
                          <FormErrorMessage
                            aria-relevant="all"
                            className="rs-form-control-message-wrapper"
                            id="undefined-error-message"
                            placement="bottomStart"
                            role="alert"
                            show={false}
                          />
                        </div>
                      </FormControl>
                    </div>
                  </FormGroup>
                  <FormGroup>
                    <div
                      className="rs-form-group"
                      role="group"
                    >
                      <FormControlLabel>
                        <label
                          className="rs-form-control-label"
                          id={null}
                        >
                          peerList.panels.token
                        </label>
                      </FormControlLabel>
                      <FormControl
                        name="peerList.panels.token"
                        onChange={[Function]}
                        value="abc123def456"
                      >
                        <div
                          className="rs-form-control rs-form-control-wrapper"
                        >
                          <Input
                            aria-describedby={null}
                            aria-labelledby={null}
                            name="peerList.panels.token"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value="abc123def456"
                          >
                            <input
                              aria-describedby={null}
                              aria-labelledby={null}
                              className="rs-input"
                              name="peerList.panels.token"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                              value="abc123def456"
                            />
                          </Input>
                          <FormErrorMessage
                            aria-relevant="all"
                            className="rs-form-control-message-wrapper"
                            id="undefined-error-message"
                            placement="bottomStart"
                            role="alert"
                            show={false}
                          />
                        </div>
                      </FormControl>
                    </div>
                  </FormGroup>
                  <Button
                    appearance="primary"
                    className="fetchButton"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <button
                      aria-disabled={false}
                      className="fetchButton rs-btn rs-btn-primary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      peerList.panels.getRemote
                      <Ripple>
                        <span
                          className="rs-ripple-pond"
                        >
                          <Transition
                            enteringClassName="rs-ripple-rippling"
                            in={false}
                            onEntered={[Function]}
                            timeout={1000}
                          >
                            <span
                              className="rs-ripple"
                            />
                          </Transition>
                        </span>
                      </Ripple>
                    </button>
                  </Button>
                </form>
              </Form>
            </div>
          </div>
        </Panel>
      </div>
    </ModalBody>
  </DrawerBody>
</PeerEditPanel>
`;

exports[`Peer Edit Panel should render 1`] = `
<PeerEditPanel
  hostURL="localhost:4000"
>
  <DrawerHeader>
    <ModalHeader
      classPrefix="drawer-header"
    >
      <div
        className="rs-drawer-header"
      >
        <CloseButton
          className="rs-drawer-header-close"
        >
          <span
            aria-label="Close"
            className="rs-drawer-header-close rs-btn-close"
            role="button"
            title="Close"
          >
            <Close>
              <Icon
                aria-label="close"
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                data-category="application"
                fill="currentColor"
                height="1em"
                width="1em"
              >
                <ForwardRef(Close)
                  aria-hidden={true}
                  aria-label="close"
                  className="rs-icon"
                  data-category="application"
                  fill="currentColor"
                  focusable={false}
                  height="1em"
                  width="1em"
                >
                  <svg
                    aria-hidden={true}
                    aria-label="close"
                    className="rs-icon"
                    data-category="application"
                    fill="currentColor"
                    focusable={false}
                    height="1em"
                    viewBox="0 0 16 16"
                    width="1em"
                  >
                    <path
                      d="M2.784 2.089l.069.058 5.146 5.147 5.146-5.147a.5.5 0 01.765.638l-.058.069L8.705 8l5.147 5.146a.5.5 0 01-.638.765l-.069-.058-5.146-5.147-5.146 5.147a.5.5 0 01-.765-.638l.058-.069L7.293 8 2.146 2.854a.5.5 0 01.638-.765z"
                    />
                  </svg>
                </ForwardRef(Close)>
              </Icon>
            </Close>
          </span>
        </CloseButton>
        <DrawerTitle>
          <Modal.Title
            classPrefix="drawer-title"
          >
            <h4
              className="rs-drawer-title"
            >
              peerList.panels.createPeer
            </h4>
          </Modal.Title>
        </DrawerTitle>
        <DrawerActions>
          <ModalFooter
            classPrefix="drawer-actions"
          >
            <div
              className="rs-drawer-actions"
            >
              <Button
                appearance="primary"
                disabled={true}
                onClick={[Function]}
              >
                <button
                  aria-disabled={true}
                  className="rs-btn rs-btn-primary rs-btn-disabled"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                >
                  peerList.panels.create
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
              <Button
                appearance="subtle"
                onClick={[Function]}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  peerList.panels.close
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
            </div>
          </ModalFooter>
        </DrawerActions>
      </div>
    </ModalHeader>
  </DrawerHeader>
  <DrawerBody>
    <ModalBody
      classPrefix="drawer-body"
    >
      <div
        className="rs-drawer-body"
        style={Object {}}
      >
        <Panel>
          <div
            className="rs-panel"
          >
            <div
              className="rs-panel-body"
              role="region"
            >
              <Form
                fluid={true}
              >
                <form
                  className="rs-form rs-form-vertical rs-form-fluid"
                  onSubmit={[Function]}
                >
                  <FormGroup>
                    <div
                      className="rs-form-group"
                      role="group"
                    >
                      <FormControlLabel>
                        <label
                          className="rs-form-control-label"
                          id={null}
                        >
                          peerList.panels.name
                        </label>
                      </FormControlLabel>
                      <FormControl
                        name="peerList.panels.name"
                        onChange={[Function]}
                        value=""
                      >
                        <div
                          className="rs-form-control rs-form-control-wrapper"
                        >
                          <Input
                            aria-describedby={null}
                            aria-labelledby={null}
                            name="peerList.panels.name"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value=""
                          >
                            <input
                              aria-describedby={null}
                              aria-labelledby={null}
                              className="rs-input"
                              name="peerList.panels.name"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                              value=""
                            />
                          </Input>
                          <FormErrorMessage
                            aria-relevant="all"
                            className="rs-form-control-message-wrapper"
                            id="undefined-error-message"
                            placement="bottomStart"
                            role="alert"
                            show={false}
                          />
                        </div>
                      </FormControl>
                    </div>
                  </FormGroup>
                  <FormGroup>
                    <div
                      className="rs-form-group"
                      role="group"
                    >
                      <FormControlLabel>
                        <label
                          className="rs-form-control-label"
                          id={null}
                        >
                          peerList.panels.URL
                        </label>
                      </FormControlLabel>
                      <FormControl
                        name="peerList.panels.URL"
                        onChange={[Function]}
                        value=""
                      >
                        <div
                          className="rs-form-control rs-form-control-wrapper"
                        >
                          <Input
                            aria-describedby={null}
                            aria-labelledby={null}
                            name="peerList.panels.URL"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value=""
                          >
                            <input
                              aria-describedby={null}
                              aria-labelledby={null}
                              className="rs-input"
                              name="peerList.panels.URL"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                              value=""
                            />
                          </Input>
                          <FormErrorMessage
                            aria-relevant="all"
                            className="rs-form-control-message-wrapper"
                            id="undefined-error-message"
                            placement="bottomStart"
                            role="alert"
                            show={false}
                          />
                        </div>
                      </FormControl>
                    </div>
                  </FormGroup>
                  <FormGroup>
                    <div
                      className="rs-form-group"
                      role="group"
                    >
                      <FormControlLabel>
                        <label
                          className="rs-form-control-label"
                          id={null}
                        >
                          peerList.panels.token
                        </label>
                      </FormControlLabel>
                      <FormControl
                        name="peerList.panels.token"
                        onChange={[Function]}
                        value=""
                      >
                        <div
                          className="rs-form-control rs-form-control-wrapper"
                        >
                          <Input
                            aria-describedby={null}
                            aria-labelledby={null}
                            name="peerList.panels.token"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value=""
                          >
                            <input
                              aria-describedby={null}
                              aria-labelledby={null}
                              className="rs-input"
                              name="peerList.panels.token"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                              value=""
                            />
                          </Input>
                          <FormErrorMessage
                            aria-relevant="all"
                            className="rs-form-control-message-wrapper"
                            id="undefined-error-message"
                            placement="bottomStart"
                            role="alert"
                            show={false}
                          />
                        </div>
                      </FormControl>
                    </div>
                  </FormGroup>
                  <Button
                    appearance="primary"
                    className="fetchButton"
                    disabled={true}
                    onClick={[Function]}
                  >
                    <button
                      aria-disabled={true}
                      className="fetchButton rs-btn rs-btn-primary rs-btn-disabled"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      peerList.panels.getRemote
                      <Ripple>
                        <span
                          className="rs-ripple-pond"
                        >
                          <Transition
                            enteringClassName="rs-ripple-rippling"
                            in={false}
                            onEntered={[Function]}
                            timeout={1000}
                          >
                            <span
                              className="rs-ripple"
                            />
                          </Transition>
                        </span>
                      </Ripple>
                    </button>
                  </Button>
                </form>
              </Form>
            </div>
          </div>
        </Panel>
      </div>
    </ModalBody>
  </DrawerBody>
</PeerEditPanel>
`;

exports[`Peer Edit Panel should render with ID 1`] = `
<PeerEditPanel
  hostURL="localhost:4000"
  id="peerId1"
>
  <DrawerHeader>
    <ModalHeader
      classPrefix="drawer-header"
    >
      <div
        className="rs-drawer-header"
      >
        <CloseButton
          className="rs-drawer-header-close"
        >
          <span
            aria-label="Close"
            className="rs-drawer-header-close rs-btn-close"
            role="button"
            title="Close"
          >
            <Close>
              <Icon
                aria-label="close"
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                data-category="application"
                fill="currentColor"
                height="1em"
                width="1em"
              >
                <ForwardRef(Close)
                  aria-hidden={true}
                  aria-label="close"
                  className="rs-icon"
                  data-category="application"
                  fill="currentColor"
                  focusable={false}
                  height="1em"
                  width="1em"
                >
                  <svg
                    aria-hidden={true}
                    aria-label="close"
                    className="rs-icon"
                    data-category="application"
                    fill="currentColor"
                    focusable={false}
                    height="1em"
                    viewBox="0 0 16 16"
                    width="1em"
                  >
                    <path
                      d="M2.784 2.089l.069.058 5.146 5.147 5.146-5.147a.5.5 0 01.765.638l-.058.069L8.705 8l5.147 5.146a.5.5 0 01-.638.765l-.069-.058-5.146-5.147-5.146 5.147a.5.5 0 01-.765-.638l.058-.069L7.293 8 2.146 2.854a.5.5 0 01.638-.765z"
                    />
                  </svg>
                </ForwardRef(Close)>
              </Icon>
            </Close>
          </span>
        </CloseButton>
        <DrawerTitle>
          <Modal.Title
            classPrefix="drawer-title"
          >
            <h4
              className="rs-drawer-title"
            >
              peerList.panels.editPeer
            </h4>
          </Modal.Title>
        </DrawerTitle>
        <DrawerActions>
          <ModalFooter
            classPrefix="drawer-actions"
          >
            <div
              className="rs-drawer-actions"
            >
              <Button
                appearance="primary"
                disabled={true}
                onClick={[Function]}
              >
                <button
                  aria-disabled={true}
                  className="rs-btn rs-btn-primary rs-btn-disabled"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                >
                  peerList.panels.save
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
              <Button
                appearance="subtle"
                onClick={[Function]}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  peerList.panels.close
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
            </div>
          </ModalFooter>
        </DrawerActions>
      </div>
    </ModalHeader>
  </DrawerHeader>
  <DrawerBody>
    <ModalBody
      classPrefix="drawer-body"
    >
      <div
        className="rs-drawer-body"
        style={Object {}}
      >
        <Panel>
          <div
            className="rs-panel"
          >
            <div
              className="rs-panel-body"
              role="region"
            >
              <Form
                fluid={true}
              >
                <form
                  className="rs-form rs-form-vertical rs-form-fluid"
                  onSubmit={[Function]}
                >
                  <FormGroup>
                    <div
                      className="rs-form-group"
                      role="group"
                    >
                      <FormControlLabel>
                        <label
                          className="rs-form-control-label"
                          id={null}
                        >
                          peerList.panels.name
                        </label>
                      </FormControlLabel>
                      <FormControl
                        name="peerList.panels.name"
                        onChange={[Function]}
                        value="Test Peer Name"
                      >
                        <div
                          className="rs-form-control rs-form-control-wrapper"
                        >
                          <Input
                            aria-describedby={null}
                            aria-labelledby={null}
                            name="peerList.panels.name"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value="Test Peer Name"
                          >
                            <input
                              aria-describedby={null}
                              aria-labelledby={null}
                              className="rs-input"
                              name="peerList.panels.name"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                              value="Test Peer Name"
                            />
                          </Input>
                          <FormErrorMessage
                            aria-relevant="all"
                            className="rs-form-control-message-wrapper"
                            id="undefined-error-message"
                            placement="bottomStart"
                            role="alert"
                            show={false}
                          />
                        </div>
                      </FormControl>
                    </div>
                  </FormGroup>
                  <FormGroup>
                    <div
                      className="rs-form-group"
                      role="group"
                    >
                      <FormControlLabel>
                        <label
                          className="rs-form-control-label"
                          id={null}
                        >
                          peerList.panels.URL
                        </label>
                      </FormControlLabel>
                      <FormControl
                        name="peerList.panels.URL"
                        onChange={[Function]}
                        value="https://test-url.ch/"
                      >
                        <div
                          className="rs-form-control rs-form-control-wrapper"
                        >
                          <Input
                            aria-describedby={null}
                            aria-labelledby={null}
                            name="peerList.panels.URL"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value="https://test-url.ch/"
                          >
                            <input
                              aria-describedby={null}
                              aria-labelledby={null}
                              className="rs-input"
                              name="peerList.panels.URL"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                              value="https://test-url.ch/"
                            />
                          </Input>
                          <FormErrorMessage
                            aria-relevant="all"
                            className="rs-form-control-message-wrapper"
                            id="undefined-error-message"
                            placement="bottomStart"
                            role="alert"
                            show={false}
                          />
                        </div>
                      </FormControl>
                    </div>
                  </FormGroup>
                  <FormGroup>
                    <div
                      className="rs-form-group"
                      role="group"
                    >
                      <FormControlLabel>
                        <label
                          className="rs-form-control-label"
                          id={null}
                        >
                          peerList.panels.token
                        </label>
                      </FormControlLabel>
                      <FormControl
                        name="peerList.panels.token"
                        onChange={[Function]}
                        placeholder="peerList.panels.leaveEmpty"
                        value=""
                      >
                        <div
                          className="rs-form-control rs-form-control-wrapper"
                        >
                          <Input
                            aria-describedby={null}
                            aria-labelledby={null}
                            name="peerList.panels.token"
                            onBlur={[Function]}
                            onChange={[Function]}
                            placeholder="peerList.panels.leaveEmpty"
                            value=""
                          >
                            <input
                              aria-describedby={null}
                              aria-labelledby={null}
                              className="rs-input"
                              name="peerList.panels.token"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              placeholder="peerList.panels.leaveEmpty"
                              type="text"
                              value=""
                            />
                          </Input>
                          <FormErrorMessage
                            aria-relevant="all"
                            className="rs-form-control-message-wrapper"
                            id="undefined-error-message"
                            placement="bottomStart"
                            role="alert"
                            show={false}
                          />
                        </div>
                      </FormControl>
                    </div>
                  </FormGroup>
                  <Button
                    appearance="primary"
                    className="fetchButton"
                    disabled={true}
                    onClick={[Function]}
                  >
                    <button
                      aria-disabled={true}
                      className="fetchButton rs-btn rs-btn-primary rs-btn-disabled"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      peerList.panels.getRemote
                      <Ripple>
                        <span
                          className="rs-ripple-pond"
                        >
                          <Transition
                            enteringClassName="rs-ripple-rippling"
                            in={false}
                            onEntered={[Function]}
                            timeout={1000}
                          >
                            <span
                              className="rs-ripple"
                            />
                          </Transition>
                        </span>
                      </Ripple>
                    </button>
                  </Button>
                </form>
              </Form>
            </div>
          </div>
        </Panel>
      </div>
    </ModalBody>
  </DrawerBody>
</PeerEditPanel>
`;
