// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Token Generate Panel should be able to generate a new token 1`] = `
<TokenGeneratePanel>
  <defaultProps(defaultProps(ModalHeader))
    classPrefix="rs-drawer-header"
    closeButton={true}
  >
    <defaultProps(ModalHeader)
      classPrefix="rs-drawer-header"
      closeButton={true}
    >
      <ModalHeader
        classPrefix="rs-drawer-header"
        closeButton={true}
      >
        <div
          className="rs-drawer-header"
        >
          <button
            aria-label="Close"
            className="rs-drawer-header-close"
            type="button"
          >
            <span
              aria-hidden="true"
            >
              ×
            </span>
          </button>
          <defaultProps(defaultProps(ModalTitle))
            classPrefix="rs-drawer-title"
          >
            <defaultProps(ModalTitle)
              classPrefix="rs-drawer-title"
            >
              <ModalTitle
                classPrefix="rs-drawer-title"
              >
                <h4
                  className="rs-drawer-title"
                >
                  tokenList.panels.generateToken
                </h4>
              </ModalTitle>
            </defaultProps(ModalTitle)>
          </defaultProps(defaultProps(ModalTitle))>
        </div>
      </ModalHeader>
    </defaultProps(ModalHeader)>
  </defaultProps(defaultProps(ModalHeader))>
  <Body
    classPrefix="rs-drawer-body"
  >
    <defaultProps(ModalBody)
      classPrefix="rs-drawer-body"
    >
      <ModalBody
        classPrefix="rs-drawer-body"
      >
        <div
          className="rs-drawer-body"
          style={Object {}}
        >
          <p>
            tokenList.panels.creationSuccess
          </p>
          <defaultProps(Panel)
            bordered={true}
            classPrefix="rs-panel"
          >
            <Panel
              bordered={true}
              classPrefix="rs-panel"
            >
              <div
                className="rs-panel rs-panel-default rs-panel-bordered"
              >
                <div
                  className="rs-panel-body"
                >
                  iXBGZLn7L5bAg455FQiCrd7RUQJtgWZ5
                </div>
              </div>
            </Panel>
          </defaultProps(Panel)>
          <defaultProps(Message)
            classPrefix="rs-message"
            closeLabel="Close"
            description="tokenList.panels.tokenWarning"
            showIcon={true}
            style={
              Object {
                "marginTop": 5,
              }
            }
            type="warning"
          >
            <Message
              classPrefix="rs-message"
              closeLabel="Close"
              description="tokenList.panels.tokenWarning"
              showIcon={true}
              style={
                Object {
                  "marginTop": 5,
                }
              }
              type="warning"
            >
              <div
                className="rs-message rs-message-warning rs-message-show rs-message-has-icon"
                style={
                  Object {
                    "marginTop": 5,
                  }
                }
              >
                <div
                  className="rs-message-container"
                >
                  <div
                    className="rs-message-icon-wrapper"
                  >
                    <defaultProps(Icon)
                      classPrefix="rs-icon"
                      componentClass="i"
                      icon="remind"
                    >
                      <Icon
                        classPrefix="rs-icon"
                        componentClass="i"
                        icon="remind"
                      >
                        <i
                          className="rs-icon rs-icon-remind"
                        />
                      </Icon>
                    </defaultProps(Icon)>
                  </div>
                  <div
                    className="rs-message-content"
                  >
                    <div
                      className="rs-message-body"
                    >
                      tokenList.panels.tokenWarning
                    </div>
                  </div>
                </div>
              </div>
            </Message>
          </defaultProps(Message)>
        </div>
      </ModalBody>
    </defaultProps(ModalBody)>
  </Body>
  <defaultProps(defaultProps(ModalFooter))
    classPrefix="rs-drawer-footer"
  >
    <defaultProps(ModalFooter)
      classPrefix="rs-drawer-footer"
    >
      <ModalFooter
        classPrefix="rs-drawer-footer"
      >
        <div
          className="rs-drawer-footer"
        >
          <withStyleProps(defaultProps(Button))
            appearance="subtle"
            classPrefix="rs-btn"
            componentClass="button"
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="subtle"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="subtle"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  tokenList.panels.close
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
        </div>
      </ModalFooter>
    </defaultProps(ModalFooter)>
  </defaultProps(defaultProps(ModalFooter))>
</TokenGeneratePanel>
`;

exports[`Token Generate Panel should render 1`] = `
<TokenGeneratePanel>
  <defaultProps(defaultProps(ModalHeader))
    classPrefix="rs-drawer-header"
    closeButton={true}
  >
    <defaultProps(ModalHeader)
      classPrefix="rs-drawer-header"
      closeButton={true}
    >
      <ModalHeader
        classPrefix="rs-drawer-header"
        closeButton={true}
      >
        <div
          className="rs-drawer-header"
        >
          <button
            aria-label="Close"
            className="rs-drawer-header-close"
            type="button"
          >
            <span
              aria-hidden="true"
            >
              ×
            </span>
          </button>
          <defaultProps(defaultProps(ModalTitle))
            classPrefix="rs-drawer-title"
          >
            <defaultProps(ModalTitle)
              classPrefix="rs-drawer-title"
            >
              <ModalTitle
                classPrefix="rs-drawer-title"
              >
                <h4
                  className="rs-drawer-title"
                >
                  tokenList.panels.generateToken
                </h4>
              </ModalTitle>
            </defaultProps(ModalTitle)>
          </defaultProps(defaultProps(ModalTitle))>
        </div>
      </ModalHeader>
    </defaultProps(ModalHeader)>
  </defaultProps(defaultProps(ModalHeader))>
  <Body
    classPrefix="rs-drawer-body"
  >
    <defaultProps(ModalBody)
      classPrefix="rs-drawer-body"
    >
      <ModalBody
        classPrefix="rs-drawer-body"
      >
        <div
          className="rs-drawer-body"
          style={Object {}}
        >
          <withStyleProps(defaultProps(Input))
            classPrefix="rs-input"
            componentClass="input"
            disabled={false}
            onChange={[Function]}
            placeholder="tokenList.panels.name"
            type="text"
            value=""
          >
            <defaultProps(Input)
              className=""
              classPrefix="rs-input"
              componentClass="input"
              disabled={false}
              onChange={[Function]}
              placeholder="tokenList.panels.name"
              type="text"
              value=""
            >
              <Input
                className=""
                classPrefix="rs-input"
                componentClass="input"
                disabled={false}
                onChange={[Function]}
                placeholder="tokenList.panels.name"
                type="text"
                value=""
              >
                <input
                  className="rs-input"
                  disabled={false}
                  id={null}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  placeholder="tokenList.panels.name"
                  type="text"
                  value=""
                />
              </Input>
            </defaultProps(Input)>
          </withStyleProps(defaultProps(Input))>
        </div>
      </ModalBody>
    </defaultProps(ModalBody)>
  </Body>
  <defaultProps(defaultProps(ModalFooter))
    classPrefix="rs-drawer-footer"
  >
    <defaultProps(ModalFooter)
      classPrefix="rs-drawer-footer"
    >
      <ModalFooter
        classPrefix="rs-drawer-footer"
      >
        <div
          className="rs-drawer-footer"
        >
          <withStyleProps(defaultProps(Button))
            appearance="primary"
            classPrefix="rs-btn"
            componentClass="button"
            disabled={false}
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="primary"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              disabled={false}
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="primary"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                disabled={false}
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  tokenList.panels.generate
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
          <withStyleProps(defaultProps(Button))
            appearance="subtle"
            classPrefix="rs-btn"
            componentClass="button"
            onClick={[Function]}
            ripple={true}
          >
            <defaultProps(Button)
              appearance="subtle"
              className=""
              classPrefix="rs-btn"
              componentClass="button"
              onClick={[Function]}
              ripple={true}
            >
              <Button
                appearance="subtle"
                className=""
                classPrefix="rs-btn"
                componentClass="button"
                onClick={[Function]}
                ripple={true}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  tokenList.panels.close
                  <defaultProps(Ripple)
                    classPrefix="rs-ripple"
                  >
                    <Ripple
                      classPrefix="rs-ripple"
                    >
                      <span
                        className="rs-ripple-pond"
                      >
                        <Transition
                          enteringClassName="rs-ripple-rippling"
                          in={false}
                          onEntered={[Function]}
                          timeout={1000}
                        >
                          <span
                            className="rs-ripple"
                            style={Object {}}
                          />
                        </Transition>
                      </span>
                    </Ripple>
                  </defaultProps(Ripple)>
                </button>
              </Button>
            </defaultProps(Button)>
          </withStyleProps(defaultProps(Button))>
        </div>
      </ModalFooter>
    </defaultProps(ModalFooter)>
  </defaultProps(defaultProps(ModalFooter))>
</TokenGeneratePanel>
`;
