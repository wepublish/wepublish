// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Token Generate Panel should be able to generate a new token 1`] = `
<TokenGeneratePanel>
  <DrawerHeader>
    <ModalHeader
      classPrefix="drawer-header"
    >
      <div
        className="rs-drawer-header"
      >
        <CloseButton
          className="rs-drawer-header-close"
        >
          <span
            aria-label="Close"
            className="rs-drawer-header-close rs-btn-close"
            role="button"
            title="Close"
          >
            <Close>
              <Icon
                aria-label="close"
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                data-category="application"
                fill="currentColor"
                height="1em"
                width="1em"
              >
                <ForwardRef(Close)
                  aria-hidden={true}
                  aria-label="close"
                  className="rs-icon"
                  data-category="application"
                  fill="currentColor"
                  focusable={false}
                  height="1em"
                  width="1em"
                >
                  <svg
                    aria-hidden={true}
                    aria-label="close"
                    className="rs-icon"
                    data-category="application"
                    fill="currentColor"
                    focusable={false}
                    height="1em"
                    viewBox="0 0 16 16"
                    width="1em"
                  >
                    <path
                      d="M2.784 2.089l.069.058 5.146 5.147 5.146-5.147a.5.5 0 01.765.638l-.058.069L8.705 8l5.147 5.146a.5.5 0 01-.638.765l-.069-.058-5.146-5.147-5.146 5.147a.5.5 0 01-.765-.638l.058-.069L7.293 8 2.146 2.854a.5.5 0 01.638-.765z"
                    />
                  </svg>
                </ForwardRef(Close)>
              </Icon>
            </Close>
          </span>
        </CloseButton>
        <DrawerTitle>
          <Modal.Title
            classPrefix="drawer-title"
          >
            <h4
              className="rs-drawer-title"
            >
              tokenList.panels.generateToken
            </h4>
          </Modal.Title>
        </DrawerTitle>
        <DrawerActions>
          <ModalFooter
            classPrefix="drawer-actions"
          >
            <div
              className="rs-drawer-actions"
            >
              <Button
                appearance="subtle"
                onClick={[Function]}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  tokenList.panels.close
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
            </div>
          </ModalFooter>
        </DrawerActions>
      </div>
    </ModalHeader>
  </DrawerHeader>
  <DrawerBody>
    <ModalBody
      classPrefix="drawer-body"
    >
      <div
        className="rs-drawer-body"
        style={Object {}}
      >
        <p>
          tokenList.panels.creationSuccess
        </p>
        <Panel
          bordered={true}
        >
          <div
            className="rs-panel rs-panel-bordered"
          >
            <div
              className="rs-panel-body"
              role="region"
            >
              iXBGZLn7L5bAg455FQiCrd7RUQJtgWZ5
            </div>
          </div>
        </Panel>
        <Message
          showIcon={true}
          style={
            Object {
              "marginTop": 5,
            }
          }
          type="warning"
        >
          <div
            className="rs-message rs-message-warning rs-message-show rs-message-has-icon"
            role="alert"
            style={
              Object {
                "marginTop": 5,
              }
            }
          >
            <div
              className="rs-message-container"
            >
              <div
                className="rs-message-icon-wrapper"
              >
                <Remind>
                  <Icon
                    aria-label="remind"
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      }
                    }
                    data-category="legacy"
                    fill="currentColor"
                    height="1em"
                    width="1em"
                  >
                    <ForwardRef(Remind)
                      aria-hidden={true}
                      aria-label="remind"
                      className="rs-icon"
                      data-category="legacy"
                      fill="currentColor"
                      focusable={false}
                      height="1em"
                      width="1em"
                    >
                      <svg
                        aria-hidden={true}
                        aria-label="remind"
                        className="rs-icon"
                        data-category="legacy"
                        fill="currentColor"
                        focusable={false}
                        height="1em"
                        viewBox="0 0 14 14"
                        width="1em"
                      >
                        <path
                          d="M8.021 1.101l5.832 10.509a1.168 1.168 0 01-1.021 1.734H1.167a1.167 1.167 0 01-1.02-1.734L5.979 1.101a1.167 1.167 0 012.041 0zM7 12.177a1.167 1.167 0 100-2.334 1.167 1.167 0 000 2.334zm0-9.34c-.645 0-1.167.523-1.167 1.167v3.502a1.167 1.167 0 002.334 0V4.004c0-.645-.523-1.167-1.167-1.167z"
                        />
                      </svg>
                    </ForwardRef(Remind)>
                  </Icon>
                </Remind>
              </div>
              <div
                className="rs-message-content"
              >
                <div
                  className="rs-message-body"
                >
                  tokenList.panels.tokenWarning
                </div>
              </div>
            </div>
          </div>
        </Message>
      </div>
    </ModalBody>
  </DrawerBody>
</TokenGeneratePanel>
`;

exports[`Token Generate Panel should render 1`] = `
<TokenGeneratePanel>
  <DrawerHeader>
    <ModalHeader
      classPrefix="drawer-header"
    >
      <div
        className="rs-drawer-header"
      >
        <CloseButton
          className="rs-drawer-header-close"
        >
          <span
            aria-label="Close"
            className="rs-drawer-header-close rs-btn-close"
            role="button"
            title="Close"
          >
            <Close>
              <Icon
                aria-label="close"
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                data-category="application"
                fill="currentColor"
                height="1em"
                width="1em"
              >
                <ForwardRef(Close)
                  aria-hidden={true}
                  aria-label="close"
                  className="rs-icon"
                  data-category="application"
                  fill="currentColor"
                  focusable={false}
                  height="1em"
                  width="1em"
                >
                  <svg
                    aria-hidden={true}
                    aria-label="close"
                    className="rs-icon"
                    data-category="application"
                    fill="currentColor"
                    focusable={false}
                    height="1em"
                    viewBox="0 0 16 16"
                    width="1em"
                  >
                    <path
                      d="M2.784 2.089l.069.058 5.146 5.147 5.146-5.147a.5.5 0 01.765.638l-.058.069L8.705 8l5.147 5.146a.5.5 0 01-.638.765l-.069-.058-5.146-5.147-5.146 5.147a.5.5 0 01-.765-.638l.058-.069L7.293 8 2.146 2.854a.5.5 0 01.638-.765z"
                    />
                  </svg>
                </ForwardRef(Close)>
              </Icon>
            </Close>
          </span>
        </CloseButton>
        <DrawerTitle>
          <Modal.Title
            classPrefix="drawer-title"
          >
            <h4
              className="rs-drawer-title"
            >
              tokenList.panels.generateToken
            </h4>
          </Modal.Title>
        </DrawerTitle>
        <DrawerActions>
          <ModalFooter
            classPrefix="drawer-actions"
          >
            <div
              className="rs-drawer-actions"
            >
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
              >
                <button
                  aria-disabled={false}
                  className="rs-btn rs-btn-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  tokenList.panels.generate
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
              <Button
                appearance="subtle"
                onClick={[Function]}
              >
                <button
                  className="rs-btn rs-btn-subtle"
                  onClick={[Function]}
                  type="button"
                >
                  tokenList.panels.close
                  <Ripple>
                    <span
                      className="rs-ripple-pond"
                    >
                      <Transition
                        enteringClassName="rs-ripple-rippling"
                        in={false}
                        onEntered={[Function]}
                        timeout={1000}
                      >
                        <span
                          className="rs-ripple"
                        />
                      </Transition>
                    </span>
                  </Ripple>
                </button>
              </Button>
            </div>
          </ModalFooter>
        </DrawerActions>
      </div>
    </ModalHeader>
  </DrawerHeader>
  <DrawerBody>
    <ModalBody
      classPrefix="drawer-body"
    >
      <div
        className="rs-drawer-body"
        style={Object {}}
      >
        <Input
          disabled={false}
          onChange={[Function]}
          placeholder="tokenList.panels.name"
          value=""
        >
          <input
            className="rs-input"
            disabled={false}
            onChange={[Function]}
            onKeyDown={[Function]}
            placeholder="tokenList.panels.name"
            type="text"
            value=""
          />
        </Input>
      </div>
    </ModalBody>
  </DrawerBody>
</TokenGeneratePanel>
`;
