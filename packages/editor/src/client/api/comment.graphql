fragment FullComment on Comment {
  id

  state
  rejectionReason

  user {
    ...FullUser
  }

  revisions {
    text
    createdAt
  }

  createdAt
  modifiedAt
}

query CommentList(
  $after: ID
  $before: ID
  $first: Int
  $last: Int
  $skip: Int
  $order: SortOrder
  $sort: CommentSort
) {
  comments(
    after: $after
    before: $before
    first: $first
    last: $last
    skip: $skip
    order: $order
    sort: $sort
  ) {
    nodes {
      ...FullComment
    }

    pageInfo {
      startCursor
      endCursor
      hasNextPage
      hasPreviousPage
    }

    totalCount
  }
}

mutation ApproveComment($id: ID!) {
  approveComment(id: $id) {
    state
  }
}

mutation RejectComment($id: ID!, $rejectionReason: CommentRejectionReason!) {
  rejectComment(id: $id, rejectionReason: $rejectionReason) {
    state
    rejectionReason
  }
}

mutation RequestChangesOnComment($id: ID!, $rejectionReason: CommentRejectionReason!) {
  requestChangesOnComment(id: $id, rejectionReason: $rejectionReason) {
    state
    rejectionReason
  }
}
