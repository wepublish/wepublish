mutation CreatePoll($opensAt: DateTime, $closesAt: DateTime, $question: String) {
    createPoll(opensAt: $opensAt, closesAt: $closesAt, question: $question) {
        id
        question
        opensAt
        closedAt
        answers {
            id
            pollId
            answer
        }
    }
}

mutation UpdatePoll($pollId: ID!, $opensAt: DateTime, $closedAt: DateTime, $question: String, $answers: [UpdatePollAnswer!], $externalVoteSources: [UpdatePollExternalVoteSources!]) {
    updatePoll(pollId: $pollId, opensAt: $opensAt, closedAt: $closedAt, question: $question, answers: $answers, externalVoteSources: $externalVoteSources) {
        id
        question
        opensAt
        closedAt
        answers {
            id
            pollId
            answer
            votes
        }
        externalVoteSources {
            id
            source
            voteAmounts {
                id
                answerId
                amount
            }
        }
    }
}

mutation DeletePoll($deletePollId: ID!) {
    deletePoll(id: $deletePollId) {
        id
    }
}

mutation CreatePollAnswer($pollId: ID!, $answer: String) {
    createPollAnswer(pollId: $pollId, answer: $answer) {
        answer
        id
        pollId
    }
}

mutation DeletePollAnswer($deletePollAnswerId: ID!) {
    deletePollAnswer(id: $deletePollAnswerId) {
        id
    }
}


query Polls($cursor: ID, $take: Int, $skip: Int, $filter: PollFilter, $sort: PollSort, $order: SortOrder) {
    polls(cursor: $cursor, take: $take, skip: $skip, filter: $filter, sort: $sort, order: $order) {
        nodes {
            id
            question
            opensAt
            closedAt
        }
        pageInfo {
            startCursor
            endCursor
            hasNextPage
            hasPreviousPage
        }
        totalCount
    }
}

query Poll($pollId: ID) {
    poll(id: $pollId) {
        id
        question
        opensAt
        closedAt
        answers {
            id
            pollId
            answer
            votes
        }
        externalVoteSources {
            id
            source
            voteAmounts {
                id
                answerId
                amount
            }
        }
    }
}
